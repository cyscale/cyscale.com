{"version":3,"file":"component---src-pages-cloud-security-risk-assessment-js-df8435e655737376851a.js","mappings":"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","sources":["webpack://cyscale-gatsby/./src/hooks/useKeyPress.js","webpack://cyscale-gatsby/./src/hooks/useScreenOrientation.js","webpack://cyscale-gatsby/./src/hooks/useOutsideClick.js","webpack://cyscale-gatsby/./src/components/campaigns/cspm-solutin/CyscaleVideo.js","webpack://cyscale-gatsby/./src/hooks/useLockBodyScroll.js"],"sourcesContent":["import { useCallback, useEffect } from 'react';\n\nconst useKeyPress = (targetKey, ref, fn) => {\n    const downHandler = useCallback(\n        ({ key }) => {\n            if (key === 'Escape' && key === targetKey) {\n                ref.current.pause();\n                fn(false);\n            }\n        },\n        [targetKey, ref, fn]\n    );\n\n    useEffect(() => {\n        window.addEventListener('keydown', downHandler);\n        return () => {\n            window.removeEventListener('keydown', downHandler);\n        };\n    }, [downHandler]);\n};\n\nexport default useKeyPress;\n","import { useState, useEffect } from 'react';\nimport { getOrientation, isIPhone, isSafari } from '../common/utils';\n\nconst isBrowser = () => typeof window !== 'undefined';\n\nconst useScreenOrientation = () => {\n    const [orientation, setOrientation] = useState(\n        isSafari || isIPhone() ? getOrientation() : (isBrowser() && window.screen.orientation.type) || null\n    );\n\n    useEffect(() => {\n        const handleOrientationChange = () =>\n            setOrientation(isSafari || isIPhone() ? getOrientation() : window.screen.orientation.type);\n\n        window.addEventListener('orientationchange', handleOrientationChange);\n        return () => window.removeEventListener('orientationchange', handleOrientationChange);\n    }, []);\n\n    return orientation;\n};\n\nexport default useScreenOrientation;\n","import { useEffect } from 'react';\n\nfunction useOnClickOutside(ref, handler) {\n    useEffect(() => {\n        const listener = (event) => {\n            if (Object.keys(ref.current || {}).length === Object.keys(event.target || {}).length || ref === null) {\n                return;\n            }\n            handler(event);\n        };\n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n        return () => {\n            document.removeEventListener('mousedown', listener);\n            document.removeEventListener('touchstart', listener);\n        };\n    }, [ref, handler]);\n}\n\nexport default useOnClickOutside;\n","import React, { useRef } from 'react';\nimport useLockBodyScroll from '../../../hooks/useLockBodyScroll';\nimport menuCloseCookiesModal from '../../../assets/images/menuCloseCookiesModal.svg';\nimport useKeyPress from '../../../hooks/useKeyPress';\nimport FocusLock from 'react-focus-lock';\nimport useScreenOrientation from '../../../hooks/useScreenOrientation';\nimport classNames from 'classnames';\nimport useMediaQuery from '../../../hooks/useMediaQuery';\nimport useOnClickOutside from '../../../hooks/useOutsideClick';\n\nconst VideoCyscale = ({ setModal, videoUrl }) => {\n    const videoRef = React.useRef(null);\n    const wrapperRef = useRef(null);\n    const orientation = useScreenOrientation();\n    const matches = useMediaQuery('(max-height: 420px)');\n\n    useOnClickOutside(videoRef, () => {\n        if (videoRef !== null) {\n            videoRef.current.pause();\n        }\n        setModal(false);\n    });\n    useLockBodyScroll();\n    useKeyPress('Escape', videoRef, setModal);\n\n    const onCloseVideo = () => {\n        videoRef.current.pause();\n        setModal(false);\n    };\n\n    /* eslint-disable */\n    return (\n        <div\n            className='w-screen h-screen fixed top-0 left-0 right-0 bottom-0 cursor-default object-contain'\n            style={{ zIndex: 102 }}\n        >\n            <FocusLock>\n                <div className='flex justify-center items-center' style={{ height: '100vh' }}>\n                    <div\n                        ref={wrapperRef}\n                        className={classNames('relative', {\n                            'max-w-6xl': !(orientation === 'landscape-primary' && matches),\n                            'max-w-2xl': orientation === 'landscape-primary' && matches\n                        })}\n                    >\n                        <button\n                            type='button'\n                            className='top-6 right-6 inline-block absolute cursor-pointer z-40'\n                            onClick={onCloseVideo}\n                            tabIndex='0'\n                        >\n                            <img src={menuCloseCookiesModal} alt='toggle menu' width={15} height={15} />\n                        </button>\n                        <video width='auto' height='auto' autoPlay controls tabIndex='2' ref={videoRef}>\n                            <source src={videoUrl} type='video/mp4' />\n                            Your browser does not support the video tag.\n                        </video>\n                    </div>\n                </div>\n            </FocusLock>\n        </div>\n    );\n};\n\nexport default VideoCyscale;\n","import { useLayoutEffect } from 'react';\n\nconst useLockBodyScroll = () => {\n    useLayoutEffect(() => {\n        const originalStyle = window.getComputedStyle(document.body).overflow;\n\n        document.body.style.overflow = 'hidden';\n\n        return () => (document.body.style.overflow = originalStyle);\n    }, []);\n};\n\nexport default useLockBodyScroll;\n"],"names":["useKeyPress","targetKey","ref","fn","downHandler","useCallback","_ref","key","current","pause","useEffect","window","addEventListener","removeEventListener","useScreenOrientation","orientation","setOrientation","useState","isSafari","isIPhone","getOrientation","screen","type","handleOrientationChange","handler","listener","event","Object","keys","length","target","document","setModal","videoUrl","videoRef","React","wrapperRef","useRef","matches","useMediaQuery","useOnClickOutside","useLockBodyScroll","___EmotionJSX","className","style","zIndex","FocusLock","height","classNames","onClick","onCloseVideo","tabIndex","src","menuCloseCookiesModal","alt","width","autoPlay","controls","useLayoutEffect","originalStyle","getComputedStyle","body","overflow"],"sourceRoot":""}