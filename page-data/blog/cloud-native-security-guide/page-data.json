{"componentChunkName":"component---src-template-blog-template-js","path":"/blog/cloud-native-security-guide/","result":{"pageContext":{"alldata":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["CSPM"],"title":"Cloud-Native Security: A Comprehensive Guide to Securing Your Technology Stack ","seoTitle":"Cloud-Native Security: A Comprehensive Guide to Securing Your Technology Stack ","description":"An article about cloud native security. We understand the advantages of cloud-native applications based on on-premises applications, as well as look at how to secure your cloud native application. The 4 layers that should be considered when securing cloud-native apps are at code, container, cluster and cloud levels.","seoDescription":"A comprehensive guide to securing your technology stack from the perspective of cloud-native security. We understand the advantages of cloud-native applications based on on-premises applications, as well as look at how to secure your cloud native application. The 4 layers that should be considered when securing cloud-native apps are at code, container, cluster and cloud levels. You can identify misconfigurations in the cloud and remediate them effectively using Cyscale.","date":"2022-06-24T10:33:17.619Z","featuredpost":true,"permalink":"cloud-native-security-guide","featuredimage":{"publicURL":"/static/0de03e043d84516277681fb35c5e48f0/cloud-native.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/0de03e043d84516277681fb35c5e48f0/23056/cloud-native.jpg","srcSet":"/static/0de03e043d84516277681fb35c5e48f0/41be8/cloud-native.jpg 205w,\n/static/0de03e043d84516277681fb35c5e48f0/65de8/cloud-native.jpg 410w,\n/static/0de03e043d84516277681fb35c5e48f0/23056/cloud-native.jpg 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/0de03e043d84516277681fb35c5e48f0/913d0/cloud-native.webp 205w,\n/static/0de03e043d84516277681fb35c5e48f0/85995/cloud-native.webp 410w,\n/static/0de03e043d84516277681fb35c5e48f0/02dc4/cloud-native.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":461}}}},"rawMarkdownBody":"<!--StartFragment-->\n\n<div id=\"what-does-cloud-native-mean\">\n\n## What does cloud-native mean?\n\n</div>\n\nDepending on the method they were built upon, we have three categories of applications that make use of cloud technology: \n\n* Cloud-native, \n* Cloud-based, \n* Cloud-enabled. \n\n**A cloud-native application** is developed and deployed in the cloud in its entirety.  \n\nThis type of application is containerized, for example in Docker or Kubernetes, to ensure isolated, dependency-free environments, and most of the time uses microservices to divide tasks and provide granularity.  \n\n**Cloud-based applications** are built and run outside the cloud but have certain features integrated into the cloud. \n\n**A cloud-enabled or non-native application** is originally meant for an on-premises environment. It is built outside the cloud and later transferred into one, in order to enjoy some of its benefits. \n\n<div id=\"advantages\">\n\n## Advantages of going cloud-native\n\n</div>\n\nTo better understand the differences between cloud-native and on-premises applications that do not use cloud, we will look at the former’s advantages and disadvantages over the latter’s.\n\n##### Speed \n\nNative applications are easier and faster to build and deploy than on-premises ones because no sophisticated software or hardware requirements need to be fulfilled. Moreover, updates are also implemented faster and require no downtime. \n\n##### Cost \n\nThe cost of using cloud-native technology depends on the application but is generally lower since it does not require the purchase of expensive hardware. Typically, cloud-native applications only require software licenses or subscriptions. \n\n##### Scalability \n\nSince native applications do not require hardware upgrades, they are scalable and adaptable to business requirements. \n\n##### Resiliency \n\nThe cloud is known for its resiliency against natural disasters, power outages and other incidents that may disrupt a cloud-enabled application. Native cloud workloads are therefore more resilient. \n\n##### A serverless model \n\nCloud-native applications may work on a serverless model by leaving the provisioning and maintaining tasks to the cloud provider. This model simplifies the deployment steps and eases the developer's work, increasing productivity. \n\nMoreover, using this model, cloud-native applications can be launched only when needed, the code responding to triggers and consuming resources when necessary. An advantage is that costs are reduced for applications. \n\n<div id=\"guide-to-secure-cloud\">\n\n## How to secure your cloud-native application\n\n</div>\n\nAccording to [Kubernetes](https://kubernetes.io/docs/concepts/security/overview/), cloud-native security can be approached in 4 layers, called the 4 C’s: \n\n1. Code, \n2. Container, \n3. Cluster, \n4. Cloud. \n\n### Code \n\nThe inner layer of security refers to the code; it is the part the application’s developer has the most control over, yet it can be one of a hacker's most appealing attack surfaces. \n\nApplication code security is usually an underrated security mechanism and neglecting it can lead to disastrous outcomes. Here are a few recommendations about securing code: \n\n* **Sanitize input.** This can go a long way and prevent vulnerabilities such as SQL injection, cross-site scripting, and others. \n* **Use encryption.** Data at rest and data in transit should always be encrypted. Make sure you’re sending application data encrypted through TLS. \n* **Ensure modern cryptography.** Even if you’re using encryption and hashing, make sure that: \n\n  * You’re not using deprecated algorithms, such as DES for encryption and MD5 for hashing, Instead, use AES and SHA-256 or newer, which are the current standards. \n  * You’re storing cryptographic keys safely (and not in the source code). \n  * You’re rotating keys regularly to safeguard against brute-force attacks on them. \n* **Only open the ports you’re using.** Don’t forget open ports, especially on internet-facing applications. This is one of the ways attackers can gain access to the cloud infrastructure. \n\n### Container \n\nThe next layer of security for native cloud is controlled at the container level. \n\nContainers are virtualization tools which allow you to run applications in isolated environments, separated from the hardware.  \n\nIf your application uses various technologies, you can install any needed packages and resolve dependencies in the container instead of on the host operating system. \n\nAnother useful feature of containers is that you can create image templates and replicate environments without having to re-install tools and technologies. \n\nThe most known containerization services are Docker and Kubernetes.  \n\nDocker is a platform that enables developers to deploy applications in a containerized environment. Docker runs over a single node (machine), while Kubernetes is a container orchestration service. \n\nDocker and Kubernetes are usually seen as competitors, but they work very well together; Kubernetes can help manage multiple Docker containers simultaneously. \n\nHowever, there are a few security issues that need to be addressed regarding containers: \n\n* **Do not run containers as root.** Developers find it easier to run containers as root because they don't have to provide their password when executing an action that requires root privileges. However, this opens up a wide palette of vulnerabilities; any attacker that would gain access to the container would have root privileges and, therefore, the highest level of permissions. \n* **Reduce the attack surface.** If an attacker gains access to the container, make sure they cannot escalate their privileges or escape the container; eliminate the use of UNIX binaries that can be used to bypass rules, such as \"sed\" and \"awk\". \n* **Implement a strong network policy**—for example, filter traffic to and from the container and use firewalls to ensure robust security. \n\n### Cluster \n\nThe third layer for cloud-native security is managed in clusters. \n\nA cluster is a set of nodes (machines) that run applications in containers. It comprises the nodes and a control plane, which is responsible for the maintenance of the nodes, determining for example which application is running in which container. \n\nThe nodes that are part of a cluster run the applications. \n\nLet’s understand how to secure clusters: \n\n* **Implement Authentication.** This step requires the user to prove they are who they claim to be. The authentication process may be different from service to service, but it can require credentials like passwords, client certificates, tokens, and others. \n* **Implement Authorization.** Role-based access control (RBAC) establishes authorization by assigning roles to users and managing their privileges at role level. \n* **Control what privileges containers run with.** Establish permissions by using security contexts. These are settings that can be applied to a container or a set of containers inside a cluster that define privileges and access control. \n\n### Cloud \n\nThe outer layer of a cloud-native application refers to cloud infrastructure and configuration. Let’s see how to fix [the most common cloud misconfigurations](https://cyscale.com/use-cases/cloud-misconfigurations/) and secure your cloud-native application against attackers. \n\n* **Restrict inbound and outbound traffic.** Make sure to close or restrict ports that are not necessary. Use access lists to blacklist ranges of IPs and ports.  \n* **Ensure compliance with the Least Privilege Principle.** Make sure no user has more privileges than required to carry out their tasks and eliminate all administrator/root accounts that are not strictly necessary. \n* **Implement strong encryption and use industry-recommended cryptographic algorithms with strong keys.** Ensure that no one can read databases, files, and other resources if they gain access to your company's cloud. \n\nYou can identify misconfigurations in the cloud and remediate them effectively using Cyscale. \n\nCyscale offers a [CSPM (Cloud Security Posture Management)](https://cyscale.com/blog/what-to-look-for-in-a-cspm/) tool that: \n\n* checks for a wide variety of vulnerabilities, \n* provides integration with the most important cloud vendors like AWS, GCP, Azure, Alibaba, \n* sends relevant alerts,  \n* provides remediation steps to secure your cloud environment effectively, and others. \n\n<!--EndFragment-->"},"suggestions":[{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["News","Product"],"title":"Introducing the New Data Security Dashboard!","seoTitle":"Introducing the New Data Security Dashboard!","description":"We have released a new, powerful Data Security Dashboard to provide visibility in the cloud. The Dashboard displays information about encryption, the management of cryptographic keys, publicly accessible storage assets such as VMs, databases, buckets, and others, databases and misconfigurations related to them, containers such as blobs and buckets that may vulnerable, and others. These DSPM (Data Security Posture Management) capabilities enable users to detect attack paths for data storage assets and quickly mitigate them.   ","seoDescription":"We have released a new, powerful Data Security Dashboard to provide visibility in the cloud. The Dashboard displays information about encryption, the management of cryptographic keys, publicly accessible storage assets such as VMs, databases, buckets, and others, databases and misconfigurations related to them, containers such as blobs and buckets that may vulnerable, and others. These DSPM (Data Security Posture Management) capabilities enable users to detect attack paths for data storage assets and quickly mitigate them.   ","date":"2022-12-15T09:34:35.185Z","featuredpost":true,"permalink":"data-security-dashboard","featuredimage":{"publicURL":"/static/465888743eccc713980548e3ce448797/30_blog-cover-image.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/465888743eccc713980548e3ce448797/d6cae/30_blog-cover-image.png","srcSet":"/static/465888743eccc713980548e3ce448797/ac644/30_blog-cover-image.png 205w,\n/static/465888743eccc713980548e3ce448797/89b47/30_blog-cover-image.png 410w,\n/static/465888743eccc713980548e3ce448797/d6cae/30_blog-cover-image.png 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/465888743eccc713980548e3ce448797/913d0/30_blog-cover-image.webp 205w,\n/static/465888743eccc713980548e3ce448797/91660/30_blog-cover-image.webp 410w,\n/static/465888743eccc713980548e3ce448797/888e2/30_blog-cover-image.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":460}}}},"rawMarkdownBody":"<!--StartFragment-->\n\nWe have released a new, powerful Data Security Dashboard to provide the visibility you need for your cloud. The Dashboard displays information about: \n\n* Encryption, \n* The management of cryptographic keys, \n* Publicly accessible storage assets such as VMs, databases, [buckets](https://cyscale.com/blog/s3-bucket-security/), and others, \n* Databases and misconfigurations related to them, \n* Containers such as blobs and buckets that may vulnerable, and others. \n\nThese DSPM (Data Security Posture Management) capabilities enable users to detect attack paths for data storage assets and quickly mitigate them.  \n\nThe first section of the dashboard shows us the percentage of storage assets that are:  \n\n* unencrypted,  \n* encrypted with provider-managed-key, and  \n* encrypted with CMK (Customer Managed Key).  \n\n<img src=\"/img/30_blog-encryption-status.png\" alt=\"Progress card for encryption status\" title=\"Progress card for encryption status\" class=\" blog-image-shadow \" style=\"width:autorem;height:autorem;\"/>\n\nThis card is a good indicator of progress, and, by clicking on each section of the status bar, we see which assets fit in each of those states. Using this feature, you are at a click away from finding out which of your storage cloud assets are unencrypted. \n\nThe next section contains the Publicly Accessible card, which provides visibility over a multitude of assets, as you can see in the image below. When you click on each element, you see a list of affected assets, along with the associated risk. \n\n<img src=\"/img/30_blog-publicly-accessible.png\" alt=\"Publicly accessible cloud assets\" title=\"Publicly accessible cloud assets\" class=\" blog-image-shadow \" style=\"width:autorem;height:autorem;\"/>\n\nLet’s look at this feature in more detail to understand how this helps secure your cloud infrastructure. \n\nThe “**Readable Object Containers**” and “**Writable Object Containers**” refer to storage assets such as [buckets](https://cyscale.com/blog/s3-bucket-security/) and blobs. Object containers should not be publicly accessible unless it is necessary, since individuals could then read or overwrite possibly sensitive data without having to perform any kind of authentication or authorization. \n\nThe next item in this section highlights **database instances that have public IP addresses**. Databases should be configured with private IP addresses to reduce attack surface and increase security. \n\nThe last items in this list are publicly accessible: \n\n* **queues**,  \n* **encryption keys**, and  \n* **disks**.  \n\n[Cloud queues](https://cyscale.com/blog/cloud-queues-security-best-practices/) act like buffers to prevent data loss when services are too busy and cannot process incoming messages, and therefore should not be publicly accessible to prevent data leakage or data tampering. The control regarding encryption keys checks for attached policies that may allow public access to the key. The other control ensures there are no disks attached to VMs reachable from the internet. \n\nThe next card on the Data Security Dashboard provides an overview of the [encryption keys](https://cyscale.com/blog/protecting-data-at-rest/) used in your cloud infrastructure. Cryptographic key management is a very important but sometimes overlooked aspect of the encryption process.  \n\n<img src=\"/img/30_blog-encryption-keys.png\" alt=\"Cryptographic key management in Cyscale\" title=\"Cryptographic key management in Cyscale\" class=\" blog-image-shadow \" style=\"width:autorem;height:autorem;\"/>\n\nCyscale checks if the encryption keys are stored on a vulnerable VM or if they have a permissive access policy to identify possible attack paths. Moreover, important information is highlighted, such as: \n\n* keys that are in use and are scheduled for deletion, \n* keys that haven’t been rotated in a long time, and \n* keys that will expire soon. \n\nThe next two sections in this dashboard focus on object containers, such as buckets or blobs, and on [databases](https://cyscale.com/blog/best-practices-for-securing-databases/). Here, you can see some of the categories of vulnerabilities Cyscale has identified and checked your cloud environment against.  \n\nThe first card presents the state of your object containers. \n\n<img src=\"/img/30_blog-object-containers.png\" alt=\"Object containers with issues\" title=\"Object containers with issues\" class=\" blog-image-shadow \" style=\"width:31.3125rem;height:autorem;\"/>\n\nUsing this feature, we identify attack paths that may compromise your cloud assets and help you solve them. \n\nFor example, a common attack is exploiting VMs that have open management ports. If you have a VM that has permissions on a bucket, and that VM is compromised, your bucket may be compromised as well.  \n\nUsing the [Cyscale Knowledge Graph](https://cyscale.com/blog/security-knowledge-graph-integrations/), you can see that the VM named \"sql-instance\" has an instance profile that gives it full access to the bucket on the far right, and the VM also has port 22 (SSH) open. The VM is thus connected to the internet and therefore puts the data stored in the bucket at risk. \n\n<img src=\"/img/30_blog-bucket.png\" alt=\"Cyscale Knowledge Graph highlighting an attack path\" title=\"Cyscale Knowledge Graph\" class=\" blog-image-shadow \" style=\"width:autorem;height:autorem;\"/>\n\nOther critical issues highlighted for object containers include: \n\n* Enabling public access to storage assets, \n* Having an overly-permissive access policy,  \n* Not enabling versioning, and others. \n\nClicking on “Object containers with public access”, we get a list of misconfigured assets as well as details like: \n\n* Connectors, which represents the cloud or identity provider account, \n* Tags,  \n* Risks. \n\n<img src=\"/img/2022-12-09-11_27-cyscale-_-data-security-brave.png\" alt=\"List of misconfigured assets\" title=\"List of misconfigured assets\" class=\" blog-image-shadow \" style=\"width:autorem;height:autorem;\"/>\n\nMoving on to the databases card, using controls, Cyscale checks for the following misconfigurations: \n\n* **Databases with public IP addresses,** \n* **Databases with outdated engine versions,** \n* **Databases without deletion protection,** \n* **Databases with no encryption,** \n* **Databases with no/old TLS.** \n\n<img src=\"/img/30_blog-databases.png\" alt=\"Databases with issues in Cyscale\" title=\"Databases with issues in Cyscale\" class=\" blog-image-shadow \" style=\"width:autorem;height:autorem;\"/>\n\nUse the multitude of features present in the Cyscale Data Security Dashboard to eliminate data exposure through [data storage misconfigurations](https://cyscale.com/whitepaper/cloud-storage-misconfigurations/). Check out our product in the [playground](https://cyscale.com/playground/) or [schedule a demo with us](https://cyscale.com/request-demo) to start your cloud security journey! \n\n<!--EndFragment-->"}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["CSPM","Compliance"],"title":"Cloud Security and Compliance: A Guide for Your Cloud Infrastructure","seoTitle":"Cloud Security and Compliance: A Guide for Your Cloud Infrastructure","description":"Cloud security and compliance go hand-in-hand. Following security best practices automatically improves your compliance scores, while being compliant with international standards demonstrates that your company is preoccupied with data security and makes efforts to secure its environments. Cloud security best practices include using contextual security, encrypting data, having strong IAM policies. Accredited compliance standards described in the article are ISO 27001, SOC 2, PCI-DSS, HIPAA, GDPR. Use Cyscale to secure your cloud environment and become compliant with respected accreditations.","seoDescription":"Cloud security and compliance go hand-in-hand. Following security best practices automatically improves your compliance scores, while being compliant with international standards demonstrates that your company is preoccupied with data security and makes efforts to secure its environments. Cloud security best practices include using contextual security, encrypting data, having strong IAM policies. Accredited compliance standards described in the article are ISO 27001, SOC 2, PCI-DSS, HIPAA, GDPR. Use Cyscale to secure your cloud environment and become compliant with respected accreditations.","date":"2022-12-05T08:12:56.508Z","featuredpost":true,"permalink":"cloud-security-and-compliance","featuredimage":{"publicURL":"/static/dc53ac7e558c823a522ffae0c087148a/29_blog-cloud-and-compliance.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/dc53ac7e558c823a522ffae0c087148a/d6cae/29_blog-cloud-and-compliance.png","srcSet":"/static/dc53ac7e558c823a522ffae0c087148a/ac644/29_blog-cloud-and-compliance.png 205w,\n/static/dc53ac7e558c823a522ffae0c087148a/89b47/29_blog-cloud-and-compliance.png 410w,\n/static/dc53ac7e558c823a522ffae0c087148a/d6cae/29_blog-cloud-and-compliance.png 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/dc53ac7e558c823a522ffae0c087148a/913d0/29_blog-cloud-and-compliance.webp 205w,\n/static/dc53ac7e558c823a522ffae0c087148a/91660/29_blog-cloud-and-compliance.webp 410w,\n/static/dc53ac7e558c823a522ffae0c087148a/888e2/29_blog-cloud-and-compliance.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":460}}}},"rawMarkdownBody":"<!--StartFragment-->\n\nCloud security and compliance go hand-in-hand. Following security best practices automatically improves your compliance scores, while being compliant with international standards demonstrates that your company is preoccupied with data security and makes efforts to secure its environments.  \n\nIn this article, we will look at both cloud security best practices and compliance standards to construct a comprehensive view on how to secure cloud environments while addressing the most common industry compliance frameworks. \n\n## Cloud security  \n\n### 1. Contextual security \n\nNot often do you see contextual security supporting a security program. However, understanding the consequences of each misconfiguration is an essential step to securing your cloud infrastructure since it can help you prioritize remediation work. \n\nA knowledge graph is the perfect data model to support a contextual security analysis that more accurately indicates risk. Cyscale’s [Security Knowledge Graph](https://cyscale.com/products/security-knowledge-graph/) provides a comprehensive view of your cloud assets and the relations between them.  \n\n[This all-inclusive graph](https://euc-word-edit.officeapps.live.com/we/The%20Cyscale%20Security%20Knowledge%20Graph%E2%84%A2%20is%20an%20all-inclusive%20graph%20that%20provides%20correlations%20between%20all%20of%20your%20cloud%20assets,%20as%20well%20as%20other%20apps%20and%20systems%20that%20may%20affect%20cloud%20security%20posture,%20and%20automatically%20pinpoints%20security%20issues.) highlights risk contextually and helps you make better sense of your cloud security posture. \n\n<img src=\"/img/29_blog-knowledge-graph.png\" alt=\"The Cyscale Security Knowledge Graph™\" title=\"The Cyscale Security Knowledge Graph™\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\n### 2. IAM  \n\nWhen we think of cloud security, the first thing that comes to our mind is Identity and Access Management (IAM). IAM is described as a set of rules and policies that establish who can access what resources. Authentication and authorization are the security principles that tackle these issues. \n\nSome key configurations you can make to ensure a strong [IAM policy](https://cyscale.com/blog/iam-best-practices-from-aws-azure-gcp/) are: \n\n* Enable Multi-Factor Authentication (MFA), \n* Implement The Principle of Least Privilege, \n* Ensure continuous logging and monitoring, \n* Rotate credentials and keys regularly, and others. \n\n### 3. Data encryption \n\nData encryption is necessary to obtain data confidentiality and protect your assets. Data at rest is the most targeted data, and it can be protected through symmetric encryption. You can encrypt: \n\n* Databases, \n* Files, \n* Buckets, and others storage assets. \n\nIn order to perform correct encryption, ensure that you choose the suitable algorithm (for data at rest, AES is an industry-standard), store your cryptographic keys securely and away from data, rotate the keys you use, and follow other best practices described [in this article](https://cyscale.com/blog/protecting-data-at-rest/). \n\nMoreover, encrypt all data traveling to and from your cloud environment using SSL/TLS to prevent any eavesdropping attacks. \n\n## Compliance \n\nIn this article, we will look at some of the most accredited standards: \n\n* [ISO 27001](https://cyscale.com/use-cases/iso-27001-compliance/), which has been [recently updated](https://cyscale.com/blog/new-iso27001-2022-version/), \n* [SOC 2](https://cyscale.com/use-cases/soc-2/), \n* [PCI-DSS](https://cyscale.com/use-cases/pci-dss/),  \n* [HIPAA](https://cyscale.com/blog/hipaa-compliance-in-cloud/), \n* GDPR. \n\n### ISO 27001  \n\nThis standard was developed by ANSI-ASQ National Accreditation Board (ANAB) and defines security best practices for ISMSs (Information Security Management Systems). It contains 93 controls that specify rules in the following areas: \n\n* People (8 controls),  \n* Organizational (37 controls),  \n* Technological (34 controls),   \n* Physical (14 controls). \n\nAfter obtaining the accreditation, it has a three-year validity.  \n\nThe newest version of ISO 27001 was released in October 2022. You can find more details [here](https://cyscale.com/blog/new-iso27001-2022-version/). \n\n### SOC 2 \n\nSOC 2 is governed by The American Institute of Certified Public Accountants (AICPA). It also defines security rules for ISMSs, having 64 criteria that need to be fulfilled by a company to obtain this accreditation. They are grouped into five Trust Service Criteria (TSC): \n\n1. Security, \n2. Availability, \n3. Processing integrity, \n4. Confidentiality, \n5. Privacy. \n\nSOC 2 has a one-year validity. \n\nYou can find a comprehensive comparison between SOC 2 and ISO 27001 [here](https://cyscale.com/blog/soc-2-vs-ISO-27001-SaaS/). \n\n### PCI-DSS \n\nPayment Card Industry Data Security Standard (PCI-DSS) is a compliance framework that specifies security requirements regarding credit and debit card transactions performed by a company.  \n\nThis standard regulates credit card information processing, storage, and transmission.  \n\nPCI-DSS contains 12 requirements that ensure a company keeps cardholder data safe. They refer to: \n\n* firewall management,  \n* encryption of sensitive data,  \n* the security of applications and technologies,  \n* the authentication process within a company, and many more. \n\nYou can see the entire list, along with explanations, [here](https://cyscale.com/blog/pci-dss-compliance-in-cloud/). \n\n### HIPAA \n\n[The Health Insurance Portability and Accountability Act of 1996 (HIPAA)](https://cyscale.com/blog/hipaa-compliance-in-cloud/) is the most well-known standard that regulates the management of individuals’ personal health information (PHI). It is a U.S. federal law that contains three rules regarding the storage, the management, and the access rights to PHI. \n\nThe three rules are: \n\n1. The Privacy Rule, \n2. The Security Rule, \n3. The Breach Notification Rule. \n\nOne aspect of HIPAA is that the consequences of HIPAA violations are not only financial, but also criminal. \n\n### GDPR \n\nGDPR (The General Data Protection Regulation) is a security and privacy law drafted and passed by the European Union on May 25, 2018. This law affects anyone that processes EU citizen data, even if they are not from the EU. \n\nSome of the protection principles dictated by [GDPR](https://gdpr.eu/what-is-gdpr/) are: \n\n* Lawfulness, fairness and transparency, \n* Accountability, \n* Data minimization,  \n* Integrity and confidentiality, and others. \n\n  \n\nAll of these compliance standards have rigorous requirements, and the consequences of not implementing those rules can lead to financial and criminal repercussions, as well as a damaged reputation. \n\nCyscale can help you secure your cloud environment and become compliant with respected accreditations through: \n\n* Over 400 controls that help you stay on top of your security program, \n* Both pre-configured and editable policies that can be associated to controls, \n* Powerful identity and security dashboards for enhanced visibility over your cloud infrastructure, and others. \n\n<!--EndFragment-->"}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["News","Compliance","CSPM"],"title":"The New ISO 27001 2022 Version, Explained for the Cloud","seoTitle":"The New ISO 27001 2022 Version, Explained for the Cloud","description":"In October 2022, the new ISO 27001:2022 was released. In this version, the structure has changed, some controls have been merged or renamed and new controls have been added. One noteable control is Information security for the use of cloud services (A.5.23). It is the first control dedicated to cloud security. Use Cyscale to become compliant with the new ISO27001 version as well as other international standards.","seoDescription":"In October 2022, the new ISO 27001:2022 was released. In this version, the structure has changed, some controls have been merged or renamed and new controls have been added. One noteable control is Information security for the use of cloud services (A.5.23). It is the first control dedicated to cloud security. Use Cyscale to become compliant with the new ISO27001 version as well as other international standards.","date":"2022-11-23T07:20:42.751Z","featuredpost":true,"permalink":"new-iso27001-2022-version","featuredimage":{"publicURL":"/static/5e4ca4c5255f0e48b08bf12523048151/28_blog-new-iso27001.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/5e4ca4c5255f0e48b08bf12523048151/d6cae/28_blog-new-iso27001.png","srcSet":"/static/5e4ca4c5255f0e48b08bf12523048151/ac644/28_blog-new-iso27001.png 205w,\n/static/5e4ca4c5255f0e48b08bf12523048151/89b47/28_blog-new-iso27001.png 410w,\n/static/5e4ca4c5255f0e48b08bf12523048151/d6cae/28_blog-new-iso27001.png 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/5e4ca4c5255f0e48b08bf12523048151/913d0/28_blog-new-iso27001.webp 205w,\n/static/5e4ca4c5255f0e48b08bf12523048151/91660/28_blog-new-iso27001.webp 410w,\n/static/5e4ca4c5255f0e48b08bf12523048151/888e2/28_blog-new-iso27001.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":460}}}},"rawMarkdownBody":"<!--StartFragment-->\n\nIn October 2022, the new ISO 27001:2022 was released. This version is bringing considerable changes to the old [ISO 27001](https://cyscale.com/blog/ISO-27001-certification-standard-policies-procedures/). Let's examine them and understand what they might mean to your company.  \n\n## The Changes \n\n### 1. The structure of the standard has changed. \n\nInstead of 14 clauses in Annex A that categorized the controls, ISO 27001:2022 groups all controls into four themes: \n\n* People (8 controls), \n* Organizational (37 controls), \n* Technological (34 controls),  \n* Physical (14 controls). \n\n### 2. Some controls have been merged or renamed. \n\nISO 27001:2022 contains 93 controls, instead of 114. Let’s look at examples of controls that have been modified: \n\n1. **A.18.1.1** Identification of applicable legislation and contractual requirements, and \n2. **A.18.1.5** Regulation of cryptographic controls. \n\nHave been merged into: \n\n1. **A.5.31** Legal, statutory, regulatory and contractual requirements. \n\nA control that remained the same but has been moved to a different section is: \n\n> **A.18.1.2 Intellectual property rights.**  \n\nIt has been modified to: \n\n> **A.5.32 Intellectual property rights.** \n\n### 3. New controls have been added \n\nBelow, you can see the list of the 11 new controls added to Annex A of the ISO 27001:2022 standard. \n\n1. Threat intelligence (A.5.7) \n2. Information security for the use of cloud services (A.5.23) \n3. ICT readiness for business continuity (A.5.30) \n4. Physical security monitoring (A.7.4) \n5. Configuration management (A.8.9) \n6. Information deletion (A.8.10) \n7. Data masking (A.8.11) \n8. Data leakage prevention (A.8.12) \n9. Monitoring activities (A.8.16) \n10. Web filtering (A.8.23) \n11. Secure coding (A.8.28) \n\nA notable control is 5.23, “Information security for the use of cloud services”, since now, cloud security has a dedicated control. This preventative control is designed to keep risk at a minimum and regulate the management and usage of cloud services such as AWS, Azure, and GCP. This control covers confidentiality, integrity, and availability. \n\n### 4. Controls have attributes \n\nAccording to [IT Governance](https://www.itgovernance.co.uk/iso27001-and-iso27002-2022-updates), controls can now be categorized based on 5 different attributes, with the mentioned values: \n\n* **Control type** (preventive, detective, corrective) \n* **Information security properties** (confidentiality, integrity, availability) \n* **Cybersecurity concepts** (identify, protect, detect, respond, recover) \n* **Operational capabilities** (governance, asset management, etc.) \n* **Security domains** (governance and ecosystem, protection, defense, resilience) \n\nUsing these attributes, your company can organize the controls based on their scope. \n\n## What does this mean to a CISO? \n\nThe [ISO 27001](https://cyscale.com/blog/soc-2-vs-ISO-27001-SaaS/) certification has a three-year validity, and the old version of the standard will be valid until it expires. Therefore, companies have a three-year period to recertify and become compliant with the new version of ISO 27001. This means that, at the latest, companies must recertify before the 31st of October 2025.  \n\nThe process of obtaining the [ISO 27001](https://cyscale.com/use-cases/iso-27001-compliance/) certification is time-consuming and difficult. However, you can make this task easier with Cyscale. \n\nCyscale helps you become compliant with international standards by providing hundreds of controls that help you secure your cloud environment, ensure you have implemented the requirements for international standards, and also aid you when going through audits. \n\n<!--EndFragment-->"}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["CSPM"],"title":"Understanding serverless computing: how you can use it and how to secure it ","seoTitle":"Understanding serverless computing: how you can use it and how to secure it ","description":"Serverless computing is a collection of services provided by cloud vendors. It allows users to write and execute code in the cloud without setting up the environment and allocating resources such as VMs beforehand. Benefits include a pay-as-you-go model, granular updates and patches, no server management required, and others. In the industry, you can find serverless computing products like AWS Lambda, AWS Fargate, Cloud Run, Cloud Functions, Azure Serverless. Vulnerabilities may appear in serverless computing due to source code flaws, unpatched or outdates libraries or packages, information disclosure in error messages and many others.","seoDescription":"Serverless computing is a collection of services provided by cloud vendors. It allows users to write and execute code in the cloud without setting up the environment and allocating resources such as VMs beforehand. Benefits include a pay-as-you-go model, granular updates and patches, no server management required, and others. In the industry, you can find serverless computing products like AWS Lambda, AWS Fargate, Cloud Run, Cloud Functions, Azure Serverless. Vulnerabilities may appear in serverless computing due to source code flaws, unpatched or outdates libraries or packages, information disclosure in error messages and many others.","date":"2022-11-17T08:55:54.909Z","featuredpost":true,"permalink":"what-is-serverless-computing","featuredimage":{"publicURL":"/static/11efb95e47de91a57346abb685299efc/27_blog-serverless-computing.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/11efb95e47de91a57346abb685299efc/d6cae/27_blog-serverless-computing.png","srcSet":"/static/11efb95e47de91a57346abb685299efc/ac644/27_blog-serverless-computing.png 205w,\n/static/11efb95e47de91a57346abb685299efc/89b47/27_blog-serverless-computing.png 410w,\n/static/11efb95e47de91a57346abb685299efc/d6cae/27_blog-serverless-computing.png 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/11efb95e47de91a57346abb685299efc/913d0/27_blog-serverless-computing.webp 205w,\n/static/11efb95e47de91a57346abb685299efc/91660/27_blog-serverless-computing.webp 410w,\n/static/11efb95e47de91a57346abb685299efc/888e2/27_blog-serverless-computing.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":460}}}},"rawMarkdownBody":"<!--StartFragment-->\n\n## What is serverless computing? \n\nServerless computing is a collection of services provided by cloud vendors. It allows users to write and execute code in the cloud without setting up the environment and allocating resources such as VMs beforehand. \n\nBenefits of serverless computing are: \n\n* **A pay-as-you-go model**, allowing code to only run when needed, \n* **No server management required**, since your code is running in the cloud, and you don't have to deal with the environment settings, \n* **Granular updates and patches** that allow developers to make changes at function-level and quickly deploy new versions, \n* **High reliability applications**, since the code runs on the cloud. \n\n## Services offered by cloud vendors \n\nTo further understand what serverless computing has to offer, we must look at services on the market and their features.  \n\n### 1. AWS Lambda and AWS Fargate \n\n**AWS Lambda** is a compute service that allows users, through functions, to run event-driven code without server provisioning or management. AWS Lambda can be used for: \n\n* File processing, \n* Stream processing, \n* Web and mobile applications, \n* IoT backends, and others. \n\nThe event-driven flows help reduce costs for users and add flexibility. Lambda functions are triggered by events, and customers only pay for the time the code is running.  \n\nMoreover, when creating a Lambda function, you can either start writing a function from scratch, or use sample code such as Amazon’s blueprints or the AWS Serverless Application Repository to implement your desired code. \n\n**AWS Fargate** is a compute engine that provides a serverless solution for application deployment by removing the need for infrastructure management. \n\nAmazon Elastic Kubernetes Service (EKS) is a service that allows Kubernetes instances to run both in the cloud and on-premises. EKS, together with AWS Fargate, produce a serverless solution for containers. \n\nFargate can also be used with Amazon Elastic Container Service (ECS), with no additional changes required for your applications. \n\n### 2. Azure Serverless  \n\nMicrosoft Azure offers a collection of serverless compute solutions. Just like AWS Lambda, Azure Serverless enables its users to deploy code without worrying about the underlying infrastructure.  \n\nSome of the Azure compute services are: \n\n* **Serverless Functions.** Just like AWS Lambda, Azure allows users to write event-driven code in their preferred language. Costs are applied only when the code is being executed, \n* **Serverless Kubernetes.** Azure Kubernetes Service (AKS), together with AKS virtual nodes, provide a serverless solution that reduces the infrastructure management workload of Kubernetes clusters. \n* **Serverless Containerized Microservices.** With this solution, applications are deployed in containers without managing the infrastructure,  \n* **Serverless Application Environments.** Using Azure App Service, web, mobile, and API applications are hosted in a fully managed environment.  \n\nAzure also provides low-code or no-code application development with Power Apps. This feature allows developers to construct applications using drag-and-drop functionalities, connectors, and readily-available solutions for common use cases. \n\n### 3. Cloud Run and Cloud Functions by GCP \n\nThese two solutions offered by GCP provide serverless compute services.  \n\n**Cloud Run** is an application development tool that separates infrastructure management from the code by placing applications in containers. Using Cloud Run, microservices can be deployed without specific configurations. It is highly scalable, and it can scale to zero – this means that if a service has no requests, all containers are removed, reducing costs. It supports the following programming languages: Go, Python, Java, Node.js, Ruby, .NET, as well as others. \n\n**Cloud Functions** is a similar service to AWS Lambda and Azure Serverless. \n\n## Possible vulnerabilities of serverless computing \n\n### 1. Lack of source code security \n\nMany cyber attacks are successful due to poor code security.  \n\nAccording to [OWASP Top 10](https://owasp.org/www-project-top-ten/), one of the most common attacks on web applications in 2022 was SQL Injection. Whether an application is hosted in the cloud or not, user input should always be treated very carefully. \n\nTo correctly handle data received from users, you should sanitize it correctly and use prepared statements. \n\n### 2. Outdated or unpatched libraries, packages, and dependencies \n\nAnother element that affects applications' security is the libraries, packages, technologies, and dependencies used.  \n\nIn 2021, a critical vulnerability was discovered. Log4j, a popular Java framework used for logging messages in applications, introduced a massive flaw: it allowed attackers to execute arbitrary code on the host machine. This vulnerability, CVE-2021-44228, commonly known as Log4Shell, [affected around 3 billion devices](https://www.acaglobal.com/insights/log4shell-vulnerability-what-we-know-and-action-steps-take).   \n\nServerless functions in the cloud were not immune to this attack. The functions written in Java that were using Log4j were vulnerable to Log4Shell. \n\nWhile not having to deal with underlying infrastructure management is an advantage of serverless computing, technologies used by developers still have to be used safely. \n\nHow do you protect your code from such vulnerabilities? \n\n* Only use trusted libraries, \n* Apply updates and patches as they appear, \n* Continuously assess your code, \n* Remove any unnecessary dependencies. \n\n### 3. Monitor your cloud infrastructure \n\nThis measure is a given. Log and monitor what your applications do to identify any odd behavior.  \n\nDocument every event that interacts with your code and see how your applications respond.  \n\n### 4. Integrate cryptography into your code \n\n[Encrypt sensitive data](https://cyscale.com/blog/types-of-encryption/) to ensure confidentiality in your applications’ flow. You should encrypt data in transit using TLS/SSL and at rest data using AES. \n\nMoreover, safely store secrets and keys in Hardware Security Modules (HSM) or in your cloud using services such as: \n\n* Azure Key Vault,  \n* AWS Key Management Service (AWS KMS),  \n* Cloud Key Management Service in GCP. \n\nDo not store keys, connection strings, or passwords in the source code or in plain text. \n\n### 5. Too much information is disclosed in error messages. \n\nWe’ve all encountered verbose error messages. \n\nDevelopers should not disclose information about errors or exceptions to the user. Instead, they should be handled in the code, and the message displayed should offer minimal explanations without revealing why the error occurred. \n\n  \n\nWhile writing code in the cloud and quickly deploying it without infrastructure management is tempting, you should be careful.  \n\nImplement the best practices recommended in this article to address serverless computing vulnerabilities and secure your cloud environment. \n\n<!--EndFragment-->"}}],"whitepaperCover":{"data":{"whitepaperCover":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","images":{"fallback":{"src":"/static/8d4c6d8bbaf7d15683610dbc9b7fd89d/4c8e8/whitepaper-cover-blog.png","srcSet":"/static/8d4c6d8bbaf7d15683610dbc9b7fd89d/4c8e8/whitepaper-cover-blog.png 111w","sizes":"111px"},"sources":[{"srcSet":"/static/8d4c6d8bbaf7d15683610dbc9b7fd89d/891d3/whitepaper-cover-blog.webp 111w","type":"image/webp","sizes":"111px"}]},"width":111,"height":162}}}}}}},"staticQueryHashes":["2757132133","4068871638","4109069157"]}