{"componentChunkName":"component---src-template-blog-categories-template-js","path":"/blog/cnapp","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["CNAPP"],"title":"Maximize Your Container Security: 7 Best Practices You Need to Know for AWS ECS","seoTitle":"Maximize Your Container Security: 7 Best Practices You Need to Know for AWS ECS","description":"Amazon Elastic Container Service (ECS) is a highly scalable and fully managed container orchestration service offered by AWS. ECS enables users to easily deploy, scale, and manage containerized applications.  ECS provides the flexibility to choose between two launch types: EC2 and Fargate. With the EC2 launch type, containers are run on EC2 instances that you have to manage, while with Fargate, AWS manages the infrastructure for you, and you only focus on deploying and scaling containers. AWS ECS is used for microservices architecture, batch processing, CI/CD, web apps.","seoDescription":"Amazon Elastic Container Service (ECS) is a highly scalable and fully managed container orchestration service offered by AWS. ECS enables users to easily deploy, scale, and manage containerized applications.  ECS provides the flexibility to choose between two launch types: EC2 and Fargate. With the EC2 launch type, containers are run on EC2 instances that you have to manage, while with Fargate, AWS manages the infrastructure for you, and you only focus on deploying and scaling containers. AWS ECS is used for microservices architecture, batch processing, CI/CD, web apps.","date":"2023-06-23T06:15:18.782Z","featuredpost":true,"permalink":"aws-ecs-container-security","featuredimage":{"publicURL":"/static/460fbae95deb1517b7c4e1488168c6b6/43_blog-container-security-ecs.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/460fbae95deb1517b7c4e1488168c6b6/d6cae/43_blog-container-security-ecs.png","srcSet":"/static/460fbae95deb1517b7c4e1488168c6b6/ac644/43_blog-container-security-ecs.png 205w,\n/static/460fbae95deb1517b7c4e1488168c6b6/89b47/43_blog-container-security-ecs.png 410w,\n/static/460fbae95deb1517b7c4e1488168c6b6/d6cae/43_blog-container-security-ecs.png 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/460fbae95deb1517b7c4e1488168c6b6/913d0/43_blog-container-security-ecs.webp 205w,\n/static/460fbae95deb1517b7c4e1488168c6b6/91660/43_blog-container-security-ecs.webp 410w,\n/static/460fbae95deb1517b7c4e1488168c6b6/888e2/43_blog-container-security-ecs.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":460}}}},"rawMarkdownBody":"Amazon Elastic Container Service (ECS) is a highly scalable and fully managed container orchestration service offered by AWS. ECS enables users to easily deploy, scale, and manage containerized applications.  \n\nIn this article, we will explore:  \n\n* what ECS is,  \n* how it works,  \n* common vulnerabilities, and most importantly,  \n* container security best practices to maximize cybersecurity on the ECS platform. \n\n## Understanding Amazon ECS \n\nAmazon ECS is a container orchestration service that simplifies the deployment and management of containers on AWS. It allows you to run containers at scale without worrying about the underlying infrastructure.  \n\nECS provides the flexibility to choose between two launch types: EC2 and Fargate. With the EC2 launch type, containers are run on EC2 instances that you have to manage, while with Fargate, AWS manages the infrastructure for you, and you only focus on deploying and scaling containers. \n\n## What is Amazon ECS used for? \n\nECS is a service suitable for a wide range of use cases, such as \n\n* **microservices architecture**: ECS enables you to break down your application into smaller, independently deployable microservices, facilitating scalability and flexibility. \n* **batch processing**: ECS simplifies the execution of batch workloads by running containers in parallel, optimizing resource utilization, and reducing processing time. \n* **Continuous Integration/Continuous Deployment (CI/CD)**: With ECS, you can build an automated CI/CD pipeline for deploying containerized applications, ensuring faster and efficient software delivery. \n* **web applications**: ECS is ideal for hosting web apps, providing automatic scaling capabilities, load balancing, and seamless integration with other AWS services. \n\n## Common Vulnerabilities \n\nWhile ECS provides a robust container management framework, it's crucial to be aware of common vulnerabilities that can impact containerized apps: \n\n* **Inadequate IAM permissions**: Misconfigured AWS IAM roles and policies can lead to unauthorized access or privilege escalation within ECS. \n* **Vulnerable container images**: Using outdated or insecure container images that contain known security vulnerabilities can expose applications to exploitation and malware. \n* **Weak network security**: Misconfigured security groups, improper network isolation, or exposure of unnecessary ports are a few examples that can lead to unauthorized access to containers or sensitive data. \n* **Lack of logging and monitoring**: Insufficient monitoring and logging of ECS services can make detecting and responding to security incidents challenging. \n\n## Best practices for containers security on ECS \n\nSecure your production environments and improve your cloud security posture by following the best practices described in this article. \n\n### 1. Implement IAM best practices\n\nFollow the principle of least privilege by assigning granular IAM roles to ECS tasks and services. Regularly review and audit IAM policies to ensure they align with the principle of least privilege and follow AWS security best practices. Enforce strong password rules to ensure secure authentication. \n\n### 2. Secure container images \n\nUtilize secure container base images from trusted sources. Perform regular image scanning for new vulnerabilities and update container images. Leverage Dockerfile best practices to create secure and efficient Docker container images. \n\n### 3. Configure network security \n\nLeverage security groups and network ACLs to enforce fine-grained network traffic access controls for ECS containers. Only expose necessary ports and protocols, and use encryption for data in transit. Implement network segmentation by allowing connectivity only between the containers that truly need it and isolating the rest. Utilize Kubernetes network security policies to control the traffic between containers. Avoid using public IP addresses for ECS instances to prevent unintended access to your app servers. \n\n### 4. Enable logging and monitoring\n\nEnable detailed logging for ECS services and applications. Utilize AWS CloudWatch Logs to centralize logs for monitoring and analysis and turn on Container Insights for your ECS clusters. Continuous monitoring can help you identify security issues at container runtime. \n\n### 5. Manage dependencies and vulnerabilities \n\nRegularly update and patch the host operating system and other software dependencies used within your container images. Utilize vulnerability scanning tools to identify and remediate known vulnerabilities in your containerized applications. If you’re using Fargate, ensure the services are running on the latest Fargate platform version; new updates come with security patches and bug fixes.  \n\n### 6. Do not run containers as the root user \n\nRunning containers with high privileges can increase the attack surface by allowing attackers to take advantage of this misconfiguration and “escape” the containers, obtaining high privileges on the host virtual machine. This breaks the isolation of containers. Run your ECS containers as non-privileged by setting the *privileged* parameter in the container definition to *false*. \n\nMitigate security risks by implementing the recommended best practices and secure your container environment. \n\nTo ensure complete protection of your Amazon ECS instances, Cyscale provides a Containers dashboard, where you can see what assets are using them and other details about containers, as well as controls that check for ECS misconfigurations and provide alerting and remediation steps to fix findings in no time.  \n\nSome examples of security controls that you can find on the Cyscale platform are: \n\n* *Ensure ECS services don't have public IP addresses assigned to them automatically*\n* *Ensure ECS clusters use Container Insights*\n* *Ensure ECS containers run as non-privileged*\n* *Ensure ECS containers are limited to read-only access to root filesystems*\n\n\n\nCyscale - Your Trusted [Cloud Security Company](https://cyscale.com): \n\nTo ensure complete protection of your Amazon ECS instances, Cyscale offers a comprehensive Cloud Security Platform. Cyscale safeguards apps and data in the cloud with its Security Knowledge Graph™, making it easy to track security and [compliance across multi-cloud environments](https://cyscale.com/use-cases/cloud-compliance-and-auditing/). With Cyscale, you can confidently embrace your digital future.\n\nLearn more about [Container Security](https://cyscale.com/use-cases/container-security/) with Cyscale"}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["CNAPP"],"title":"Understanding Container Images: Common Vulnerabilities and Best Practices","seoTitle":"Understanding Container Images: Common Vulnerabilities and Best Practices","description":"Container images are files that contain everything needed to run software on containers: code, system tools, libraries, runtime tools. Containers are a lightweight solution that allows applications to run independently of operating systems. Containers encapsulate applications and their dependencies and provide numerous benefits, such as portability, consistency, scalability and isolation. Best practices include scanning your container images for vulnerabilities, hardening your container images, performing regular updates, using trusted base images and ensuring visibility in your cloud environment.","seoDescription":"Container images are files that contain everything needed to run software on containers: code, system tools, libraries, runtime tools. Containers are a lightweight solution that allows applications to run independently of operating systems. Containers encapsulate applications and their dependencies and provide numerous benefits, such as portability, consistency, scalability and isolation. Best practices include scanning your container images for vulnerabilities, hardening your container images, performing regular updates, using trusted base images and ensuring visibility in your cloud environment.","date":"2023-06-08T09:34:09.972Z","featuredpost":true,"permalink":"container-images-best-practices","featuredimage":{"publicURL":"/static/d1dfbbfd6058b74725f481c5f50524be/43_blog-container-images.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/d1dfbbfd6058b74725f481c5f50524be/d6cae/43_blog-container-images.png","srcSet":"/static/d1dfbbfd6058b74725f481c5f50524be/ac644/43_blog-container-images.png 205w,\n/static/d1dfbbfd6058b74725f481c5f50524be/89b47/43_blog-container-images.png 410w,\n/static/d1dfbbfd6058b74725f481c5f50524be/d6cae/43_blog-container-images.png 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/d1dfbbfd6058b74725f481c5f50524be/913d0/43_blog-container-images.webp 205w,\n/static/d1dfbbfd6058b74725f481c5f50524be/91660/43_blog-container-images.webp 410w,\n/static/d1dfbbfd6058b74725f481c5f50524be/888e2/43_blog-container-images.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":460}}}},"rawMarkdownBody":"Container images are files that contain everything needed to run software on containers: code, system tools, libraries, runtime tools. Containers are a lightweight solution that allows applications to run independently of operating systems. Containers encapsulate applications and their dependencies and provide numerous benefits, such as: \n\n* **Portability.** Because containers encapsulate everything needed to run applications, they can be moved between environments without causing the need for additional libraries or other tools. \n* **Consistency.** By including all the needed dependencies in a container image, an app will work the same across different machines; no more \"it works on my machine\". \n* **Scalability.** By leveraging container orchestration platforms like Kubernetes, you can dynamically scale containers based on demand, allowing your application to handle varying workloads effectively. \n* **Isolation.** Since the app has its own environment, it is isolated from other resources. This adds a layer of security.  \n\n## Container images vulnerabilities \n\nContainers have many advantages. However, they can also introduce unique vulnerabilities in your cloud infrastructure. Let’s look at some of them to fully understand the impact of using containerization. \n\n### 1. Vulnerable libraries. \n\nContainer images often contain third-party libraries and dependencies. It is not uncommon for libraries to have known vulnerabilities.  \n\nRegularly scanning and updating these dependencies is critical to reducing the attack surface. \n\n### 2. Insecure configurations \n\nMisconfigured container images can lead to the compromise of confidentiality of data, unauthorized access, and others. Examples of insecure settings include: \n\n* Weak access control, \n* The usage of environment variables to pass sensitive information (such as passwords or API keys), \n* Poor network settings, such as unnecessary open ports. \n\n### 3. Outdated software \n\nContainer images may contain outdated frameworks, operating systems, and libraries. If they are not regularly updated, they may have vulnerabilities. Run your applications on updated OSs and use newer versions of frameworks and libraries to ensure that your infrastructure is patched! \n\n## Common best practices \n\nWe’ve comprised a list of best practices that you should follow when using container images or when creating them: \n\n1. ### Ensure visibility in your cloud environment \n\nContainers are widely used in cloud environments due to their scalability and efficiency. To understand how container images affect your security posture, you need to gain visibility in your cloud infrastructure and grasp the context of every image in use by: \n\n* mapping cloud resources to the images they’re using, \n* identifying which of those assets have access to critical data, \n* assessing the container image configurations. \n\n2. ### Use trusted base images \n\nOnly utilize trusted images from known, reputable sources to ensure that the container images you're using are patched and have undergone security reviews. These images are not guaranteed to be completely secure, but it's a good starting point. \n\n3. ### Perform regular updates \n\nAs mentioned in the previous chapter, patch container images to avoid the use of outdated or vulnerable frameworks, libraries or operating systems.  \n\n4. ### Scan your container images for vulnerabilities \n\nScan images regularly for known vulnerabilities and make sure to address any findings. Reduce the attack surface and obtain insights into vulnerabilities present in the software components of a container image. \n\n5. ### Harden your container image \n\nReduce the attack surface of your containerized applications: \n\n1. Implement [the least privilege principle](https://cyscale.com/blog/check-for-least-privilege): do not run processes as root to prevent the possibility of privilege escalation inside your container. \n2. Disable unnecessary services and functionalities: minimize potential entry points for attackers by disabling tools that are not required. \n3. Restrict ports accessibility: do not leave networks ports open unnecessarily. \n\n## Container images – where are they present? \n\nContainer images can be used in various cloud-based services across public cloud platforms like AWS, Google Cloud, and Microsoft Azure.  \n\nThese services leverage container images to enable the seamless deployment, scaling, and management of containerized applications. \n\nExamples of services that run container images are: \n\n* ECS (Amazon Elastic Container Service), EKS (Amazon Kubernetes Service) \n* AKS (Azure Kubernetes Service), \n* GKE (Google Kubernetes Engine), and others. \n\n\n\nContainers form the foundation of modern cloud-based application deployment. Therefore, it is crucial to understand their purpose, potential vulnerabilities, and best practices for securing them. By implementing the recommended best practices and staying informed about emerging threats, your organization can secure container environments and ensure the safety of cloud-based applications. \n\nIn the dynamic landscape of cloud security, continuous learning and adaptation are paramount. As containerization continues to revolutionize the cloud industry, maintaining a strong focus on container image security will help organizations stay ahead of potential threats and safeguard their valuable assets.\n"}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["CSPM","CNAPP"],"title":"Cloud-Native Security Tools for Multi-Cloud Environments","seoTitle":"Cloud-Native Security Tools for Multi-Cloud Environments","description":"As organizations continue to move their workloads to the cloud, security concerns have become a top priority for CISOs. Cloud-native security solutions should be designed to provide contextual alerts for misconfigurations and vulnerabilities, should help organizations meet regulatory compliance requirements and automate security processes. Using Cyscale, a CNAPP tool, you can bring together multi-cloud infrastructures and secure your environment whether it is using AWS, Azure, Google Cloud or more than one provider.","seoDescription":"As organizations continue to move their workloads to the cloud, security concerns have become a top priority for CISOs. Cloud-native security solutions should be designed to provide contextual alerts for misconfigurations and vulnerabilities, should help organizations meet regulatory compliance requirements and automate security processes. Using Cyscale, a CNAPP tool, you can bring together multi-cloud infrastructures and secure your environment whether it is using AWS, Azure, Google Cloud or more than one provider.","date":"2023-05-16T10:06:37.307Z","featuredpost":true,"permalink":"cloud-native-tools-multi-cloud","featuredimage":{"publicURL":"/static/045cf43cc4592dfab689d7f63aa0f806/40_blog-cover-cnapp-multi-cloud-tools.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/045cf43cc4592dfab689d7f63aa0f806/d6cae/40_blog-cover-cnapp-multi-cloud-tools.png","srcSet":"/static/045cf43cc4592dfab689d7f63aa0f806/ac644/40_blog-cover-cnapp-multi-cloud-tools.png 205w,\n/static/045cf43cc4592dfab689d7f63aa0f806/89b47/40_blog-cover-cnapp-multi-cloud-tools.png 410w,\n/static/045cf43cc4592dfab689d7f63aa0f806/d6cae/40_blog-cover-cnapp-multi-cloud-tools.png 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/045cf43cc4592dfab689d7f63aa0f806/913d0/40_blog-cover-cnapp-multi-cloud-tools.webp 205w,\n/static/045cf43cc4592dfab689d7f63aa0f806/91660/40_blog-cover-cnapp-multi-cloud-tools.webp 410w,\n/static/045cf43cc4592dfab689d7f63aa0f806/888e2/40_blog-cover-cnapp-multi-cloud-tools.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":460}}}},"rawMarkdownBody":"As organizations continue to move their workloads to the cloud, security concerns have become a top priority for CISOs. With multi-cloud environments becoming the new norm, cloud-native security tools have emerged as the go-to solutions for securing: \n\n* cloud infrastructures,  \n* cloud-native applications,  \n* and cloud services. \n\n## What is Cloud-Native Security and How Do You Achieve it? \n\nCloud-native security refers to security measures that are specifically designed to protect cloud-native environments. As organizations adopt cloud platforms, security vulnerabilities become more complex, and traditional security solutions are no longer capable of delivering reliable insights.  \n\nTo address these challenges, cloud-native security tools should be designed to: \n\n* provide real-time, [contextual alerts for misconfigurations](https://cyscale.com/blog/prevent-alert-fatigue/),  \n* help organizations meet compliance requirements, and \n* automate security processes. \n\nThrough targeted alerts, users obtain insights into their cloud computing infrastructure and can, contextually, see how misconfigurations impact their apps. Utilizing contextual alerting, security teams can easily identify and prioritize crown jewel assets and by cutting through the noise avoid the alert fatigue which is commonplace in most organizations. \n\nTo help meet compliance requirements, cloud-native tools provide auto-generated compliance reports, aiding companies with their audit process, as well as metrics to accurately measure the progress.  \n\nBy automating security processes, DevOps teams can streamline the software development lifecycle of their applications and shift their attention to important aspects. Risk caused by human error is reduced, and security policies are guaranteed to be consistently applied across all cloud environments. \n\n## Cloud-Native Security Tools in Multi-Cloud Environments \n\nAchieving complete security and compliance in multi-cloud environments is extremely challenging. It is time-consuming to correlate all assets, their relationships, and the risk attached to them across multiple cloud service providers such as AWS, Azure, and Google Cloud as each cloud provider comes with its own tools.  \n\nLet's look at the options companies currently have to secure their cloud: \n\nFor Microsoft Azure: \n\n* Azure Defender for Cloud,  \n* Azure Active Directory,  \n* Azure Firewall, and others. \n\nFor AWS (Amazon Web Services): \n\n* AWS Identity and Access Management (IAM), \n* AWS WAF (Web Application Firewall), \n* AWS GuardDuty. \n\nFor Google Cloud: \n\n* Google Cloud Security Command Center, \n* Google Cloud IAM, \n* Google Cloud Armor. \n\nHowever, these tools are typically designed to work within their own ecosystem. To cover multi-cloud systems and to obtain a clear understanding of each system’s security, a company needs a more comprehensive, purpose-built solution. \n\nThe answer to this problem is a centralized platform for managing application security across all environments. A [CNAPP (Cloud-Native Application Protection Platform)](https://cyscale.com/blog/cnapp-secure-native-applications/) is a security solution designed to protect cloud-native applications. It combines the following functionalities: \n\n* CSPM (Cloud Security Posture Management), \n* CWPP (Cloud Workload Protection Platform), \n* CIEM (Cloud Infrastructure Entitlements Management), \n* KSPM (Kubernetes Security Posture Management, and  \n* Container security. \n\nA CNAPP tool is capable of providing: \n\n1. Visibility, \n2. Security controls, \n3. Compliance features, \n4. Container image scanning,  \n5. [IAM (Identity and Access Management)](https://cyscale.com/blog/iam-services-in-aws-azure-gcp) assessments, and many others. \n\nA key advantage of CNAPP solutions is their ability to integrate with all cloud providers. This allows them to monitor cloud workloads and provide real-time alerts and remediation steps for their users. \n\n**Cyscale** is a [CNAPP tool](https://cyscale.com/products/cnapp/) that brings together multi-cloud infrastructures and, using powerful dashboards and security controls automatically highlights misconfigurations and vulnerabilities, saving teams considerable time on remediation.  \n\nUsing this security platform, users can ensure that their cloud native technologies are in good hands. In the Cyscale app, you can find the following: \n\n* Over 400 controls across AWS, Azure, Google Cloud that check for misconfigurations and contain remediation steps to safeguard sensitive data, \n* Powerful dashboards, such as the ones for Data Security, IAM, or Containers, \n* Many compliance frameworks with editable policies and metrics to track your company’s progress and help it in the audit process, and others. \n\nIn conclusion, cloud-native security tools are essential for maintaining cybersecurity in a multi-cloud environment and delivering a consistent risk-based view to the business.\n"}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["CNAPP"],"title":"CNAPP: The Key to Cloud-Native Applications Security","seoTitle":"CNAPP: The Key to Cloud-Native Applications Security","description":"CNAPP is a security solution designed to protect cloud-native applications. A cloud-native application is an application that is intended for cloud, ran and hosted in the cloud. It has the following functionalities: CSPM, CWPP, CIEM, KSPM, Containers security. CNAPP solutions provide visibility, security controls and alerts, data security features, compliance capabilities, container image scanning, cloud workloads protection, Kubernetes Cluster inspection and IAM.","seoDescription":"CNAPP is a security solution designed to protect cloud-native applications. A cloud-native application is an application that is intended for cloud, ran and hosted in the cloud. It has the following functionalities: CSPM, CWPP, CIEM, KSPM, Containers security. CNAPP solutions provide visibility, security controls and alerts, data security features, compliance capabilities, container image scanning, cloud workloads protection, Kubernetes Cluster inspection and IAM.","date":"2023-02-21T08:00:33.696Z","featuredpost":true,"permalink":"cnapp-secure-native-applications","featuredimage":{"publicURL":"/static/af937a1ecba96ca168190cd95cf1248f/blog_34-cover.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/af937a1ecba96ca168190cd95cf1248f/d6cae/blog_34-cover.png","srcSet":"/static/af937a1ecba96ca168190cd95cf1248f/ac644/blog_34-cover.png 205w,\n/static/af937a1ecba96ca168190cd95cf1248f/89b47/blog_34-cover.png 410w,\n/static/af937a1ecba96ca168190cd95cf1248f/d6cae/blog_34-cover.png 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/af937a1ecba96ca168190cd95cf1248f/913d0/blog_34-cover.webp 205w,\n/static/af937a1ecba96ca168190cd95cf1248f/91660/blog_34-cover.webp 410w,\n/static/af937a1ecba96ca168190cd95cf1248f/888e2/blog_34-cover.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":460}}}},"rawMarkdownBody":"<!--StartFragment-->\n\n## What is CNAPP? \n\nCNAPP (Cloud-Native Application Protection Platform) is a security solution designed to protect cloud-native apps. A [cloud-native application](https://cyscale.com/blog/cloud-native-security-guide/) is an application that is intended for cloud, ran and hosted in the cloud. \n\nA CNAPP combines multiple functionalities that are otherwise found in separate tools, including:  \n\n* CSPM (Cloud Security Posture Management),  \n* CWPP (Cloud Workload Protection Platform), \n* CIEM (Cloud Infrastructure Entitlements Management), \n* KSPM (Kubernetes Security Posture Management), and \n* Containers Security. \n\nIn this article, we will understand what features a CNAPP has, and why it is a necessary tool for protecting cloud-native architectures. \n\n## Why is CNAPP needed?  \n\nSince cloud-native applications are designed using a different architecture than non-native applications, it is essential to understand the key features cloud-native applications have and the security concerns that come with them. \n\n**How is the infrastructure different?** Cloud-native software is built in containerized environments, such as those managed with Kubernetes, which can increase scalability and flexibility in the cloud, but can also introduce new concerns in terms of security.  \n\nThese types of applications are composed of microservices, which are components that communicate with each other through APIs. \n\nDue to the differences between native and non-native cloud applications, a CNAPP solution is necessary to cover the specific security needs of applications developed for the cloud.  \n\nLet’s understand some of the features CNAPP solutions provide to secure cloud-native applications. \n\n### 1. Visibility\n\nContext-aware visibility is crucial for identifying vulnerabilities in cloud-native environments. Because of the complex nature of cloud-native applications, it can become challenging to understand issues regarding the underlying infrastructure. Visibility is ensured in CSPM platforms. \n\nFor example, even though microservices communicate with each other and the application is functioning correctly, vulnerabilities may still exist. A misconfigured API gateway that controls access to microservices may permit unauthorized access.  \n\nTherefore, visibility features in CNAPP are important to identify and fix vulnerabilities in the cloud-native infrastructure. \n\n[The Cyscale Security Knowledge Graph™](https://cyscale.com/products/security-knowledge-graph/) is an all-inclusive graph that provides correlations between cloud assets, applications and systems and automatically pinpoints security issues. [The graph](https://cyscale.com/blog/security-knowledge-graph-integrations/) uses context to identify relevant security vulnerabilities and provide visibility in your cloud environment. \n\n### 2. Security controls\n\nManually going through every cloud asset and configuration to check for vulnerabilities is not only a difficult task, but it can also become impossible in large public cloud environments in which thousands of assets are in use.\n\nTo solve this problem, security controls are used to check for misconfigurations and vulnerabilities, and provide guidance for remediating found issues. This mechanism saves time through automation and reduces the risk of human error, making it a crucial aspect of CNAPP. \n\nFor example, you can see a control from the Cyscale security platform in the image below. \n\n<img src=\"/img/34_blog-1-control.png\" alt=\"Control in the Cyscale platform\" title=\"Control in the Cyscale platform\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nIn Cyscale, you can find a collection of over 300 controls that check cloud services across multiple vendors and provide remediation steps for findings. \n\nWhen an asset does not pass a control, an alert is generated in real time.  \n\nTargeted alerts that highlight vulnerabilities and misconfigurations in a cloud environment are crucial; reacting to and fixing findings quickly to reduce the attack surface can save a company from a breach. \n\nHowever, alert fatigue is a real problem that security teams deal with; receiving too many alerts can lead to security professionals ignoring important alerts. A good CNAPP solution deals with all of these problems and provides a sound alert system.  \n\nFor example, in the image below, you can see an alert that has been triggered. Alerts can be Open or Resolved, to indicate if the issue that generated the alert has been fixed. \n\n<img src=\"/img/34_blog-2-alert.png\" alt=\"Alert in the Cyscale platform\" title=\"Alert in the Cyscale platform\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\n### 3. Data security \n\nDue to the dynamic nature of cloud-native technologies, data security is a critical concern in companies administering them. By scaling up and down quickly, sensitive data may be exposed. \n\nUsing a [CNAPP solution](https://cyscale.com/products/cnapp/), data security can be achieved for cloud-native applications. Security controls, as discussed in the previous section, enable organizations to identify misconfigurations or non-compliance with data security best practices in their cloud resources.\n\nIt is recommended that: \n\n* [At rest and in transit data are encrypted](https://cyscale.com/blog/types-of-encryption/),  \n* Assets are not publicly accessible unless it is necessary, \n* Encryption keys are managed correctly in their entire lifecycle, and others. \n\nFor each of these best practices and more, Cyscale offers a wide variety of controls that cover AWS, Microsoft Azure, Google Cloud, and Alibaba Cloud. Some examples of controls are: \n\n* *Ensure object containers don't have permissive access policies*, \n* *Ensure databases are not publicly accessible*, \n* *Ensure that Encryption key is rotated*. \n\nMoreover, in Cyscale, you can find a [Data Security Dashboard](https://cyscale.com/blog/data-security-dashboard/), which delivers a comprehensive view over data at rest storage assets and encryption keys, using DSPM (Data Security Posture Management) capabilities. \n\n### 4. Compliance \n\nCNAPP solutions help companies in their [compliance](https://cyscale.com/blog/cloud-security-and-compliance/) journey. The CSPM ([Cloud Security Posture Management](https://cyscale.com/blog/improve-cloud-security-posture/)) component of CNAPP provides reporting and policy management features that help companies meet various compliance frameworks.  \n\nTo become compliant, companies use CNAPP security tools to prepare for audits. Some of the most popular accredited standards are: \n\n* [ISO 27001](https://cyscale.com/blog/new-iso27001-2022-version/),  \n* [SOC 2](https://cyscale.com/blog/soc-2-compliance-in-cloud/), \n* GDPR, \n* [PCI-DSS](https://cyscale.com/blog/pci-dss-compliance-in-cloud/), \n* [HIPAA](https://cyscale.com/blog/hipaa-compliance-in-cloud/), \n* [NIST](https://cyscale.com/blog/nist-compliance-in-the-cloud/). \n\nCyscale supports all of them and more. You can view all supported standards on the Standards page, enable or disable frameworks, track progress with your compliance process, and view the cloud-focused requirements and associated controls for each of the standards.  \n\n<img src=\"/img/34_blog-3-compliance.png\" alt=\"Compliance standards in the Cyscale platform\" title=\"Compliance standards in the Cyscale platform\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\n### 5. Container image scanning  \n\nPart of the process of securing containers is image scanning. This is essential because it checks container images for misconfigurations and vulnerabilities and reduces the risk of deploying containers with security issues.  \n\nFor example, if a container image uses **an unpatched version of Log4J**, this could introduce a critical vulnerability in your cloud environment. It may allow an attacker to execute arbitrary code on the system running the container, compromising the data and applications running in that container. \n\n### 6. Cloud workloads protection \n\nCWPP helps companies discover vulnerabilities and correlate them with cloud misconfigurations. Using a CWPP, you mitigate risk across multi-cloud environments by identifying vulnerabilities documented in [CVEs](https://cve.mitre.org/) and pinpointing which misconfigurations have exposed your cloud infrastructure to them. \n\nTo secure cloud-native applications, a CWPP tool analyzes: \n\n* VMs,  \n* Containers,  \n* Serverless functions, and others. \n\n### 7. Kubernetes Cluster inspection \n\nA cluster is a set of nodes (machines) that run applications in containers. It contains the nodes and a control plane, which is responsible for the maintenance of the nodes, determining, for example, which application is running in which container. \n\nCluster inspection is a feature of Kubernetes Security Posture Management (KSPM) that provides visibility into the security posture of a Kubernetes cluster by inspecting its configuration and runtime behavior. \n\nMisconfigurations that can be found using cluster inspection are: \n\n* Unauthorized access,  \n* Missing patches,  \n* Insecure network configurations, and others. \n\n### 8. IAM\n\n[IAM (Identity and Access Management)](https://cyscale.com/blog/iam-services-in-aws-azure-gcp/) is another essential component of cloud-native applications security, specific to a CIEM platform. With complex cloud environments, it can become challenging to keep track of users, their different access levels, what impact certain permissions have, and so on. \n\nFor cloud-native applications, IAM can become a very complex aspect of cloud security due to the following aspects, but not limited to: \n\n1. Cloud-native applications are highly scalable, and identities and access levels may change rapidly, making it more difficult to manage IAM. \n2. Cloud-native software is built to run in cloud environments, in multi-cloud as well as on-premises. \n3. The microservices architecture can increase the difficulty of managing IAM identities at the service level. \n\nCompanies can use a CNAPP solution to secure their cloud in terms of IAM and manage identities and the authentication workflow.   \n\nSome best practices regarding IAM are: \n\n* **Implement multi-factor authentication for all users.** This measure adds an additional layer of security by requesting at least two forms of identification. \n* **Use role-based access control (RBAC)** to limit access to sensitive data to authorized users and obtain high granularity. \n* **Comply with the Least Privilege Principle** to restrict access to the lowest privilege necessary. \n* **Assign permissions at group level** and assign very well-defined rules and privileges to groups. This decreases the risk of data breaches. \n\nYou can read more about securing IAM in the cloud [here](https://cyscale.com/blog/iam-services-in-aws-azure-gcp/). \n\nTo ensure a deep understanding of user permissions and their impact, Cyscale provides an [Identity Dashboard](https://cyscale.com/blog/check-for-least-privilege/). \n\n<img src=\"/img/34_blog-4-iam.png\" alt=\"The Identity Dashboard in the Cyscale platform\" title=\"The Identity Dashboard in the Cyscale platform\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\n## Conclusion \n\nIn conclusion, [CNAPP (Cloud-Native Application Protection Platform) solutions](https://cyscale.com/products/cnapp/) are a critical security component for cloud-native applications. Due to their dynamic nature, their high scalability, and different architecture, traditional security measures may not be sufficient. \n\nCNAPP solutions offer: \n\n* Visibility, \n* Compliance, \n* Data security, \n* Runtime protection, \n* Container image scanning, \n* Kubernetes cluster inspection, \n* IAM, and others. \n\nUse Cyscale to benefit from these features and secure your cloud environment across multiple cloud providers!\n\n<!--EndFragment-->\n"}},{"node":{"frontmatter":{"authors":"Andrei Ștefănie","categories":["News","CSPM","CNAPP"],"title":"A Word on Cloud Security","seoTitle":"A Word on Cloud Security","description":"Given all this complexity and the pace at which we are trying to deliver our products, it’s no surprise that breaches still happen. However, we can go fast and build secure systems. It’s not a zero-sum game. You probably have people in your organization that are naturally passionate about security. Give them the responsibility, the training, and the tools. You probably don’t need that many people to do security full-time since the tools are getting increasingly powerful.\n","seoDescription":"Given all this complexity and the pace at which we are trying to deliver our products, it’s no surprise that breaches still happen. However, we can go fast and build secure systems. It’s not a zero-sum game. You probably have people in your organization that are naturally passionate about security. Give them the responsibility, the training, and the tools. You probably don’t need that many people to do security full-time since the tools are getting more and more powerful.","date":"2022-10-25T14:41:49.426Z","featuredpost":true,"permalink":"cloud-security","featuredimage":{"publicURL":"/static/eb032a4f417f6f199b9a6c39020ea0a1/microsoftteams-image-3-.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/eb032a4f417f6f199b9a6c39020ea0a1/d6cae/microsoftteams-image-3-.png","srcSet":"/static/eb032a4f417f6f199b9a6c39020ea0a1/ac644/microsoftteams-image-3-.png 205w,\n/static/eb032a4f417f6f199b9a6c39020ea0a1/89b47/microsoftteams-image-3-.png 410w,\n/static/eb032a4f417f6f199b9a6c39020ea0a1/d6cae/microsoftteams-image-3-.png 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/eb032a4f417f6f199b9a6c39020ea0a1/913d0/microsoftteams-image-3-.webp 205w,\n/static/eb032a4f417f6f199b9a6c39020ea0a1/91660/microsoftteams-image-3-.webp 410w,\n/static/eb032a4f417f6f199b9a6c39020ea0a1/888e2/microsoftteams-image-3-.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":460}}}},"rawMarkdownBody":"## Security is Foundational\n\nWhy care about cloud security? Or about security at all? Let’s zoom out even more and talk about the virtues we, as people, often desire for ourselves and look for in others. These include courage, compassion, generosity, temperance, persistence, and friendliness. As Brian Tracy points out in his excellent book, “No Excuses!: The Power of Self-Discipline”, all these virtues depend on and are guaranteed by one of them: **integrity**. Just like this, our software products have multiple requirements including functional (it must solve specific problems) and non-functional (performance, availability, efficiency, etc.). All these depend on the trust our users have in our systems to keep their data safe; they depend on **security**.\n\nIn theory, the most secure software is the one that doesn’t exist. If you have nothing, there is nothing to worry about. In practice, you will probably want to achieve certain things, to deliver certain features within a reasonable timeframe and budget. Luckily for us, the cloud providers offer a sizeable suite of services that might help us. In the era of data-driven, microservices-based, global-scale systems, we end up using some of them for compute (e.g. EC2, AKS, GKE, Lambda, Cloud Run), storage (S3), business intelligence (Redshift, Power BI), integration (Pub/Sub, Kinesis, API Gateway, SQS, SNS, Azure Service Bus), and so on. AWS even offers a service that lets you make use of their (satellite) ground stations. If you are competing with Elon’s Starlink or you are building a weather forecasting system, you might find it useful\n\n## Great Power, Great Responsibility\n\nNaturally, you must understand how to configure each cloud service you end up using and make them work together. One fundamental concept provided by the cloud is the way you manage access. You have control over both the network (so the service is actually reachable or not) and IAM (whether the clients must have identities and sufficient permissions). On one end of the spectrum, you can leave everything open and hope everyone expects that you have it properly set up. On the other end, you can choose a very restrictive configuration that might slow down your team. This is often known as the tradeoff between security and usability (for your dev team in this case). Over the past few years, the industry started shifting more toward security introducing concepts such as zero trust security and SSO (please make use of it whenever possible; also, it’s a shame that some companies still provide SSO only with their enterprise plans).\n\nClassically, you had a number of VMs (on-premises, VPS), installed and configured UFW, set up SSH access, and sent the SSH keys to your colleagues. Now, you can configure public and **private** (sub)networks, connect your cloud networks to your on-premises networks, deploy load balancers, define firewall rules without ever SSH-ing into the VMs, and assign identities and permissions to the VMs (and any other compute service). If previously your team didn’t interact too much with the infrastructure side, **now the infrastructure is part of the application**.\n\n## Network Access\n\nStarting with configuring the network access, here you have multiple options to control it. Perhaps the simplest concept is making the resources public or private. Your VM might have a vulnerable OS version, but if nothing can reach it and it cannot reach the internet, the risk is considerably lower. Not only can you run most compute and database services in a private network, but you can also configure fully managed services to be accessible through the provider's internal network (without traversing the internet) by leveraging services such as [AWS PrivateLink](https://aws.amazon.com/privatelink/) and [Azure Private Link](https://learn.microsoft.com/en-us/azure/private-link/private-link-overview).\n\nFurthermore, you can (have to) configure firewalls. Here the services vary a bit. Google Cloud calls them [VPC firewall rules](https://cloud.google.com/vpc/docs/firewalls). You define them at the VPC level and can optionally choose to which instances they should apply based on tags (they are not equivalent to AWS/Azure tags. In Google Cloud, the equivalent would be the resource labels) or service accounts (almost every resource can have an identity, which in Google Cloud, is given by service accounts). In AWS, you work with security groups that are assigned to virtual machines. Besides allowing traffic (by default everything is denied) from certain IP addresses or CIDRs, you can also choose based on the security group of the source (please make use of this). You can also achieve this in Azure, but you have to combine two types of resources: network security groups (these are the actual firewalls) and application security groups (you can associate these with the network tags from Google Cloud). In fact, here are the sources you can configure for each provider:\n\n* AWS: CIDRs, IP addresses, security groups, prefix lists (if you want to allow traffic coming only from certain AWS services)\n* Azure: CIDRs, IP addresses, application security groups, service tags (e.g. \\`AzureLoadBalancer\\`, \\`Internet\\`)\n* Google Cloud: CIDRs, IP addresses, network tags (defined on each instance), service accounts\n\nOf course, this is not all. You also have network access control lists (NACLs), firewalls specific to each service (especially managed databases from Azure), NAT gateways, VPC peering, VPNs, virtual appliances, traffic splitting, firewalls that you install on the VMs, and a lot more. All these bring considerable complexity and make it extra difficult to configure the optimal **effective network access**.\n\nAdditionally, while there are tools that check the traffic in real-time, these are often dealing with network paths that you defined and are aware of. There might be paths you did not intend to leave open that an attacker might make us for **lateral movement**.\n\n## IAM Access\n\nNot only can every member of your organization have a user (or multiple) with access to certain parts of your infrastructure, but so does almost every compute resource. Just like you provide John with permission to read data from a bucket, so you assign a role to a VM achieving the same access. The difference is that anything that runs on the VM and everyone who can access it (i.e. SSH into it) now can do everything the VM can do.\n\nFundamentally, this mechanism of assigning roles to resources is excellent. You have clear visibility of the principals (users, resources) that can access a given service, you can grant or revoke access at any moment, and you have a meaningful trail of access logs. The alternative is often based on keys/secrets and is almost impossible to trace properly because anyone that has the key can access the resource (it’s easy to lose track of who has the key) (secret scanners help a bit here but are limited to the resources they run on).\n\nWe just have to understand its implications. If attackers manage to break into a VM and if that VM has high (excessive?) permissions, the attackers will not only be able to access our data, but they will also be able to spin up additional instances (crypto mining?) and delete existing resources (service disruption and data loss).\n\nAgain, here it’s important to understand the effective permissions each resource has. There are multiple factors that contribute to the effective permissions such as the role assigned to the resource, permissions inherited from group memberships or from assignments at a higher level (the VM might be an owner at the subscription level in Azure thus having access to everything in that subscription), and policies configured on the target resources such as [resource policies in AWS](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_identity-vs-resource.html) and [access policies for Azure Key Vaults](https://learn.microsoft.com/en-us/azure/key-vault/general/security-features).\n\nAnother important aspect about effective permissions in the context of data access is encryption, especially encryption with customer-managed keys. For example, if you store data on S3 and encrypt it with a key managed by AWS KMS, you must have access to both the S3 bucket/object and the encryption key from KMS. Managing encryption keys deserves an article on its own.\n\n## The Human Factor\n\nEven if you have pristine infrastructure security, you still must provide access to someone (at least two admins so one doesn’t lock himself out by mistake - aka admin redundancy) to maintain the infrastructure and manage access for everyone else. This is an example of a highly privileged user. This in itself is not a major risk. However, if highly privileged users don’t have strong authentication mechanisms in place (MFA, preferably with strong factors), they can become liabilities. We are all subject to social engineering and phishing attacks.\n\nWhen you find out that an attacker managed to gain access to a highly privileged user, after revoking the sessions and rotating the credentials, you will want to find out the impact. For this, you need to know the systems to which the user has access. This can be quite challenging since the permissions are often spread across multiple systems.\n\nFor example, if you have Okta as the identity provider and AWS for the cloud infrastructure, you have to check both systems and link the results in order to determine what a person actually has access to. In Okta you just provide access to an application, but in AWS that application is often an AWS Organization with multiple accounts.\n\n## Ending Notes\n\nGiven all this complexity and the pace at which we are trying to deliver our products, it’s no surprise that breaches still happen. However, we can go fast and build secure systems. It’s not a zero-sum game. You probably have people in your organization that are naturally passionate about security. Give them the responsibility, the training, and the tools. You probably don’t need that many people to do security full-time since the tools are getting increasingly powerful.\n"}},{"node":{"frontmatter":{"authors":"Virginia Mitea","categories":["CSPM","CNAPP"],"title":"CNAPP: A mix of CSPM & CWPP","seoTitle":"CNAPP: A mix of CSPM & CWPP - Cyscale","description":"Gartner has defined a new category that is focused on securing cloud services and cloud-native applications, the so-called CNAPP- Cloud-Native Application Protection Platform.\n\nAccording to Gartner, “CNAPP is an integrated set of security and compliance capabilities designed to help secure and protect cloud-native applications across development and production.”\n\nThe legitimate question would be: Why do I need another security tool?","seoDescription":"Unveil CNAPP, a blend of CSPM & CWPP for advanced cloud security. Learn the benefits, compare it with separate tools, and understand its impact on the future of cybersecurity. A comprehensive guide by Cyscale on the latest trend in cloud protection.","date":"2021-11-24T15:35:49.333Z","featuredpost":true,"permalink":"cnapp-a-mix-of-cspm-cwpp","featuredimage":{"publicURL":"/static/0d623661be987ab7298a9d413fe49939/cspm-cwpp.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/0d623661be987ab7298a9d413fe49939/0f481/cspm-cwpp.png","srcSet":"/static/0d623661be987ab7298a9d413fe49939/d8077/cspm-cwpp.png 205w,\n/static/0d623661be987ab7298a9d413fe49939/36293/cspm-cwpp.png 410w,\n/static/0d623661be987ab7298a9d413fe49939/0f481/cspm-cwpp.png 820w,\n/static/0d623661be987ab7298a9d413fe49939/6ef45/cspm-cwpp.png 1640w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/0d623661be987ab7298a9d413fe49939/19b88/cspm-cwpp.webp 205w,\n/static/0d623661be987ab7298a9d413fe49939/f7577/cspm-cwpp.webp 410w,\n/static/0d623661be987ab7298a9d413fe49939/1946f/cspm-cwpp.webp 820w,\n/static/0d623661be987ab7298a9d413fe49939/d54ec/cspm-cwpp.webp 1640w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":547}}}},"rawMarkdownBody":"<!--StartFragment-->\n\nEven before the Covid-19 pandemic, it was clear that more and more companies were adopting a cloud-first strategy.\n\nOver the last 2 years, the number of companies using the services of at least one public cloud provider continued to grow.\n\nAs a result, Gartner predicted that by the end of 2021 “public cloud deployments will outnumber private data center workloads”.\n\nOnce again, security specialists insist that cloud security is a complex subject that should be considered a high priority.\n\nThere already are a lot of tools to take into consideration when you're concerned with cloud security. Up until now, cloud professionals were talking about three main security solutions: [Cloud Security Posture Management (CSPM)](https://cyscale.com/blog/cloud-security-posture-management-cspm-guide/), Cloud Workload Protection Platform (CWPP), and Cloud Access Security Broker (CASB).\n\nBut recently, Gartner has defined a new category that is focused on securing cloud services and cloud-native applications, the so-called CNAPP- Cloud-Native Application Protection Platform. CNAPP combines the capabilities of Cloud Security Posture Management (CSPM) and Cloud Workload Protection Platform (CWPP) to provide comprehensive [cloud native application security](https://cyscale.com/blog/cnapp-secure-native-applications/) across development and production environments.\n\nThe legitimate question would be: ***Why do I need another security tool?***\n\nWell, the idea is to focus not only on your cloud infrastructure's security configurations but also on your applications that run in the cloud.\n\nYou could argue that your CWPP or your CSPM is already doing something about this - and you would be right!\n\nIf you dig deeper, CNAPP is basically a mix of 2 separate solutions:  Cloud Security Posture Management (CSPM) & Cloud Workload Protection Platform (CWPP)\n\n### What is CSPM?\n\n[Cloud Security Posture Management solutions (CSPM)](https://cyscale.com/products/cloud-security-posture-management/) have as main purpose the [detection of misconfigurations](https://cyscale.com/use-cases/cloud-misconfigurations/). They will continuously monitor the cloud environment in order to provide visibility across multi-cloud and alert the company about compliance drift or risky behavior. CSPMs focus on cloud infrastructure.\n\n### What is CWPP?\n\nCloud Workload Protection Platforms (CWPPs) are designed to protect the workloads deployed in the cloud. They will perform vulnerability assessments and handle the security of the applications. Based on assessment results, you can implement security controls or you can remediate the threats. CWPPs focus on the applications running in the cloud.\n\n## **Which is better? CNAPP vs CSPM+CWPP**\n\nThe increasing features overlap between these two solutions will make this \"merge\" inevitable.\n\n You can still use separate tools, or you can try a CNAPP, that's entirely up to you.\n\n#### ***Advantages of using CNAPP:***\n\n* better visibility and control of cloud-native application risk (when using separate tools, the identification and remediation actions can be fragmented, and not as efficient as having it all in one tool)\n* better collaboration for development and operations teams\n* simpler CI/CD pipelines (reduced complexity and cost since fewer tools are involved)\n* it scans all the source code, containers, VM images, IaC scripts, API\n\n#### ***Advantages of using separate tools:***\n\nThe most important one is the *maturity of the tools*.\n\nYou need to consider that Gartner expects this new category to have a high impact, but also predicts that it will take five to ten years before CNAPP is established in regular use.\n\nSince this is a new category of products, the market for CNAPP has just started to evolve and vendors need time to integrate all these capabilities.\n\nCWPP vendors have started to add new features capabilities, including IaC scanning.\n\nSome CSPMs have cutting edge-technology in place and can already give you some of the features promised a [CNAPP solution](https://cyscale.com/products/cnapp/).\n\nThis is the case of [Cyscale Cloud Security Platform](https://cyscale.com), the solution that offers advanced visibility, but more importantly, gives you context so you can better prioritize.\\\nThe [Security Knowledge Graph](https://cyscale.com/products/security-knowledge-graph/)™ built within the platform may reveal, for example, that one of the resources usually reported to have a high-security risk, is not as vulnerable as it seems. (Let's think about a VM that has unencrypted disks attached, but is not being used in a production environment, or is not externally accessible from the internet).\\\nThis type of approach can make you realize that you need a more advanced risk analysis and a look beyond the classic list of logs, where the vulnerable components are reported without taking into consideration the bigger picture.\n\nRegardless of your choice of tool, just remember to give security posture the importance it deserves.\n\n<!--EndFragment-->\n\n<!--StartFragment-->\n\nPhoto by Markus Spiske\n\n<!--EndFragment-->"}}]}},"pageContext":{"limit":9,"skip":0,"numPages":1,"currentPage":1,"category":"CNAPP","seoTitle":"Cyscale - CNAPP","seoDescription":"News about Cyscale CNAPP","categoriesList":["News","CSPM","CNAPP","Product","Compliance","Engineering"]}},"staticQueryHashes":["2757132133","3325979619","3765828210","4109069157"]}