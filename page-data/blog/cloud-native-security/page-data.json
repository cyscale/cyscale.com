{"componentChunkName":"component---src-template-blog-categories-template-js","path":"/blog/cloud-native-security/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["Cloud Security","Cloud Native Security"],"title":"Multi-Cloud Security: What CISOs & CTOs Need to Know ","seoTitle":"Multi-Cloud Security: What CISOs & CTOs Need to Know ","description":"While multi-cloud gives several advantages, be careful not to compromise on security and visibility, giving the CISO or CTO sleepless nights. ","seoDescription":"While multi-cloud gives several advantages, be careful not to compromise on security and visibility, giving the CISO or CTO sleepless nights.","date":"2024-02-19T11:40:03.512Z","featuredpost":true,"permalink":"multi-cloud-security-what-ciso-cto-needs-to-know","featuredimage":{"publicURL":"/static/3058bebce95f82354b0fdf82bb3ef1cc/multicloud-security-ciso-cto.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/3058bebce95f82354b0fdf82bb3ef1cc/d6cae/multicloud-security-ciso-cto.png","srcSet":"/static/3058bebce95f82354b0fdf82bb3ef1cc/ac644/multicloud-security-ciso-cto.png 205w,\n/static/3058bebce95f82354b0fdf82bb3ef1cc/89b47/multicloud-security-ciso-cto.png 410w,\n/static/3058bebce95f82354b0fdf82bb3ef1cc/d6cae/multicloud-security-ciso-cto.png 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/3058bebce95f82354b0fdf82bb3ef1cc/913d0/multicloud-security-ciso-cto.webp 205w,\n/static/3058bebce95f82354b0fdf82bb3ef1cc/91660/multicloud-security-ciso-cto.webp 410w,\n/static/3058bebce95f82354b0fdf82bb3ef1cc/888e2/multicloud-security-ciso-cto.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":460}}}},"rawMarkdownBody":"## Why go multi-cloud? It’s not always by choice \n\nA multi-cloud strategy can combine the best of two (or more!) worlds, allowing cloud-native organizations to choose best-of-breed options for building apps and storing data in the cloud. At least this is true when the multi-cloud approach is by design.  \n\nIt’s not unheard of for a multi-cloud approach to happen by accident. Along with [mergers and acquisitions that force two IT estates together](https://cyscale.com/blog/cloud-security-assessment-vital-part-mergers-acquisitions/), so-called ‘shadow IT’ is a significant problem – where teams make use of an unapproved solution resulting in a complex cloud infrastructure that spans across different cloud vendors.  \n\nWhile [multi-cloud](https://cyscale.com/blog/cloud-native-tools-multi-cloud/) companies can gain numerous advantages - each public cloud has its own strengths - the downsides should not be disregarded, especially if they mean compromising on security and visibility and giving the CISO or CTO sleepless nights. \n\n## Advantages and disadvantages of multi-cloud \n\nCTOs in cloud-native businesses typically choose multiple cloud providers, such as AWS, Azure, Google Cloud, Alibaba, and others, to maximize the potential of their tech stack and access a broader range of features. Azure is known for its tight integration with other Microsoft products, AWS has strong support for general enterprise compute and storage, while Google Cloud has sought to differentiate with a focus on Machine Learning. The latest battleground is on AI and LLM support.  \n\nBut companies with legacy infrastructure, or those in highly regulated industries such as finance and healthcare, may also have on-premises assets as well, resulting in a hybrid mix of private and public cloud infrastructure. \n\n### Key reasons to consider a multi-cloud approach: \n\n* **Flexibility:** Since you have access to multiple cloud providers, you can choose the service that best suits your needs out of a pool of options. For example, if you want to store data in a storage asset, you don’t necessarily have to go with a bucket from AWS; you can also consider a storage account in Azure or weigh out your options based on integration with other software, pricing variables, or even geography.  \n* **Optimizing costs:** Although broadly speaking, different clouds stack up in a like-for-like comparison, there are subtle but important differences in how each provider does things and charges for them. So, the flexibility of choosing services from different providers allows organizations to optimize costs effectively, avoiding unnecessary expenses and ensuring that resources are allocated efficiently. \n* **Redundancy and high availability:** Distributing data across multiple cloud platforms ensures high availability and redundancy. If one provider experiences downtime or disruptions, data remains accessible from alternative sources, minimizing the risk of service interruptions. \n* **Geo-location options:** By distributing data across vendors, you can be closer to end-users from all around the world, reducing latency and improving overall user experience. Moreover, for data sovereignty reasons, you can also ensure compliance with various standards that may require that data stays inside a particular country or geographical location. This is a particularly important consideration in regulated sectors but can just as easily apply to any company that deals with customer data – which is pretty much every company. The EU’s GDPR privacy regulation is a prime compliance example, and the US is catching up now with state-specific considerations, like California’s CCPA.  \n\n## Risks and downsides of multi-cloud \n\n* **Added complexity:** An infrastructure that spans across cloud vendors is inherently more complex and more challenging to manage and secure. This is a daunting task for any CTO and engineering team. Each cloud provider has its own naming conventions, service structures, deployment models, API endpoints, and more, meaning both engineering and security professionals often forget best practices for each specific service, which can and will introduce security gaps in the company. \n* **Reduced visibility:** This is a big one. There is no security without [visibility](https://cyscale.com/blog/provide-visibility-in-cloud-okta-integration/) in the cloud, after all, you can’t secure what you can’t see. And something that’s less obvious but even more important in the cloud is context. When you can’t see all your assets, you can’t understand the relations between them and how a misconfiguration on one asset affects another. This also goes for users (both human and non-human identities) and their permissions. Without comprehensive visibility and inventory, you cannot identify vulnerabilities and gaps in your security.  \n* **The need for cloud-specific skills:** Being an expert in Azure does not directly translate to AWS and vice-versa. Same with any other cloud. All vendors have different assets, each with their own technologies, settings, security best practices, even naming conventions.  \n\n<!-- Start of Text Image Widget -->\n<div class='mt-16 rounded-tl-2xl rounded-b-2xl grid grid-cols-12 gap-4 bg-zircon py-8 px-4 lg:py-4' style='borderTopRightRadius: 3rem'>\n    <div class='col-span-12 lg:col-span-2'>\n        <div class='flex justify-center'>\n            <img src='/img/cloud-icon-widget.svg' alt='' id='img-text-button' />\n        </div>\n    </div>\n    <div class='col-span-12 lg:col-span-6 flex items-center justify-center'>\n         <p class='font-montserrat font-bold' id=\"paragraph-text-button\">\n            See How Cyscale Helps Protect<br class=\"hidden lg:block\"/> Your <span id=\"font-gradient\">Multi-Cloud Estate</span>\n        </p>\n    </div>\n    <div class='col-span-12 lg:col-span-4 flex justify-center items-center'>\n        <a class='mx-auto bg-gradient-to-r from-[#0F26AA] to-[#FF4A56] hover:from-[#FF4A56] hover:to-[#0F26AA] block font-medium rounded uppercase text-center no-underline hover:no-underline max-w-sm lg:inline-block font-hind' href='/request-demo/'>\n            <span style='padding: 0.625rem 2.5rem' class='text-white block'>\nShow me\n            </span>\n        </a>\n    </div>\n</div>\n<!-- End of Text Image Widget -->\n\n## Making multi-cloud work and keeping your estate protected \n\nSo, how do you leverage the advantages of multi-cloud and keep the downsides of having to manage and secure a multi-cloud environment under control? Let’s look at some best practices along with actionable insights to enhance data security in multi-cloud deployments. \n\n### 1. Achieve visibility of your multi-cloud estate \n\nContinuous visibility is the first step to securing a multi-cloud infrastructure. To achieve this, centralize an inventory of your clouds in one single place using a [CNAPP](https://cyscale.com/products/cnapp/) (Cloud-Native Application Protection Platform). Having one or two dashboards that showcase your entire inventory across cloud service providers is more manageable and gives you an integrated picture versus switching tabs and constantly having to look up resources in each specific cloud console or portal.  \n\n### 2. Continuous monitoring to keep up with your clouds \n\nMonitoring goes hand in hand with visibility. By ensuring continuous logging and monitoring, your security team can identify suspicious behavior in real-time, and be aware of what’s happening in the cloud. Sudden spike in resource usage or anomalous behavior? Time to investigate. Centralize logs to have everything in one place and obtain a comprehensive view of the cloud. \n\n### 3. Achieve and maintain compliance with international frameworks \n\nInternational standards and laws like ISO 27001, SOC 2, GDPR, and HIPAA enforce security requirements that are meant to prevent data breaches within companies. By becoming compliant with such frameworks, you're not only strengthening your organization's cloud security posture but also showing customers that you're making efforts toward securing their data. In fact, even as the cloud skills gap has increased, so has the expectation of provable security. ISO saw an increase of 51% in ISO 27001 certifications between 2020 and 2022, as more buyers demand compliance from suppliers. Compliance applies across all security providers, and multi-cloud companies are not exempted. You should use a CNAPP to track your efforts and ace your audits by showing comprehensive reports that demonstrate your ongoing efforts. \n\n### 4. Prioritize cloud resources to optimize security efficiency  \n\nSegment your assets based on their criticality to business operations and data sensitivity. Identify the core components that, if compromised, could have severe consequences for your organization. By categorizing assets, you establish a hierarchy that guides the allocation of security resources and efforts, and in a world where both cloud and cyber skills are in short supply, optimizing your efforts is key. A CNAPP tool can help perform this prioritization based on the severity of existing vulnerabilities and misconfigurations, as well as how many other assets a cloud resource impacts or is related to. This can make the difference between a quick fix in a typical workday or a data breach that can cost a company a fortune in remediation, fines, or reputational damage.  \n\n### 5. Use automation to make security teams more efficient \n\nDepending on the skills and human resources available to you, some CTOs and CISOs might be able to easily accomplish the things we’ve discussed in a simple cloud environment, while those with reduced resources might struggle already. But there’s no denying that when you introduce another cloud provider (or two) into the discussion, a manageable manual workload quickly turns into an overwhelming mountain. For example, access reviews in a multi-cloud infrastructure are nearly impossible to do traditionally; you would have to go back and forth between identity providers and clouds and assess each permission at a time. Not only is this a very tedious job that creates lots of room for mistakes, it’s the soul-destroying kind of task that stops security teams doing work they find enriching and putting them on the lookout for other opportunities.  \n\nModern cloud security solutions such as a CNAPP however, aggregate all this information in one place, making your people more efficient, and suddenly applying the Least Privilege Principle no longer seems daunting.  \n\n## Overcoming the complexity of multi-cloud  \n\nThe complexities introduced by added infrastructure layers, each with their own approaches, and the need for cross-cloud expertise demand a proactive approach to security. While multi-cloud environments promise significant opportunities, it is important to address the associated risks, especially those related to complexity, reduced visibility, and the evolving skill set requirements. In this case, prevention really is better than cure, but as with all security, some ‘cure’ is inevitable.  \n\nWith a lack of cloud experience and cyber skills on the market, cloud native organizations should really be looking at CNAPP (Cloud-Native Application Protection Platform)-type solutions to enhance and augment existing human resources and skills with the aim of achieving a robust cloud security posture in a multi-cloud setup. \n\n[Cyscale’s CNAPP](https://cyscale.com/full-platform-tour/) is the only tool of its kind that has been designed to be deployed and used by smaller teams, helping the CTO or CISO and your security team gain the confidence to acquire visibility, prioritize assets, ace audits for compliance benchmarks, and perform other operations that actually serve the business, rather than endless firefighting across the multi-cloud estate.  \n\n<!-- Start of Text Image Widget -->\n<div class='mt-16 rounded-tl-2xl rounded-b-2xl grid grid-cols-12 gap-4 bg-zircon py-8 px-4 lg:py-4' style='borderTopRightRadius: 3rem'>\n    <div class='col-span-12 lg:col-span-2'>\n        <div class='flex justify-center'>\n            <img src='/img/cloud-icon-widget.svg' alt='' id='img-text-button' />\n        </div>\n    </div>\n    <div class='col-span-12 lg:col-span-6 flex items-center justify-center'>\n         <p class='font-montserrat font-bold' id=\"paragraph-text-button\">\n            Take a Tour of<span id=\"font-gradient\">Cyscale's CNAPP</span>Today \n        </p>\n    </div>\n    <div class='col-span-12 lg:col-span-4 flex justify-center items-center'>\n        <a class='mx-auto bg-gradient-to-r from-[#0F26AA] to-[#FF4A56] hover:from-[#FF4A56] hover:to-[#0F26AA] block font-medium rounded uppercase text-center no-underline hover:no-underline max-w-sm lg:inline-block font-hind' href='/request-demo/'>\n            <span style='padding: 0.625rem 2.5rem' class='text-white block'>\n                Start now\n            </span>\n        </a>\n    </div>\n</div>\n<!-- End of Text Image Widget -->"}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["Cloud Security","Cloud Native Security","CNAPP"],"title":"Azure Key Vault Explained: Data Plane vs. Management Plane, Access Roles and More","seoTitle":"Azure Key Vault Explained: Access Roles and More","description":"Azure Key Vault securely stores secrets, certificates, and cryptographic keys and facilitates their usage by applications and services. ","seoDescription":"Azure Key Vault securely stores secrets, certificates, and cryptographic keys and facilitates their usage by applications and services. ","date":"2024-02-07T11:00:24.062Z","featuredpost":true,"permalink":"azure-key-vault-explained","featuredimage":{"publicURL":"/static/5b67d3e57f404fbc2a0a65566e9551de/azure-key-vault-explained.jpg","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/5b67d3e57f404fbc2a0a65566e9551de/2c0f5/azure-key-vault-explained.jpg","srcSet":"/static/5b67d3e57f404fbc2a0a65566e9551de/41be8/azure-key-vault-explained.jpg 205w,\n/static/5b67d3e57f404fbc2a0a65566e9551de/c78f7/azure-key-vault-explained.jpg 410w,\n/static/5b67d3e57f404fbc2a0a65566e9551de/2c0f5/azure-key-vault-explained.jpg 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/5b67d3e57f404fbc2a0a65566e9551de/913d0/azure-key-vault-explained.webp 205w,\n/static/5b67d3e57f404fbc2a0a65566e9551de/91660/azure-key-vault-explained.webp 410w,\n/static/5b67d3e57f404fbc2a0a65566e9551de/888e2/azure-key-vault-explained.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":460}}}},"rawMarkdownBody":"<!--StartFragment-->\n\nAzure Key Vault is a safe place for cloud security professionals who want to keep their secrets… well, secret! And while it’s your safest bet to keep your crypto keys, certificates, and other secrets safe, it can become your worst enemy if you don’t manage it correctly. \n\n## What is Azure Key Vault? \n\nBefore we begin looking at best practices and security features of Key Vault, let’s go over the basics. \n\nAzure Key Vault is a Microsoft Azure product that securely stores secrets, certificates, and cryptographic keys and facilitates their usage by applications and services. It also allows users to manage a key's lifecycle, from key generation to destruction. \n\n*Did you know that if you create a key in a Key Vault, you can never actually see it? This is to safeguard against a human leaking the key. This also applies to imported keys.* \n\nAzure Key Vault has two service tiers: Standard and Premium. The only difference between them is that Premium allows HSM protection for keys. HSM (Hardware Security Module) provides hardware security on top of the software security supplied by Azure as a fully managed, single tenant, premium safeguard. This is the most stringent security measure that can be applied to crypto keys. \n\n## Access control management in Azure Key Vault \n\nKey Vault authorization is done on two different planes: \n\n* The management plane, which allows users to delete key vaults, update access policies, and see properties, and \n* The data plane, where Key Vault objects can be added, deleted and modified. \n\nBasically, if you have access to the management plane, you can modify the cloud resource but have no access to the actual data in it. The opposite goes for the data plane, where you can make operations on the secrets, keys, and certificates but cannot, for example, add or remove access policies. You can delete a key, but not the actual key vault. \n\nNow that we know the difference between the two planes, let's look at some of the most used built-in RBAC roles for Key Vaults. Remember that Role Base Access Controls (RBAC) are used to restrict access to the network based on the user’s role. \n\n*Authorization for the data plane can be done using Azure Key Vault access policies as well as RBAC roles, but for the management plane, only RBAC roles can be used. Access policies are now considered legacy, and we recommend using RBAC.* \n\nAnd while access control policies help you define fine-grained control over objects and resources, this is not the way to go anymore. Policies are not a centralized management solution, meaning that you can’t just see and change permissions in one place; you would have to check each policy to see what a user's effective permissions are. Moreover, removing permissions can be difficult; the user no longer needs access to keys? Instead of going over one or more policies and unchecking the boxes that give them access, you can just remove their Key Vault Crypto Officer role, and you’re done! That way you don’t risk forgetting about a policy in the process. \n\nTo transition from access policies to RBAC, assess current permissions for all users, change to an RBAC permission model, establish the correct roles for them (and follow the Least Privilege Principle), assign those roles, and thoroughly test the setup. And to know which Key Vault Roles to use, keep reading this article! \n\n## Roles in Azure Key Vault \n\nManaging access control correctly and using the appropriate role for the job is good practice for cloud security. Following the Least Privilege Principle and only providing the necessary permissions are the keys to minimizing attack surfaces and giving your cloud environment the best chance against attackers. \n\nLet’s look at some of the available built-in Key Vault roles provided by Microsoft Azure. Remember that these roles only work if you've set Azure RBAC as the permission model (which is recommended). \n\n1. **Key Vault Reader**: This role provides the user with permission to read metadata of key vaults and their objects (certificates, keys, secrets). \n2. **Key Vault Administrator**: As an Administrator, you have all data plane permissions on all types of objects. \n3. **Key Vault Secrets Officer, Key Vault Certificates Officer, Key Vault Crypto Officer**: These three roles allow users to perform all actions on the type of Key Vault object the role is for, except managing permissions. So, a Key Vault Certificates Officer would have permissions on certificates, and so on. \n4. **Key Vault Secrets User, Key Vault Crypto User**: These roles are similar to the previous one but have fewer permissions. The Secrets user can see the secret contents. The Crypto user can perform cryptographic operations using the keys stored in the Key Vault. *Notice how there’s no Key Vault Certificates User? The Secrets user can also read the secret portion of a certificate with a private key, so apps use this role to retrieve certificates.* \n\nKeep in mind that users who can manage permissions over the Key Vault can grant themselves data plane permissions by modifying the access policies, so this plane segregation only goes so far. For this reason, I will once again remind you – follow the [Least Privilege Principle](https://cyscale.com/blog/check-for-least-privilege/)! Don't give users more permissions than the bare minimum they need to do their job.  \n\nExcess privileges can be a gateway to disaster.  \n\n## Safety and recovery features in Azure Key Vault \n\nAzure Key Vault has a very useful feature called **soft-delete**. This allows for Key Vaults and Key Vault objects to remain recoverable for a period of 7 to 90 days (if no period is specified, then the default is set to 90). So, if someone accidentally deletes something, it can still be recovered within that timeframe. \n\n*Soft-delete is set to Enabled by default for new Key Vaults, and if a Key Vault has soft-delete enabled, it can never be disabled.* By design, Azure Key Vault makes it hard for users to lose their keys! \n\nBesides soft-delete, there’s also **purge protection**. This is another safety feature that goes beyond soft-delete, by preventing accidental **permanent** deletion. If you want to protect your Azure Key Vault from deletion while it is in its soft-deleted state, it ensures that no-one can delete it before the soft-delete period is over. **Once purge protection is enabled, just like soft-delete, it cannot be disabled.**  \n\nTo purge a Key Vault or a Key Vault object, you must have special permissions that are not, by default, given to any role. *The argument –enable-purge-protection can also be set to true to prevent anyone from purging a resource.*  \n\nIf this sounds all complicated, we can sum it up easily: once you delete a soft-delete-enabled Key Vault resource, it goes into the soft-delete state for a set period. If you also have purge protection enabled, you can't force delete it before that period is up. It's a layered protection model; you must go through multiple steps to delete a resource, making it as fool-proof as possible.  \n\nIn terms of backup, Azure recommends that you only backup secrets that are business critical; due to the nature of Key Vaults, the objects stored in them are already ensured availability: “Key Vault maintains availability in disaster scenarios and will automatically failover requests to a paired region without any intervention from a user”.  \n\nYou also can't back up your vault. It can be an annoyance, but you must back up each object and then restore them one by one. To do this, you download a blob containing the secret in an encrypted form, which you can then upload back in your Azure Key Vault. You have to upload it back in the same subscription to be able to use it (and, of course, in Azure Key Vault, not somewhere else). \n\n## Logging and protection in Azure Key Vault \n\nBesides following the best practices described in this article, you can also enable **Microsoft Defender for Key Vault**. This enables: \n\n* threat detection,  \n* threat intelligence,  \n* anomaly detection, and  \n* behavior analytics. \n\nAlso, don't forget about logging! Ensure to log user activity to identify suspicious behavior and obtain an audit trail to identify who accessed Key Vaults and when. \n\nYou can find all of these best practices and more in the Cyscale app, where we highlight misconfigurations and give you step-by-step instructions on configuring Azure Key Vaults correctly and keeping your secrets safe. \n\n<video width=\"auto\" height=\"auto\" controls=\"\" tabindex=\"2\"><source src=\"https://d3n52qn7viv754.cloudfront.net/videos/data-security-tour.mp4\" type=\"video/mp4\">Your browser does not support the video tag.</video>\n\n<!--EndFragment-->"}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["Cloud Native Security"],"title":"Cloud-Native Security Tools for Multi-Cloud Environments","seoTitle":"Cloud-Native Security Tools for Multi-Cloud Environments","description":"As organizations continue to move their workloads to the cloud, security concerns have become a top priority for CISOs. Cloud-native security solutions should be designed to provide contextual alerts for misconfigurations and vulnerabilities, should help organizations meet regulatory compliance requirements and automate security processes. Using Cyscale, a CNAPP tool, you can bring together multi-cloud infrastructures and secure your environment whether it is using AWS, Azure, Google Cloud or more than one provider.","seoDescription":"As organizations continue to move their workloads to the cloud, security concerns have become a top priority for CISOs. Cloud-native security solutions should be designed to provide contextual alerts for misconfigurations and vulnerabilities, should help organizations meet regulatory compliance requirements and automate security processes. Using Cyscale, a CNAPP tool, you can bring together multi-cloud infrastructures and secure your environment whether it is using AWS, Azure, Google Cloud or more than one provider.","date":"2023-05-16T10:06:37.307Z","featuredpost":true,"permalink":"cloud-native-tools-multi-cloud","featuredimage":{"publicURL":"/static/0275e0fbde321e84df0a46d34936a073/40_blog-cover-cnapp-multi-cloud-tools.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/0275e0fbde321e84df0a46d34936a073/d6cae/40_blog-cover-cnapp-multi-cloud-tools.png","srcSet":"/static/0275e0fbde321e84df0a46d34936a073/ac644/40_blog-cover-cnapp-multi-cloud-tools.png 205w,\n/static/0275e0fbde321e84df0a46d34936a073/89b47/40_blog-cover-cnapp-multi-cloud-tools.png 410w,\n/static/0275e0fbde321e84df0a46d34936a073/d6cae/40_blog-cover-cnapp-multi-cloud-tools.png 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/0275e0fbde321e84df0a46d34936a073/913d0/40_blog-cover-cnapp-multi-cloud-tools.webp 205w,\n/static/0275e0fbde321e84df0a46d34936a073/91660/40_blog-cover-cnapp-multi-cloud-tools.webp 410w,\n/static/0275e0fbde321e84df0a46d34936a073/888e2/40_blog-cover-cnapp-multi-cloud-tools.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":460}}}},"rawMarkdownBody":"As organizations continue to move their workloads to the cloud, security concerns have become a top priority for CISOs. With multi-cloud environments becoming the new norm, cloud-native security tools have emerged as the go-to solutions for securing: \n\n* cloud infrastructures,  \n* cloud-native applications,  \n* and cloud services. \n\n## What is Cloud-Native Security and How Do You Achieve it? \n\nCloud-native security refers to security measures that are specifically designed to protect cloud-native environments. As organizations adopt cloud platforms, security vulnerabilities become more complex, and traditional security solutions are no longer capable of delivering reliable insights.  \n\nTo address these challenges, cloud-native security tools should be designed to: \n\n* provide real-time, [contextual alerts for misconfigurations](https://cyscale.com/blog/prevent-alert-fatigue/),  \n* help organizations meet compliance requirements, and \n* automate security processes. \n\nThrough targeted alerts, users obtain insights into their cloud computing infrastructure and can, contextually, see how misconfigurations impact their apps. Utilizing contextual alerting, security teams can easily identify and prioritize crown jewel assets and by cutting through the noise avoid the alert fatigue which is commonplace in most organizations. \n\nTo help meet compliance requirements, cloud-native tools provide auto-generated compliance reports, aiding companies with their audit process, as well as metrics to accurately measure the progress.  \n\nBy automating security processes, DevOps teams can streamline the software development lifecycle of their applications and shift their attention to important aspects. Risk caused by human error is reduced, and security policies are guaranteed to be consistently applied across all cloud environments. \n\n## Cloud-Native Security Tools in Multi-Cloud Environments \n\nAchieving complete security and compliance in multi-cloud environments is extremely challenging. It is time-consuming to correlate all assets, their relationships, and the risk attached to them across multiple cloud service providers such as AWS, Azure, and Google Cloud as each cloud provider comes with its own tools.  \n\nLet's look at the options companies currently have to secure their cloud: \n\nFor Microsoft Azure: \n\n* Azure Defender for Cloud,  \n* Azure Active Directory,  \n* Azure Firewall, and others. \n\nFor AWS (Amazon Web Services): \n\n* AWS Identity and Access Management (IAM), \n* AWS WAF (Web Application Firewall), \n* AWS GuardDuty. \n\nFor Google Cloud: \n\n* Google Cloud Security Command Center, \n* Google Cloud IAM, \n* Google Cloud Armor. \n\nHowever, these tools are typically designed to work within their own ecosystem. To cover multi-cloud systems and to obtain a clear understanding of each system’s security, a company needs a more comprehensive, purpose-built solution. \n\nThe answer to this problem is a centralized platform for managing application security across all environments. A [CNAPP (Cloud-Native Application Protection Platform)](https://cyscale.com/blog/cnapp-secure-native-applications/) is a security solution designed to protect cloud-native applications. It combines the following functionalities: \n\n* CSPM (Cloud Security Posture Management), \n* CWPP (Cloud Workload Protection Platform), \n* CIEM (Cloud Infrastructure Entitlements Management), \n* KSPM (Kubernetes Security Posture Management, and  \n* Container security. \n\nA CNAPP tool is capable of providing: \n\n1. Visibility, \n2. Security controls, \n3. Compliance features, \n4. Container image scanning,  \n5. [IAM (Identity and Access Management)](https://cyscale.com/blog/iam-services-in-aws-azure-gcp/) assessments, and many others. \n\nA key advantage of CNAPP solutions is their ability to integrate with all cloud providers. This allows them to monitor cloud workloads and provide real-time alerts and remediation steps for their users. \n\n**Cyscale** is a [CNAPP tool](https://cyscale.com/products/cnapp/) that brings together multi-cloud infrastructures and, using powerful dashboards and security controls automatically highlights misconfigurations and vulnerabilities, saving teams considerable time on remediation.  \n\nUsing this security platform, users can ensure that their cloud native technologies are in good hands. In the Cyscale app, you can find the following: \n\n* Over 400 controls across AWS, Azure, Google Cloud that check for misconfigurations and contain remediation steps to safeguard sensitive data, \n* Powerful dashboards, such as the ones for Data Security, IAM, or Containers, \n* Many compliance frameworks with editable policies and metrics to track your company’s progress and help it in the audit process, and others. \n\nIn conclusion, cloud-native security tools are essential for maintaining cybersecurity in a multi-cloud environment and delivering a consistent risk-based view to the business.\n"}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["Cloud Native Security"],"title":"Cloud-Native Infrastructure: How to Build a Comprehensive Security Plan","seoTitle":"Cloud-Native Infrastructure: How to Build a Comprehensive Security Plan","description":"As more organizations adopt a cloud-native approach to support their business operations, security may sometimes be left out of their initial plans. Moreover, a cloud-native infrastructure requires a different methodology in terms of securing it, since it has unique characteristics such as microservices, containers, serverless computing, and others.\nTo secure your cloud-native infrastructure, ensure you have good visibility over your environment, fix all findings and reach a robust cloud security posture, and continuously monitor your infrastructure.","seoDescription":"As more organizations adopt a cloud-native approach to support their business operations, security may sometimes be left out of their initial plans. Moreover, a cloud-native infrastructure requires a different methodology in terms of securing it, since it has unique characteristics such as microservices, containers, serverless computing, and others. To secure your cloud-native infrastructure, ensure you have good visibility over your environment, fix all findings and reach a robust cloud security posture, and continuously monitor your infrastructure.","date":"2023-04-13T11:40:40.049Z","featuredpost":true,"permalink":"cloud-native-infrastructure","featuredimage":{"publicURL":"/static/2e170be58cdaf9f51921ecbb5e689ed8/blog_38-cover.webp","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/2e170be58cdaf9f51921ecbb5e689ed8/888e2/blog_38-cover.webp","srcSet":"/static/2e170be58cdaf9f51921ecbb5e689ed8/913d0/blog_38-cover.webp 205w,\n/static/2e170be58cdaf9f51921ecbb5e689ed8/91660/blog_38-cover.webp 410w,\n/static/2e170be58cdaf9f51921ecbb5e689ed8/888e2/blog_38-cover.webp 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[]},"width":820,"height":460}}}},"rawMarkdownBody":"As more organizations adopt a cloud-native approach to support their business operations, security may sometimes be left out of their initial plans. Moreover, a [cloud-native infrastructure](https://cyscale.com/blog/cloud-native-security-guide/) requires a different methodology in terms of securing it, since it has unique characteristics such as: \n\n* A microservices architecture, \n* Containers, \n* Serverless computing, and others. \n\nThese differences pose new security challenges, and in this article we will look at best practices for securing cloud-native environments across multiple cloud providers and how to remediate any cybersecurity drifts. \n\n## Understanding your cloud-native infrastructure \n\nThe first step to building a comprehensive security plan is understanding every side of your cloud computing environment. This means that visibility is the first aspect we need to talk about.  \n\nVisibility is the foundation on which security is built. Without visibility into your infrastructure, you cannot effectively secure your cloud apps, monitor for threats, detect anomalies, or respond to incidents. \n\nFor example, with microservices and containers, it can be challenging to maintain visibility, as these components are constantly changing and evolving. \n\nTo achieve visibility, you need to establish an inventory of all cloud resources, understand their relationships and how they are situated in relation to the Internet, as well as continuously monitor them to understand normal behavior. At the end of the article, we explain how this tedious process can be resolved very efficiently. \n\n## Assessing your infrastructure \n\nAfter gaining visibility into your infrastructure, it’s time to thoroughly check your resources for misconfigurations and vulnerabilities.  \n\nWe’ve comprised a list of common misconfigurations in cloud-native environments: \n\n### 1. Incorrect container configurations \n\nThis is a broad category that includes: \n\n* overly permissive container privileges,  \n* unpatched vulnerabilities,  \n* poor access control, and others. \n\nRunning containers with excessive permissions, such as root, can lead to compromising the entire VM (virtual machine) if the container is escaped. This misconfiguration is common because, by running a container as root, the administrator does not have to input their password for privileged actions. \n\nFailing to update and patch containers and their underlying operating systems can lead to critical attacks that expose your cloud infrastructure. \n\nPoor access control can result in unauthorized access to sensitive data, such as passwords and encryption keys, as well as privilege escalation risks. Privilege escalation occurs when an attacker gains access to a low-privileged user and pivots to a higher-privileged user, possibly obtaining access to more resources and further attack paths. \n\n### 2. Missing or inadequate encryption \n\nEncryption is a must-have in your cloud security plan for application development. Protect data in transit and at rest by encrypting it with industry-recommended cryptographic algorithms and by having a robust key management system for your cloud-native applications. Read more about encryption best practices [here](https://cyscale.com/blog/types-of-encryption/). \n\n### 3. Unsecured storage resources \n\nUnencrypted storage volumes, misconfigured database permissions, buckets with public access enabled… there are many storage resources, and it's easy to lose track of them and their configurations. It's enough to allow public access to one cloud asset to compromise your entire environment if, for example, you're storing keys there.  \n\nSecure your storage resources by: \n\n* blocking public access to buckets using access lists and policies, \n* performing consistent backups and ensuring that those backups are stored in different geographical areas, \n* placing your databases in Virtual Private Clouds (VPCs) and only allowing whitelisted IPs to connect to databases, and many others. \n\nWe have a [whitepaper about cloud storage misconfigurations](https://cyscale.com/whitepaper/cloud-storage-misconfigurations/) that goes into great detail on how to protect them. \n\n### 4. Improper network security \n\nNetwork security is a critical aspect of cloud-native security, as it helps to ensure that network traffic is appropriately filtered and secured. One of the key features of network security is Network Security Groups (NSGs).  \n\nNSGs are virtual firewalls that allow you to filter inbound and outbound traffic to and from your resources. They can be used to: \n\n* restrict access to specific ports and protocols, such as blocking access to SSH, \n* blocking traffic originating from certain IPs, \n* monitoring traffic to detect suspicious activity. \n\n## Drawing conclusions and building an efficient plan \n\nIt’s easy to fall short when securing your cloud environment; we know how difficult it is to obtain contextual visibility, check all of your resources, and implement remediation as fast as possible. But we've got you covered. \n\nIf you have a robust security posture, DevOps teams can streamline the software development lifecycle of native apps and shift their attention to important aspects. \n\nThese are the steps to secure your cloud-native infrastructure: \n\n* ensure you have good visibility over your environment, \n* fix all findings and reach a robust cloud security posture, \n* continuously monitor your infrastructure. \n\nUsing the Cyscale cloud platform, you have access to several powerful dashboards that enable you to see, in real-time, your assets, their relationships, misconfigurations, as well as existing accounts and IAM permissions. Gain complete visibility using: \n\n* A general dashboard, with an overall view of the company’s cloud environments, as well as an asset inventory, \n* A [Data Security Dashboard](https://cyscale.com/blog/data-security-dashboard/), which delivers a comprehensive view over data at rest storage assets and keys, using DSPM (Data Security Posture Management) capabilities, \n* [An Identity Dashboard](https://cyscale.com/blog/check-for-least-privilege/), that helps users understand the impact of IAM permissions. \n\nBesides these dashboards, you have access to 400+ controls across multiple public cloud service providers such as AWS (Amazon Web Services), Microsoft Azure, and Google Cloud that check your entire infrastructure for misconfigurations. On top of this, you get remediation steps that help you adjust your settings in no time, even if you’re using multi-cloud workloads.\n"}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["Cloud Native Security"],"title":"CNAPP: The Key to Cloud-Native Applications Security","seoTitle":"CNAPP: The Key to Cloud-Native Applications Security","description":"CNAPP is a security solution designed to protect cloud-native applications. A cloud-native application is an application that is intended for cloud, ran and hosted in the cloud. It has the following functionalities: CSPM, CWPP, CIEM, KSPM, Containers security. CNAPP solutions provide visibility, security controls and alerts, data security features, compliance capabilities, container image scanning, cloud workloads protection, Kubernetes Cluster inspection and IAM.","seoDescription":"CNAPP is a security solution designed to protect cloud-native applications. A cloud-native application is an application that is intended for cloud, ran and hosted in the cloud. It has the following functionalities: CSPM, CWPP, CIEM, KSPM, Containers security. CNAPP solutions provide visibility, security controls and alerts, data security features, compliance capabilities, container image scanning, cloud workloads protection, Kubernetes Cluster inspection and IAM.","date":"2023-02-21T08:00:33.696Z","featuredpost":true,"permalink":"cnapp-secure-native-applications","featuredimage":{"publicURL":"/static/e9f123d8348f5b8d33d37525b7ffa58f/blog_34-cover.webp","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/e9f123d8348f5b8d33d37525b7ffa58f/888e2/blog_34-cover.webp","srcSet":"/static/e9f123d8348f5b8d33d37525b7ffa58f/913d0/blog_34-cover.webp 205w,\n/static/e9f123d8348f5b8d33d37525b7ffa58f/91660/blog_34-cover.webp 410w,\n/static/e9f123d8348f5b8d33d37525b7ffa58f/888e2/blog_34-cover.webp 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[]},"width":820,"height":460}}}},"rawMarkdownBody":"<!--StartFragment-->\n\n## What is CNAPP? \n\nCNAPP (Cloud-Native Application Protection Platform) is a security solution designed to protect cloud-native apps. A [cloud-native application](https://cyscale.com/blog/cloud-native-security-guide/) is an application that is intended for cloud, ran and hosted in the cloud. \n\nA CNAPP combines multiple functionalities that are otherwise found in separate tools, including:  \n\n* CSPM (Cloud Security Posture Management),  \n* CWPP (Cloud Workload Protection Platform), \n* CIEM (Cloud Infrastructure Entitlements Management), \n* KSPM (Kubernetes Security Posture Management), and \n* Containers Security. \n\nIn this article, we will understand what features a CNAPP has, and why it is a necessary tool for protecting cloud-native architectures. \n\n## Why is CNAPP needed?  \n\nSince cloud-native applications are designed using a different architecture than non-native applications, it is essential to understand the key features cloud-native applications have and the security concerns that come with them. \n\n**How is the infrastructure different?** Cloud-native software is built in containerized environments, such as those managed with Kubernetes, which can increase scalability and flexibility in the cloud, but can also introduce new concerns in terms of security.  \n\nThese types of applications are composed of microservices, which are components that communicate with each other through APIs. \n\nDue to the differences between native and non-native cloud applications, a CNAPP solution is necessary to cover the specific security needs of applications developed for the cloud.  \n\nLet’s understand some of the features CNAPP solutions provide to secure cloud-native applications. \n\n### 1. Visibility\n\nContext-aware visibility is crucial for identifying vulnerabilities in cloud-native environments. Because of the complex nature of cloud-native applications, it can become challenging to understand issues regarding the underlying infrastructure. Visibility is ensured in CSPM platforms. \n\nFor example, even though microservices communicate with each other and the application is functioning correctly, vulnerabilities may still exist. A misconfigured API gateway that controls access to microservices may permit unauthorized access.  \n\nTherefore, visibility features in CNAPP are important to identify and fix vulnerabilities in the cloud-native infrastructure. \n\n[The Cyscale Security Knowledge Graph™](https://cyscale.com/products/security-knowledge-graph/) is an all-inclusive graph that provides correlations between cloud assets, applications and systems and automatically pinpoints security issues. [The graph](https://cyscale.com/blog/security-knowledge-graph-integrations/) uses context to identify relevant security vulnerabilities and provide visibility in your cloud environment. \n\n### 2. Security controls\n\nManually going through every cloud asset and configuration to check for vulnerabilities is not only a difficult task, but it can also become impossible in large public cloud environments in which thousands of assets are in use.\n\nTo solve this problem, security controls are used to check for misconfigurations and vulnerabilities, and provide guidance for remediating found issues. This mechanism saves time through automation and reduces the risk of human error, making it a crucial aspect of CNAPP. \n\nFor example, you can see a control from the Cyscale security platform in the image below. \n\n<img src=\"/img/34_blog-1-control.webp\" alt=\"Control in the Cyscale platform\" title=\"Control in the Cyscale platform\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nIn Cyscale, you can find a collection of over 300 controls that check cloud services across multiple vendors and provide remediation steps for findings. \n\nWhen an asset does not pass a control, an alert is generated in real time.  \n\nTargeted alerts that highlight vulnerabilities and misconfigurations in a cloud environment are crucial; reacting to and fixing findings quickly to reduce the attack surface can save a company from a breach. \n\nHowever, alert fatigue is a real problem that security teams deal with; receiving too many alerts can lead to security professionals ignoring important alerts. A good CNAPP solution deals with all of these problems and provides a sound alert system.  \n\nFor example, in the image below, you can see an alert that has been triggered. Alerts can be Open or Resolved, to indicate if the issue that generated the alert has been fixed. \n\n<img src=\"/img/34_blog-2-alert.png\" alt=\"Alert in the Cyscale platform\" title=\"Alert in the Cyscale platform\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\n### 3. Data security \n\nDue to the dynamic nature of cloud-native technologies, data security is a critical concern in companies administering them. By scaling up and down quickly, sensitive data may be exposed. \n\nUsing a [CNAPP solution](https://cyscale.com/products/cnapp/), data security can be achieved for cloud-native applications. Security controls, as discussed in the previous section, enable organizations to identify misconfigurations or non-compliance with data security best practices in their cloud resources.\n\nIt is recommended that: \n\n* [At rest and in transit data are encrypted](https://cyscale.com/blog/types-of-encryption/),  \n* Assets are not publicly accessible unless it is necessary, \n* Encryption keys are managed correctly in their entire lifecycle, and others. \n\nFor each of these best practices and more, Cyscale offers a wide variety of controls that cover AWS, Microsoft Azure, Google Cloud, and Alibaba Cloud. Some examples of controls are: \n\n* *Ensure object containers don't have permissive access policies*, \n* *Ensure databases are not publicly accessible*, \n* *Ensure that Encryption key is rotated*. \n\nMoreover, in Cyscale, you can find a [Data Security Dashboard](https://cyscale.com/blog/data-security-dashboard/), which delivers a comprehensive view over data at rest storage assets and encryption keys, using DSPM (Data Security Posture Management) capabilities. \n\n### 4. Compliance \n\nCNAPP solutions help companies in their [compliance](https://cyscale.com/blog/cloud-security-and-compliance/) journey. The CSPM ([Cloud Security Posture Management](https://cyscale.com/blog/improve-cloud-security-posture/)) component of CNAPP provides reporting and policy management features that help companies meet various compliance frameworks.  \n\nTo become compliant, companies use CNAPP security tools to prepare for audits. Some of the most popular accredited standards are: \n\n* [ISO 27001](https://cyscale.com/blog/new-iso27001-2022-version/),  \n* [SOC 2](https://cyscale.com/blog/soc-2-compliance-in-cloud/), \n* GDPR, \n* [PCI-DSS](https://cyscale.com/blog/pci-dss-compliance-in-cloud/), \n* [HIPAA](https://cyscale.com/blog/hipaa-compliance-in-cloud/), \n* [NIST](https://cyscale.com/blog/nist-compliance-in-the-cloud/). \n\nCyscale supports all of them and more. You can view all supported standards on the Standards page, enable or disable frameworks, track progress with your compliance process, and view the cloud-focused requirements and associated controls for each of the standards.  \n\n<img src=\"/img/34_blog-3-compliance.webp\" alt=\"Compliance standards in the Cyscale platform\" title=\"Compliance standards in the Cyscale platform\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\n### 5. Container image scanning  \n\nPart of the process of securing containers is image scanning. This is essential because it checks container images for misconfigurations and vulnerabilities and reduces the risk of deploying containers with security issues.  \n\nFor example, if a container image uses **an unpatched version of Log4J**, this could introduce a critical vulnerability in your cloud environment. It may allow an attacker to execute arbitrary code on the system running the container, compromising the data and applications running in that container. \n\n### 6. Cloud workloads protection \n\nCWPP helps companies discover vulnerabilities and correlate them with cloud misconfigurations. Using a CWPP, you mitigate risk across multi-cloud environments by identifying vulnerabilities documented in [CVEs](https://cve.mitre.org/) and pinpointing which misconfigurations have exposed your cloud infrastructure to them. \n\nTo secure cloud-native applications, a CWPP tool analyzes: \n\n* VMs,  \n* Containers,  \n* Serverless functions, and others. \n\n### 7. Kubernetes Cluster inspection \n\nA cluster is a set of nodes (machines) that run applications in containers. It contains the nodes and a control plane, which is responsible for the maintenance of the nodes, determining, for example, which application is running in which container. \n\nCluster inspection is a feature of Kubernetes Security Posture Management (KSPM) that provides visibility into the security posture of a Kubernetes cluster by inspecting its configuration and runtime behavior. \n\nMisconfigurations that can be found using cluster inspection are: \n\n* Unauthorized access,  \n* Missing patches,  \n* Insecure network configurations, and others. \n\n### 8. IAM\n\n[IAM (Identity and Access Management)](https://cyscale.com/blog/iam-services-in-aws-azure-gcp/) is another essential component of cloud-native applications security, specific to a CIEM platform. With complex cloud environments, it can become challenging to keep track of users, their different access levels, what impact certain permissions have, and so on. \n\nFor cloud-native applications, IAM can become a very complex aspect of cloud security due to the following aspects, but not limited to: \n\n1. Cloud-native applications are highly scalable, and identities and access levels may change rapidly, making it more difficult to manage IAM. \n2. Cloud-native software is built to run in cloud environments, in multi-cloud as well as on-premises. \n3. The microservices architecture can increase the difficulty of managing IAM identities at the service level. \n\nCompanies can use a CNAPP solution to secure their cloud in terms of IAM and manage identities and the authentication workflow.   \n\nSome best practices regarding IAM are: \n\n* **Implement multi-factor authentication for all users.** This measure adds an additional layer of security by requesting at least two forms of identification. \n* **Use role-based access control (RBAC)** to limit access to sensitive data to authorized users and obtain high granularity. \n* **Comply with the Least Privilege Principle** to restrict access to the lowest privilege necessary. \n* **Assign permissions at group level** and assign very well-defined rules and privileges to groups. This decreases the risk of data breaches. \n\nYou can read more about securing IAM in the cloud [here](https://cyscale.com/blog/iam-services-in-aws-azure-gcp/). \n\nTo ensure a deep understanding of user permissions and their impact, Cyscale provides an [Identity Dashboard](https://cyscale.com/blog/check-for-least-privilege/). \n\n<img src=\"/img/34_blog-4-iam.webp\" alt=\"The Identity Dashboard in the Cyscale platform\" title=\"The Identity Dashboard in the Cyscale platform\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\n## Conclusion \n\nIn conclusion, [CNAPP (Cloud-Native Application Protection Platform) solutions](https://cyscale.com/products/cnapp/) are a critical security component for cloud-native applications. Due to their dynamic nature, their high scalability, and different architecture, traditional security measures may not be sufficient. \n\nCNAPP solutions offer: \n\n* Visibility, \n* Compliance, \n* Data security, \n* Runtime protection, \n* Container image scanning, \n* Kubernetes cluster inspection, \n* IAM, and others. \n\nUse Cyscale to benefit from these features and secure your cloud environment across multiple cloud providers!\n\n<!--EndFragment-->\n"}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["Cloud Native Security"],"title":"Cloud-Native Security: A Comprehensive Guide to Securing Your Technology Stack ","seoTitle":"Cloud-Native Security: A Comprehensive Guide to Securing Your Technology Stack ","description":"An article about cloud native security. We understand the advantages of cloud-native applications based on on-premises applications, as well as look at how to secure your cloud native application. The 4 layers that should be considered when securing cloud-native apps are at code, container, cluster and cloud levels.","seoDescription":"A comprehensive guide to securing your technology stack from the perspective of cloud-native security. We understand the advantages of cloud-native applications based on on-premises applications, as well as look at how to secure your cloud native application. The 4 layers that should be considered when securing cloud-native apps are at code, container, cluster and cloud levels. You can identify misconfigurations in the cloud and remediate them effectively using Cyscale.","date":"2022-06-24T10:33:17.619Z","featuredpost":true,"permalink":"cloud-native-security-guide","featuredimage":{"publicURL":"/static/341ce0dd924ffe663b1e53e4b9941d22/cloud-native.webp","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/341ce0dd924ffe663b1e53e4b9941d22/888e2/cloud-native.webp","srcSet":"/static/341ce0dd924ffe663b1e53e4b9941d22/913d0/cloud-native.webp 205w,\n/static/341ce0dd924ffe663b1e53e4b9941d22/91660/cloud-native.webp 410w,\n/static/341ce0dd924ffe663b1e53e4b9941d22/888e2/cloud-native.webp 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[]},"width":820,"height":460}}}},"rawMarkdownBody":"<!--StartFragment-->\n\n<div id=\"what-does-cloud-native-mean\">\n\n## What does cloud-native mean?\n\n</div>\n\nDepending on the method they were built upon, we have three categories of applications that make use of cloud technology: \n\n* Cloud-native, \n* Cloud-based, \n* Cloud-enabled. \n\nA **cloud-native application** is an integral part of a [cloud-native infrastructure](https://cyscale.com/blog/cloud-native-infrastructure/). It is developed and deployed in the cloud in its entirety.  \n\nThis type of application is containerized, for example in Docker or Kubernetes, to ensure isolated, dependency-free environments, and most of the time uses microservices to divide tasks and provide granularity.  \n\n**Cloud-based applications** are built and run outside the cloud but have certain features integrated into the cloud. \n\nA **cloud-enabled or non-native application** is originally meant for an on-premises environment. It is built outside the cloud and later transferred into one, in order to enjoy some of its benefits. \n\n<div id=\"advantages\">\n\n## Advantages of going cloud-native\n\n</div>\n\nTo better understand the differences between cloud-native and on-premises apps that do not use cloud, we will look at the former’s advantages and disadvantages over the latter’s.\n\n### Speed \n\nNative applications are easier and faster to build and deploy than on-premises ones because no sophisticated software or hardware requirements need to be fulfilled. Moreover, updates are also implemented faster in a cloud-native architecture and require no downtime.\n\n### Cost \n\nThe cost of using cloud-native technology depends on the application but is generally lower since it does not require the purchase of expensive hardware. For example, instead of buying a computer, you use virtual machines.\n\nTypically, cloud-native applications only require software licenses or subscriptions. \n\n### Scalability \n\nSince cloud-native environments do not require hardware upgrades, they are scalable and adaptable to business requirements. \n\nAccording to [CNCF](https://github.com/cncf/toc/blob/main/DEFINITION.md) (The Cloud Native Computing Foundation), an open source project, “cloud native technologies empower organizations to build and run scalable applications”. \n\n### Resiliency \n\nThe cloud is known for its resiliency against natural disasters, power outages and other incidents that may disrupt a cloud-enabled application. Native cloud workloads are therefore more resilient. \n\n### A serverless model \n\nCloud-native applications may work on a serverless model by leaving the provisioning and maintaining tasks to the cloud provider. This model simplifies the deployment steps and eases the developer's work, increasing productivity. \n\nMoreover, using this model, cloud-native applications can be launched only when needed, the code in serverless functions responding to triggers and consuming resources when necessary. An advantage is that costs are reduced for applications. \n\n<div id=\"guide-to-secure-cloud\">\n\n## How to secure your cloud-native application\n\n</div>\n\nAccording to [Kubernetes](https://kubernetes.io/docs/concepts/security/overview/), cloud-native security can be approached in 4 layers, called the 4 C’s: \n\n1. Code, \n2. Container, \n3. Cluster, \n4. Cloud. \n\n### Code \n\nThe inner layer of security refers to the code; it is the part the application’s developer has the most control over, yet it can be one of a hacker's most appealing attack surfaces. \n\nApplication code security is usually an underrated cybersecurity mechanism and neglecting it can lead to disastrous outcomes. Here are a few security practices for securing code: \n\n* **Sanitize input.** This can go a long way and prevent security vulnerabilities such as SQL injection, cross-site scripting, and others. \n* **Use encryption.** Data at rest and data in transit should always be encrypted. Make sure you’re sending application data encrypted through TLS. \n* **Ensure modern cryptography.** Even if you’re using encryption and hashing, make sure that: \n\n  * You’re not using deprecated algorithms, such as DES for encryption and MD5 for hashing, Instead, use AES and SHA-256 or newer, which are the current standards. \n  * You’re storing cryptographic keys safely (and not in the source code). \n  * You’re rotating keys regularly to safeguard against brute-force attacks on them. \n* **Only open the ports you’re using.** Don’t forget open ports, especially on internet-facing applications. This is one of the ways attackers can gain access to the cloud infrastructure and infect it with malware. \n\n### Container \n\nThe next layer of security for native cloud is controlled at the container level. \n\nContainers are virtualization tools which allow you to run applications in isolated environments, separated from the hardware.  \n\nIf your application uses various technologies, you can install any needed packages and resolve dependencies in the container instead of on the host operating system. \n\nAnother useful feature of containers is that you can create container image templates and replicate environments without having to re-install tools and technologies. \n\nThe most known containerization services are Docker and Kubernetes.  \n\nDocker is a platform that enables developers to deploy applications in a containerized environment. Docker runs over a single node (machine), while Kubernetes is a container orchestration service. \n\nDocker and Kubernetes are usually seen as competitors, but they work very well together; Kubernetes can help manage multiple Docker containers simultaneously. \n\nHowever, there are a few security issues that need to be addressed regarding containers security: \n\n* **Do not run containers as root.** Developers find it easier to run containers as root because they don't have to provide their password when executing an action that requires root privileges. However, this opens up a wide palette of vulnerabilities; any attacker that would gain access to the container would have root privileges and, therefore, the highest level of permissions. \n* **Reduce the attack surface.** If an attacker gains access to the container, make sure they cannot escalate their privileges or escape the container; eliminate the use of UNIX binaries that can be used to bypass rules, such as \"sed\" and \"awk\". \n* **Implement a strong network policy**—for example, filter traffic to and from the container and use firewalls to ensure robust security. \n\n### Cluster \n\nThe third layer for cloud-native security is managed in clusters. \n\nA cluster is a set of nodes (machines) that run applications in containers. It comprises the nodes and a control plane, which is responsible for the maintenance of the nodes, determining for example which application is running in which container. \n\nThe nodes that are part of a cluster run the applications. \n\nLet’s understand how to protect clusters with the following security solutions:\n\n* **Implement Authentication.** This step requires the user to prove they are who they claim to be. The authentication process may be different from service to service, but it can require credentials like passwords, client certificates, tokens, and others. \n* **Implement Authorization.** Role-based access control (RBAC) establishes authorization by assigning roles to users and managing their privileges at role level to ensure application security. \n* **Control what privileges containers run with.** Establish permissions by using security contexts. These are settings that can be applied to a container or a set of containers inside a cluster that define privileges and access control. \n\n### Cloud \n\nThe outer layer of a cloud-native application refers to cloud infrastructure and configuration. Let’s see how to fix [the most common cloud misconfigurations](https://cyscale.com/use-cases/cloud-misconfigurations/) and secure your cloud-native application against attackers. \n\n* **Restrict inbound and outbound traffic.** Make sure to close or restrict ports that are not necessary. Use access lists to blacklist ranges of IPs and ports.  \n* **Ensure compliance with the Least Privilege Principle.** Make sure no user has more privileges than required to carry out their tasks and eliminate all administrator/root accounts that are not strictly necessary. \n* **Implement strong encryption and use industry-recommended cryptographic algorithms with strong keys.** Ensure that no one can read databases, files, and other resources if they gain access to your company's cloud. \n\nYou can identify misconfigurations in the cloud and remediate them effectively using the Cyscale security platform.\n\nThe Cyscale Cloud Platform offers a [CSPM (Cloud Security Posture Management)](https://cyscale.com/blog/what-to-look-for-in-a-cspm/) security tool that: \n\n* checks for a wide variety of vulnerabilities using security controls, \n* provides integration with the most important public cloud service providers like AWS (Amazon Web Services), Google Cloud, Azure, Alibaba, and supports multi-cloud environments,\n* sends relevant alerts,  \n* provides remediation steps to help your security teams protect your cloud environment effectively and overcome security challenges, and others. \n\n<!--EndFragment-->\n"}}]}},"pageContext":{"limit":9,"skip":0,"numPages":1,"currentPage":1,"category":"Cloud Native Security","seoTitle":"Cloud Native Security Trends & Tips | Cyscale Blog","seoDescription":"Delve into the latest in Cloud Native Security. Discover key trends, actionable tips, and expert insights to secure your cloud-native environments effectively.","heading":"Cloud Native Security Trends & Tips","categoriesList":["Cloud Security","Cloud Native Security","CNAPP","Compliance","News","Product","IAM","CSPM","Misconfigurations","Encryption"],"categorySlug":"cloud-native-security"}},"staticQueryHashes":["1541236353","220583031","3722074465","4068795820","4109069157","81406208","981947644"],"slicesMap":{}}