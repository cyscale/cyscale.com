{"componentChunkName":"component---src-template-blog-categories-template-js","path":"/blog/iam/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"authors":"Ovidiu Cical","categories":["News","IAM"],"title":"Human and Non-Human Identity Management for Multi-Cloud","seoTitle":"Human and Non-Human Identity Management for Multi-Cloud","description":"To effectively use the cloud, you need to be able to trust non-human identities like service accounts used by applications, and third-parties. ","seoDescription":"To effectively use the cloud, you need to be able to trust non-human identities like service accounts used by applications, and third-parties. ","date":"2024-02-21T14:45:48.245Z","featuredpost":true,"permalink":"human-non-human-identity-management-multi-cloud","featuredimage":{"publicURL":"/static/2d02fbd03b9db96ca496e25efb12f75b/human-non-human-identity-cloud.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/2d02fbd03b9db96ca496e25efb12f75b/d6cae/human-non-human-identity-cloud.png","srcSet":"/static/2d02fbd03b9db96ca496e25efb12f75b/ac644/human-non-human-identity-cloud.png 205w,\n/static/2d02fbd03b9db96ca496e25efb12f75b/89b47/human-non-human-identity-cloud.png 410w,\n/static/2d02fbd03b9db96ca496e25efb12f75b/d6cae/human-non-human-identity-cloud.png 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/2d02fbd03b9db96ca496e25efb12f75b/913d0/human-non-human-identity-cloud.webp 205w,\n/static/2d02fbd03b9db96ca496e25efb12f75b/91660/human-non-human-identity-cloud.webp 410w,\n/static/2d02fbd03b9db96ca496e25efb12f75b/888e2/human-non-human-identity-cloud.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":460}}}},"rawMarkdownBody":"So far, Cyscale has focused on making it easy to see **who** (colleagues, collaborators, guests, fellow humans) has access to your cloud environments. Now you can also see **what**.  \n\n## Why are non-human identities important? \n\nNearly 90% of organizations routinely provide access privileges to non-humans, and 50% admit they have granted inappropriate access to non-humans*. But a similar number (54%) also revealed that inappropriate access granted to a non-employee or non-human has resulted in severe incidents, such as lost control of resources, data loss, and direct security breaches.    \n\n## Non-humans run the cloud \n\nIt’s become widely accepted that to effectively use the cloud, you need to trust non-human identities with access to resources and data in your environment. Such identities include service accounts used by applications, services, and third-party vendors. \n\nBut we frequently encounter environments among our own customer base with a non-human identity attached to a machine that has high or inappropriate privileges, is publicly accessible from the internet, and has a vulnerability.  \n\nAny attacker capable of exploiting that identity will be able to move laterally in the environment. \n\n## But humans use the cloud \n\nWhile it’s well established that [IAM (Identity and Access Management) plays an important role in a company’s security and compliance posture](https://cyscale.com/products/ciem/), and most organizations have specific policies in place so that the process of handling identities and access is well documented and manageable, the life of a CISO, CTO, or security analyst gets more difficult if they need to go into more depth. \n\nLet’s say you have an employee that’s leaving in a month, and you need to see a list of all the resources they have access to? Or you discover some unusual logs on one of your VMs and need to know who has access to it? These questions are not so easy to answer from your AWS, Azure, or Google Cloud console. \n\n<div class='grid grid-cols-12 mt-12 gap-2'>\n  <div class='col-span-12 lg:col-span-6'>\n    <img src=\"/img/inventory-permissions.png\" alt=\"Inventory display of assets accessible to user\" class=\"rounded-md\" style=\"width: 100%; margin: 0;\" />\n  </div>\n  <div class='col-span-12 lg:col-span-6'>\n    <img src=\"/img/inventory-accessible.png\" alt=\"Inventory view of database access control\" class=\"rounded-md\" style=\"width: 100%; margin: 0;\" />\n  </div>\n</div>\n\n\n<div class='mt-16 rounded-tl-2xl rounded-b-2xl grid grid-cols-12 gap-4 bg-zircon py-8 px-4 lg:py-4' style='borderTopRightRadius: 3rem'>\n    <div class='col-span-12 lg:col-span-2'>\n        <div class='flex justify-center'>\n            <img src='/img/cloud-icon-widget.svg' alt='' id='img-text-button' />\n        </div>\n    </div>\n    <div class='col-span-12 lg:col-span-6 flex items-center justify-center'>\n         <p class='font-montserrat font-bold' id=\"paragraph-text-button\">\n            See How Cyscale Helps Protect <span id=\"font-gradient\">Human and Non-Human</span> Identities\n        </p>\n    </div>\n    <div class='col-span-12 lg:col-span-4 flex justify-center items-center'>\n        <a class='mx-auto bg-gradient-to-r from-[#0F26AA] to-[#FF4A56] hover:from-[#FF4A56] hover:to-[#0F26AA] block font-medium rounded uppercase text-center no-underline hover:no-underline max-w-sm lg:inline-block font-hind' href='https://cyscale.com/products/ciem/'>\n            <span style='padding: 0.625rem 2.5rem' class='text-white block'>\n                Show me\n            </span>\n        </a>\n    </div>\n</div>\n\n## Cloud identity management is hard \n\nPopular security tools offered by the public cloud providers suffer from two main problems:  \n\n**1a)** They don’t really support comprehensive identity and access management functionality at all. They display users, roles, policies other IAM related entities, up to Permissions but that’s where they draw the line. The result is that you can’t state “User X has access to Resources A, B and C”.  \n\n**1b)** Let’s not even get started with non-human identities where a resource can use a service identity to access another resource.  \n\n **2)** They’re not meant specifically for this use case and require mastering some tools and languages beforehand such as Azure Resource Graph.  \n\nThis particular challenge is compounded by multi-cloud environments because the tools and the skills to use them, are not cross compatible.  \n\nLet’s say you’ve decided to go for the in-house tools from cloud providers and that you have an identity provider that helps you provision your users, groups and roles in your AWS and Azure environments. At this point, the users will receive access to both clouds.  \n\nSo, this means that managing identities will require two distinct sets of skills: both familiarity with the AWS IAM Access Analyzer and skills for easily getting from policies to resources AND knowledge of the query language used by Azure for exploring its Resource Graph.  \n\nOf course, there’s the alternative of using CLI tools to perform this analysis. There are even some great open-source tools to help you achieve the goal. However, this approach has its own limitations, like any CLI tool, and, if you’d like to go more in depth and see how the accessibility of a resource can impact other parts of the infrastructure, your journey stops there. \n\n## Managing human and non-human identities in Cyscale \n\nOur updated Identity dashboard now gives you an overview of the identities of your workloads across compute services (VMs, serverless, containers) and deep dive options to better understand the permissions, both human and non-human, when necessary, so you can now see: \n\n* A simplified view for each asset in your inventory, which tells you: \n* Who / What can access that asset  \n* What other resources can be accessed by that asset as a machine or non-human identity \n\n<img src=\"/img/identity-dashboard-service-accs.png\" alt=\"The Cyscale Identity dashboard\" title=\"\" class=\" blog-image-shadow \" style=\"width:90%;height:auto;\"/>\n\n\\*﻿\\*SailPoint: <https://www.sailpoint.com/blog/survey-finds-non-employee-and-non-human-identities-leading-to-major-security-issues/>\n"}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["IAM"],"title":"IAM Best Practices: Proven Strategies for Bulletproof Identity and Access Control","seoTitle":"IAM Best Practices: Proven Strategies for Bulletproof Identity and Access Control","description":"In traditional infrastructures, the first line of defense is the network layer. Network administrators in legacy systems invest significant effort into securing routers, adding firewalls and ensuring that all network devices function correctly. In the cloud, under the shared responsibility model, the customer does not deal with physical devices anymore, and security is shifted to identity and access control, known as IAM (Identity and Access Management), which focuses on the prevention of unauthorized users and devices from accessing cloud assets. ","seoDescription":"Discover proven strategies for bulletproof access control with our in-depth guide on IAM best practices. Ideal for CISOs, DevOps, and Cloud Security experts.","date":"2023-10-20T13:33:59.643Z","featuredpost":true,"permalink":"iam-best-practices-identity","featuredimage":{"publicURL":"/static/8b276f0f209fd588305983c04ee987cb/56_blog-cover-image.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/8b276f0f209fd588305983c04ee987cb/2c0f5/56_blog-cover-image.jpg","srcSet":"/static/8b276f0f209fd588305983c04ee987cb/41be8/56_blog-cover-image.jpg 205w,\n/static/8b276f0f209fd588305983c04ee987cb/c78f7/56_blog-cover-image.jpg 410w,\n/static/8b276f0f209fd588305983c04ee987cb/2c0f5/56_blog-cover-image.jpg 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/8b276f0f209fd588305983c04ee987cb/913d0/56_blog-cover-image.webp 205w,\n/static/8b276f0f209fd588305983c04ee987cb/91660/56_blog-cover-image.webp 410w,\n/static/8b276f0f209fd588305983c04ee987cb/888e2/56_blog-cover-image.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":460}}}},"rawMarkdownBody":"In traditional infrastructures, the first line of defense is the network layer. Network administrators in legacy systems invest significant effort into securing routers, adding firewalls and ensuring that all network devices function correctly. In the cloud, under the shared responsibility model, the customer does not deal with physical devices anymore, and security is shifted to identity and access control, known as IAM (Identity and Access Management), which focuses on the prevention of unauthorized users and devices from accessing cloud assets.  \n\n## Why is IAM important? \n\nIf a user with high privileges is compromised in the cloud, a situation can escalate to critical levels quickly leaving vulnerable apps and data exposed; this is why IAM is the first and most important line of defense against attackers.  \n\n## How do you manage IAM in the cloud? \n\nNowadays, every employee has multiple accounts for different tools they use, such as HR applications, a CRM or ERP solution, various cloud platforms, and more. We do not live in a world where one person equals one account to manage, meaning the process of securing access is complicated from the start.  \n\nA single developer or other IT employee might need to have access to multiple cloud environments, a version control system, a deployment platform, and a ticket management system, and if you multiply that by 10 or 100 employees the number of accounts or users you need to manage is quickly getting into the hundreds or thousands.  \n\nIt’s impossible to manually handle so many accounts and ensure that they’re all properly secured, granted appropriate permissions, and correctly deprovisioned when employees leave.  \n\n### Key IAM processes: The access management lifecycle   \n\nLet’s take a look at the key stages in the access management lifecycle, keeping in mind that these processes need to apply to the individual and all the user accounts they are associated with: \n\n* **Onboarding:** the first stage involves creating a new user, assigning roles to it and providing permissions over resources. \n* **Role management:** in this stage, roles are already defined and configured for users. New roles and permissions may be added based on needs. \n* **Access review:** these are periodic evaluations of permissions assigned to users, groups, or roles. This stage involves reviewing and validating that individuals or entities have appropriate access levels based on their current roles and responsibilities. \n* **Offboarding:** This stage is crucial and involves removing users from the company's systems, revoking permissions and disabling accounts, thus preventing unauthorized access after an individual leaves the organization. \n\n### Centralizing IAM processes in the cloud \n\nIn order to handle an impossible workload and ensure due process is followed each and every time, centralization has become key. Let’s look at best practices to secure [IAM in the cloud](https://cyscale.com/blog/iam-services-in-aws-azure-gcp/) throughout the identity lifecycle. \n\n### SSO (Single Sign-On) \n\nOften, companies will deploy multiple cloud accounts, and the best practice is to organize these using provider specific mechanisms (ie. Organizations and Folders in AWS, Management Groups in Azure, etc.). Managing identities at cloud account level would quickly become unmanageable and it’s best to keep those at a minimum. \n\nA cloud company should use an identity provider (whether that’s one built-in into the cloud service provider, such as Azure AD, or an external SSO provider, like [Okta](https://cyscale.com/blog/iam-okta-security-best-practices/)) to manage cloud access, as opposed to having multiple users defined within individual cloud accounts. \n\nManaging identities in a central location, as well as using SSO, are key elements of ensuring [IAM security](https://cyscale.com/use-cases/iam-security/) in the cloud. These are the risks of not using SSO in your company: \n\n1. **Password fatigue leading to security issues.** Having users input their passwords multiple times a day and for different applications can and probably will lead to them re-using the same password across multiple platforms or using very simple, easy to remember passwords. No-one wants to pull out the password manager 20 times a day. Password fatigue can lead to credentials leak and may put a company in danger.  \n2. **Long-term credentials accidentally disclosed or stolen.** Managing cloud access at individual account level implies creating long-term credentials such as passwords or access keys. Through SSO, temporary credentials are used and they expire after the user's session. This helps mitigate the risk of long-term credential exposure, because even if these temporary credentials were to be leaked, they would only be valid for a short period.\n3. **It’s overall a better user experience.**  \n\n### MFA (Multi-Factor Authentication) \n\nThis is considered essential. To clarify the point: your employees should not have any accounts without MFA. Whether they’re using a passwordless solution, or still using passwords, MFA should be enabled for everyone, but especially for high-privilege users.  \n\nWe can’t labor this point enough. There are so many breaches that could have been prevented with MFA! For example, [Deloitte suffered an incident in 2017](https://www.theguardian.com/business/2017/sep/25/deloitte-hit-by-cyber-attack-revealing-clients-secret-emails) where the company’s clients were affected just because an administrative account did not have MFA. Emails, IP addresses, usernames, passwords, and even health data were at risk. \n\nIn 2014, Home Depot had an estimated 56 million payment cards exposed after a third-party vendor’s stolen login details were used to breach the company. Again, MFA could have prevented such a breach. \n\nIf you’re already using SSO in your company, you should enforce an MFA policy at the identity provider level and better manage this setting for all your users. \n\nWe even demonstrated how MFA can prevent an attack from spreading in an Azure cloud environment, you can read that article [here](https://cyscale.com/blog/compromising-azure-cloud-as-guest/). \n\nBeware however that threat actors are innovating in this space too. A newish social engineering type approach known as an MFA Fatigue attack sees hackers relentlessly pushing MFA access requests to users’ endpoint devices and combining this with stolen logins to try and wear down a user to the point where they accidently allow access.  \n\n### Get full visibility of users and accounts \n\nYou can’t secure what you can’t see (or you don’t know about). So, it’s impossible to have a good security posture in the cloud without full visibility of all your assets, your people and their respective user accounts, role assignments, groups, and so on. \n\nThis is why a centralized solution for access review is the best approach to managing this challenge: having all permissions, roles, and user accounts visible via one single dashboard is very attractive for security professionals trying to manage access in the cloud. \n\nIn the image below we notice how one single person has permissions over Microsoft Azure, Google Cloud, AWS, GitHub, and other environments. Besides this, we see the effective permissions assigned to each cloud account or application, security information such as the password’s lifetime and whether MFA is activated; this information would normally be spread out across multiple consoles and hard to follow. \n\n<img src=\"/img/56_blog-edited-screenshot-1.png\" alt=\"The Cyscale IAM dashboard.\" title=\"The Cyscale IAM dashboard.\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nUsing this dashboard, you can review users’ access in a timely manner, without missing important information. You can go through users one by one and review the permissions they have, instead of circling through groups and permissions trying to figure out what users inherit based on their group assignment. \n\nAfter configuring your cloud environment and assigning roles and permissions, an IAM dashboard like the one in the image above can help you to identify any gaps left in your cloud user management and should be treated as best practice.  \n\n### Finding and resolving excessive permissions \n\nIdentifying users with excessive permissions can help prevent an attacker from escalating privileges in a cloud environment. You can use PIM (Privileged Identity Management) to assign high privileges for a limited amount of time to users and therefore limit the attack surface.  \n\nFollow the [Least Privilege Principle](https://cyscale.com/blog/check-for-least-privilege/) when configuring users’ roles and permissions to ensure that they do not have access to resources they don’t need to use. \n\nIn the previous section, we looked at an IAM dashboard and identified how many user accounts a single person has. On the right-hand side of the dashboard, we can see a “Highly privileged” tag next to the Azure account.  \n\n<img src=\"/img/56_blog-edited-screenshot-2.png\" alt=\"A “Highly privileged” tag next to the Azure account.\" title=\"A “Highly privileged” tag next to the Azure account.\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nThe user ‘John’ has a Contributor role over the second subscription in Azure, revealing a wide range of permissions. This user has full access to manage all resources, meaning he can modify and delete resources. Alarm bells should start ringing here because if this user were to be compromised, the entire Azure environment would be at risk.\n\n### Best practices for identity and access control  \n\nEffective IAM is crucial in today's cloud security landscape. From getting full visibility over assets, people, user accounts and permissions from the start, to good hygiene at every stage of the identity lifecycle, the guidance above will help you establish a strong strategy.  \n\nUse this checklist below to tick off the key elements that can, together with a centralized identity and access management approach, help improve your cloud security: \n\n* Deploy an effective onboarding and role management process \n* Review permissions frequently \n* Enforce a strong password policy \n* Adopt SSO \n* Enforce MFA \n* Achieve full visibility of assets, people and users \n* Apply the Least Privilege Principle \n* Deploy an effective offboarding process \n* Centralize IAM"}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["IAM","CSPM","Misconfigurations"],"title":"Inside the Mind of an Attacker: Compromising Azure Cloud as a Guest","seoTitle":"Inside the Mind of an Attacker: Compromising Azure Cloud as a Guest","description":"Identity and Access Management (IAM) is the first line of defense against attackers in the cloud. In the realm of cloud security, IAM represents all of the measures and good practices implemented to prevent intruders from accessing cloud resources. \n\nAn organization's cloud environment may be in danger if authentication and authorization are not handled correctly. \n\nIAM, coupled with contextual security, is the recipe for success. Understanding the level of access for each user – as well as how that access impacts other assets – is vital. It may not seem like much if a user has read permissions over a storage account, but if that storage account contains sensitive data, such as credentials for another account, then the magnitude of the impact will surpass your initial assessment. ","seoDescription":"Identity and Access Management (IAM) is the first line of defense against attackers in the cloud. In the realm of cloud security, IAM represents all of the measures and good practices implemented to prevent intruders from accessing cloud resources.   An organization's cloud environment may be in danger if authentication and authorization are not handled correctly.   IAM, coupled with contextual security, is the recipe for success. Understanding the level of access for each user – as well as how that access impacts other assets – is vital. It may not seem like much if a user has read permissions over a storage account, but if that storage account contains sensitive data, such as credentials for another account, then the magnitude of the impact will surpass your initial assessment. ","date":"2023-10-09T12:24:24.858Z","featuredpost":true,"permalink":"compromising-azure-cloud-as-guest","featuredimage":{"publicURL":"/static/871fa6f7f0a78f06eeddaabc1bc4a534/55_blog-cover.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/871fa6f7f0a78f06eeddaabc1bc4a534/d6cae/55_blog-cover.png","srcSet":"/static/871fa6f7f0a78f06eeddaabc1bc4a534/ac644/55_blog-cover.png 205w,\n/static/871fa6f7f0a78f06eeddaabc1bc4a534/89b47/55_blog-cover.png 410w,\n/static/871fa6f7f0a78f06eeddaabc1bc4a534/d6cae/55_blog-cover.png 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/871fa6f7f0a78f06eeddaabc1bc4a534/913d0/55_blog-cover.webp 205w,\n/static/871fa6f7f0a78f06eeddaabc1bc4a534/91660/55_blog-cover.webp 410w,\n/static/871fa6f7f0a78f06eeddaabc1bc4a534/888e2/55_blog-cover.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":460}}}},"rawMarkdownBody":"Identity and Access Management (IAM) is the first line of defense against attackers in the cloud. In the realm of cloud security, IAM represents all of the measures and good practices implemented to prevent intruders from accessing cloud resources. \n\nAn organization's cloud environment may be in danger if authentication and authorization are not handled correctly. \n\nIAM, coupled with contextual security, is the recipe for success. Understanding the level of access for each user – as well as how that access impacts other assets – is vital. It may not seem like much if a user has read permissions over a storage account, but if that storage account contains sensitive data, such as credentials for another account, then the magnitude of the impact will surpass your initial assessment. \n\nIn this article, I will show you how human mistakes can lead to a complex attack path, where a malicious user gains access to a storage account, compromises a user, and ultimately gains access to a key vault that contains cryptographic keys and secrets used by the company’s apps. \n\nI’ve chosen a scenario where gross mistakes are made to highlight that you should not underestimate human error and the blast radius it can have.  \n\n## Case Study\n\nFintech Inc. is a financial technology startup developing a new banking application. A few customers already use the new app to access their banking data in real-time and manage their accounts. Fintech Inc. uses Microsoft Azure to develop and host their app. \n\nThe company must invite an external consultant, Anita, to collaborate in the cloud. Any user is allowed by default to invite guests in Microsoft Entra ID (former Azure Active Directory), so John, a member of the IT department, invites Anita as a guest. \n\nHowever, he makes a mistake; because he’s trying to accomplish many things in a short period of time, instead of inviting anita@fintechinc.com, he invites anita@fintech.com. The new guest user accepts the invitation and becomes a guest in Microsoft Entra ID. \n\nAs a guest, the \"fake\" Anita cannot do much. She can only access some resources that guests can access, she can manage her profile and collaborate with other users in Office 365 apps.  \n\nBut, looking closely, she discovers that she is now part of the ITAdmins group. How did that happen?! On a closer look, ITAdmins has a dynamic membership rule that states that all users whose department is \"IT\" become part of the group. The IT department wanted to make things easy for them and allow all employees in IT to join this group automatically. \n\n<img src=\"/img/55_blog-dynamic-membership-rule.png\" alt=\"Dynamic membership rule for ITAdmins group\" title=\"Dynamic membership rule for ITAdmins group\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nHowever, this rule is very broad and opens up the possibility for mistakes. In this case, Anita was assigned the “IT” department, and she immediately joined the ITAdmins group, since Azure checks the attributes for a user whenever they are changed or a new user joins the cloud.  \n\nUpon further investigation, Anita discovers that the ITAdmins group has a very highly privileged role over the “rg-management\" resource group – the Contributor role. This role allows Anita to view, modify, and delete any resources within the resource group. Here comes the importance of the Least Privilege Principle – granting users too many permissions can do more harm than good. \n\n<img src=\"/img/55_blog-it-admins-contributor-rg-management.png\" alt=\"ITAdmins is Contributor over the rg-management resource group\" title=\"ITAdmins is Contributor over the rg-management resource group\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nIf we take a look at this resource group, we will see it contains an interesting storage account – “backups”, a database, and a VM. \n\nWe can see this relation in the graph below. Tracing the attack path, we immediately realize how Anita is able to access the cloud assets, from the rg-management resource group through the new role she gained by joining ITAdmins, and therefore compromise them. By looking at context in the cloud, we become aware of the risk imposed by the ITAdmins groups, which has broad permissions over a multitude of important resources. \n\n<img src=\"/img/55_blog-first-graph.png\" alt=\"Graph showing the attack path\" title=\"Graph showing the attack path\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nThe storage account has a \"backups\" container with a \"diskBackup.vhd\" file inside. This contains the files and data an ex-employee used before leaving the company. While in a rush, an IT admin has decided to back up the disk and look at it at some other time, later forgetting about it. \n\n<img src=\"/img/55_blog-backups-container.png\" alt=\"The contents of the 'backups' container\" title=\"The contents of the 'backups' container\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nUpon restoring this file as a computer disk, Anita discovers a set of credentials. She knows she should not log in using those credentials, but she does it anyway – after all, this is not the first questionable action she’s done -, because she is curious.  \n\nThe set of credentials – an email and a password – are for a test user that was created in the past to test features of the application, the removal of which was forgotten. The user cannot log in to the portal due to a Conditional Access policy that denies access to the Microsoft Azure Management resource (Portal included).  \n\n<img src=\"/img/55_blog-access-to-portal-denied.png\" alt=\"Portal access denied for user\" title=\"Portal access denied for user\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nFortunately, Anita can still log in using the credentials – through the CLI. This is a common \"bypass\" of this barrier, and, fortunately, she's good with command lines, so she can investigate what permissions her new user has. \n\nShe checks her new role assignments in the current subscription using the commandlet *Get-AzRoleAssignment* only to find, among other roles, that she’s a Key Vault Administrator. \n\n<img src=\"/img/55_blog-key-vault-administrator-role.png\" alt=\"The new user has the Key Vault Administrator role\" title=\"The new user has the Key Vault Administrator role\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nWith the Key Vault Administrator role, Anita can [perform all data plane operations](https://learn.microsoft.com/en-us/azure/key-vault/general/rbac-guide?tabs=azure-cli) on the Credentials2 key vault that we can see in the image above, and all objects in it. \n\nA key vault is a huge discovery for Anita, who can investigate further. Using the commandlet *Get-AzKeyVaultSecret*, Anita can see that there are a few keys and secrets in the key vault. She can now read them, delete them or add new versions of those secrets. \n\n<img src=\"/img/55_blog-contents-of-the-key-vault.png\" alt=\"The contents of the Credentials2 Key Vault\" title=\"The contents of the Credentials2 Key Vault\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\n<img src=\"/img/55_blog-second-graph.png\" alt=\"The attack path for the new user\" title=\"The attack path for the new user\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nAnita can now further discover other assets available on Fintech Inc.’s Azure cloud environment and possibly make use of the secrets stored in the “Credentials2” Key Vault. For example, we know that, as a best practice, [databases are encrypted](https://cyscale.com/blog/best-practices-for-securing-databases/), so a leaked decryption cryptographic key, for example, can lead to total compromise of the company’s data. \n\nTo understand everything that happened here, we need to look at all the bad practices and vulnerabilities that we have uncovered, in chronological order: \n\n1. Due to being in a rush, an employee invited the wrong person to collaborate in Azure, and no one picked up on it. \n2. The dynamic membership rule for the ITAdmins group is very broad and may accept unintended cases. \n3. The ITAdmins group has a highly privileged role over a resource group with many resources that may contain sensitive information, such as databases, and storage accounts. \n4. A disk backup that can be restored is held unencrypted in a storage account, containing a cleartext password for an active Azure account. \n5. A test user that was intended to be temporary is still active. \n6. A test user has access to a very high-value resource. \n\nAs you can see, each mistake allowed the intruder to advance more and more and compromise additional resources. \n\nThis is why contextual security and proper IAM security are necessary. Contextual security allows cloud professionals to understand what assets are impacted by others, while IAM best practices protect the cloud environment from intruders and represent the first barrier of entry.\n"}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["CSPM","IAM","Misconfigurations"],"title":"Inside the Mind of an Attacker: How Contextual Security Can Save Your Cloud","seoTitle":"Inside the Mind of an Attacker: How Contextual Security Can Save Your Cloud","description":"The future of cloud security is contextual security. To fully understand how secure an asset is, you need to understand what users have permissions to interact with it and what resources it communicates with. It might seem that a VM is completely secure because you put it behind a firewall, but if a compromised user can access it, it’s game over. \n\nThe perfect recipe for contextual security is a Cloud Security Knowledge Graph. Based on it, we can represent in a visual and interactive way how cloud resources interact, what kind of relations they have, what users have permissions to read/write on them, and so on.  \n\nTo illustrate my point, I will show you some scenarios where the difference between a secure cloud and a breach is made by fixing misconfigurations and limiting users' access. These measures are easier to identify using a graph, because it helps you understand the risks your environment is exposed to.  ","seoDescription":"The future of cloud security is contextual security. To fully understand how secure an asset is, you need to understand what users have permissions to interact with it and what resources it communicates with. It might seem that a VM is completely secure because you put it behind a firewall, but if a compromised user can access it, it’s game over.   The perfect recipe for contextual security is a Cloud Security Knowledge Graph. Based on it, we can represent in a visual and interactive way how cloud resources interact, what kind of relations they have, what users have permissions to read/write on them, and so on.    To illustrate my point, I will show you some scenarios where the difference between a secure cloud and a breach is made by fixing misconfigurations and limiting users' access. These measures are easier to identify using a graph, because it helps you understand the risks your environment is exposed to.  ","date":"2023-09-19T09:01:02.199Z","featuredpost":true,"permalink":"contextual-security-google-cloud","featuredimage":{"publicURL":"/static/7fbef8aa4e6e383ec434207181f0d892/blog_54-cover.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/7fbef8aa4e6e383ec434207181f0d892/2c0f5/blog_54-cover.jpg","srcSet":"/static/7fbef8aa4e6e383ec434207181f0d892/41be8/blog_54-cover.jpg 205w,\n/static/7fbef8aa4e6e383ec434207181f0d892/c78f7/blog_54-cover.jpg 410w,\n/static/7fbef8aa4e6e383ec434207181f0d892/2c0f5/blog_54-cover.jpg 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[{"srcSet":"/static/7fbef8aa4e6e383ec434207181f0d892/913d0/blog_54-cover.webp 205w,\n/static/7fbef8aa4e6e383ec434207181f0d892/91660/blog_54-cover.webp 410w,\n/static/7fbef8aa4e6e383ec434207181f0d892/888e2/blog_54-cover.webp 820w","type":"image/webp","sizes":"(min-width: 820px) 820px, 100vw"}]},"width":820,"height":460}}}},"rawMarkdownBody":"When public cloud providers such as Google Cloud and AWS first appeared, their benefits were hard to ignore. And although companies were reluctant to put their infrastructure and applications in the hands of a different company, cloud solutions have grown in popularity.  \n\nWith more and more complex setups, it is hard for an organization to understand and keep track of the implication of every resource they have in the cloud, the risk it poses to the entire infrastructure or how many other assets it impacts. \n\nI believe the future of cloud security is contextual security. To fully understand how secure an asset is, you need to understand what users have permissions to interact with it and what resources it communicates with. It might seem that a VM is completely secure because you put it behind a firewall, but if a compromised user can access it, it’s game over. \n\nThe perfect recipe for contextual security is a [Cloud Security Knowledge Graph](https://cyscale.com/blog/security-knowledge-graph-integrations/). Based on it, we can represent in a visual and interactive way how cloud resources interact, what kind of relations they have, what users have permissions to read/write on them, and so on.  \n\nTo illustrate my point, I will show you some scenarios where the difference between a secure cloud and a breach is made by fixing misconfigurations and limiting users' access. These measures are easier to identify using a graph, because it helps you understand the risks your environment is exposed to.  \n\n## Case Study \n\nLet’s assume we use BigQuery in Google Cloud for a health analytics application. We have a table that contains some datasets of patients from a hospital, including PII data. These datasets are very valuable and cannot fall in the hands of outsiders. \n\nNow, we want to make sure that the data is securely stored. We look at the BigQuery table’s graph to see if the table poses any risk and, low and behold, it does! \n\n<img src=\"/img/blog_54-graf0.png\" alt=\"Contextual security through the graph\" title=\"Contextual security through the graph\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nWe can observe, in the image above, that no less than 7 Cloud Functions and 4 VMs can access it across 9 Service Accounts that have permissions on the BigQueryTable, as well as 7 IAM Users. Does this alarm you? It should. \n\nBut just because a VM, or a function, can have access to the table does not mean anything, right? Wrong! I’m going to show you exactly how bad things can get in this situation. I’m going to put my hacker shoes on and show you potential scenarios that might lead to data being stolen. \n\n### Scenario 1: compromised VM \n\nOut of the 4 VMs that we see in the image, one is an Internet-facing one. The compute instance “dev-1” hosts an application that has the Log4J vulnerability, a classic. A hacker leverages the vulnerability and gains access to the instance. If they take over an IAMUser with the Compute Instance Admin role, or obtain SSH access to the VM, the disaster begins. **Because a Service Account is associated to the VM, the attacker has that account’s permissions.** In our scenario, the application running on the Instance needs to process data in the dataset, so the associated Service Account was given the roles/bigquery.dataEditor permission. \n\nMoreover, in a VM, credentials used to manually authenticate are stored on the Compute Instance after the first time a user authenticates as a Service Account, in */.config/gcloud/credentials.db*, as you can see in the image below. \n\n<img src=\"/img/blog_54-ss1.png\" alt=\"Credentials stored in Google Cloud VM\" title=\"Credentials stored in Google Cloud VM\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nThis is a standard location and it stores the last private key that was used to authenticate as a Service Account.  You can also find access tokens in the same folder, in *access_tokens.db*. Moreover, you can see any other private keys used previously (which may still be valid, if they were not deleted in the Google Cloud Console) in */.config/gcloud/legacy_credentials/<serviceAccountEmail>/adc.json*. \n\nLooking at the file credentials.db, we notice that the information is not stored in the standard format for a private key for a Service Account. With a few adjustments, we obtain a valid private key that we then use to authenticate. To authenticate as a Service Account with a private key, simply use the following command:  \n\n```\ngcloud auth activate-service-account <serviceAccountEmail> --key-file=<keyFile>\n```\n\n<img src=\"/img/blog_54-ss2.png\" alt=\"Authenticating using the secret key\" title=\"Authenticating using the secret key\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nHowever, what happens when no one has authenticated as a Service Account on the VM? There is no *credentials.db* file (actually, there is no *.config* folder).  \n\nDevelopers tend to find ways to do things faster, and they get comfortable. It is not uncommon to find secrets in environment variables or plain-text files. If a developer were to store a secret key file on the Compute Instance, we could abuse it. Simply log in using the private RSA key file: \n\n<img src=\"/img/blog_54-ss3.png\" alt=\"Private key on the VM\" title=\"Private key on the VM\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\n<img src=\"/img/blog_54-ss4.png\" alt=\"Authenticating as Service Account\" title=\"Authenticating as Service Account\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nChecking the current permissions, and… bingo! roles/bigquery.dataEditor is one of the available roles. \n\n<img src=\"/img/blog_54-ss5.png\" alt=\"Service Account with roles/bigquery.dataEditor\" title=\"Service Account with roles/bigquery.dataEditor\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nIf we expand the graph’s nodes that we used in this chain of attacks, you can clearly see the attack path: \n\n<img src=\"/img/blog_54-primul-graf.png\" alt=\"Attack path through the VM\" title=\"Attack path through the VM\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nWith the bigquery.dataEditor role, the attacker can now: \n\n* view data and metadata, \n* modify data and metadata, \n* delete tables. \n\n This breach could be avoided by: \n\n* ensuring the VM does not have vulnerabilities, and patching the Log4J one, \n* isolating the Compute Instance from the Internet by closing the exposed port, if possible, \n* restricting the Service Account’s permissions as much as possible,\n* making sure secrets are cleared from the VM files.   \n\n<img src=\"/img/blog_54-ss6.png\" alt=\"Access to the BigQueryTable datasets\" title=\"Access to the BigQueryTable datasets\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\n### Scenario 2: compromised user \n\nExpanding the Users node, we see that there are three users that have access to the BigQueryTable.  \n\n<img src=\"/img/blog_54-ultimul-graf.png\" alt=\"Attack path through user compromise\" title=\"Attack path through user compromise\" class=\" blog-image-shadow \" style=\"width:auto;height:auto;\"/>\n\nIf a hacker were to take over any of those accounts, for example, by stealing credentials, our customer’s data would be at risk. If one of the three users that have access to the table does not have MFA enforced, then the attacker can compromise the account.  \n\nEnabling MFA would prevent this. \n\nBesides this, a common mistake is focusing on protecting your environment from the outside, and forgetting about your own users. If one of the employees in the organization has too many permissions, they may produce damage without intention. By exploring the account and looking at resources, a user can accidentally modify or delete an asset. \n\nThis is why the Least Privilege Principle is so important – always limit the users’ access as much as possible and only assign the necessary permissions. \n\nWe believe that context is the future of cloud security. We’ve seen how the most simple relations between assets can be leveraged by attackers to take over cloud assets; and if your customers’ data is stored in those assets, the greater the prize is for hackers – and they will do anything to get it."}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["IAM"],"title":"Okta Security Best Practices ","seoTitle":"Okta Security Best Practices ","description":"Okta is an identity and access management (IAM) service built for the cloud. Best practices for cloud access recommended by Okta are: multi-factor authentication (MFA), using passwordless authentication, complying to the least privilege principle, ensuring the separation of duties, monitoring and logging the activity in the company and automating onboarding and offboarding of employees. Cyscale ensures your company does not drift away from some of these best practices.","seoDescription":"Okta is an identity and access management (IAM) service built for the cloud that connects persons with applications through SSO, AD, LDAP MFA, B2B Integration, Mobile Identity Management, User Management etc. Best practices for cloud access recommended by Okta are: multi-factor authentication (MFA), using passwordless authentication, complying to the least privilege principle, ensuring the separation of duties, monitoring and logging the activity in the company and automating onboarding and offboarding of employees. Cyscale ensures your company does not drift away from some of these best practices.","date":"2022-05-19T07:40:18.390Z","featuredpost":true,"permalink":"iam-okta-security-best-practices","featuredimage":{"publicURL":"/static/92efc187d453834e74edca1259bb1e9c/okta-security-best-practices.webp","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/92efc187d453834e74edca1259bb1e9c/888e2/okta-security-best-practices.webp","srcSet":"/static/92efc187d453834e74edca1259bb1e9c/913d0/okta-security-best-practices.webp 205w,\n/static/92efc187d453834e74edca1259bb1e9c/91660/okta-security-best-practices.webp 410w,\n/static/92efc187d453834e74edca1259bb1e9c/888e2/okta-security-best-practices.webp 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[]},"width":820,"height":460}}}},"rawMarkdownBody":"<!--StartFragment-->\n\nWhat is Okta? \n\nOkta is an [identity and access management (IAM)](https://cyscale.com/blog/iam-best-practices-from-aws-azure-gcp/) service built for the cloud. \n\nIt connects any person with any application securely through its features, such as: \n\n* Single Sign-On (SSO), \n* Active Directory (AD) and LDAP Integration, \n* Multi-Factor Authentication (MFA), \n* User Management, \n* B2B Integration for 3rd party access, \n* Mobile Identity Management, and others. \n\n### Okta Security Best Practices for Cloud Access \n\nOkta can be configured as an external identity provider to enable SSO in the cloud. \n\nLet's look at the best practices recommended by Okta and how you can make sure you're implementing them correctly to secure your cloud environment and keep your solutions protected.\n\n<br/>\n\n#### 1. Use multi-factor authentication (MFA) \n\n### Scenario \n\nAn employee uses a weak password for their accounts. The password was cracked through a brute-force attack by an attacker. \n\nThe employee re-uses their password for Okta SSO, and MFA is not implemented in the company, so the attacker now has full access to all of the employee's accounts. \n\n### Best practice \n\n[MFA](https://cyscale.com/blog/iam-best-practices-from-aws-azure-gcp/#MFA) is a type of authentication that requires an entity to provide at least two different types of credentials. \n\nThey should be of the following:  \n\n* What you know (example: a PIN)  \n* What you have (example: a security token)  \n* What you are (example: a fingerprint)  \n\nOkta recommends you use a one-time password or a biometric verification in your authentication scheme in order to add an extra layer of security. \n\n<br/>\n\n#### 2. Stop using passwords \n\n### Scenario \n\nAn employee writes their password on a post-it note and leaves it on their desk. \n\nAn employee from another department finds it and can now login into the employee's account. \n\n### Best practice \n\nPasswordless authentication is possible by providing a public identifier (such as a username or an email address) and then using a different way of proving your identity (through a phone or a token, for example), thus eliminating the use of passwords. \n\nThis type of authentication is secure because: \n\n* Weak passwords are no longer a concern for your company \n* Solutions for password storage are not an issue anymore \n* The credentials cannot be breached; therefore, you're reducing the number of points of failure \n\nOkta suggests solutions that can help you go passwordless. You can use: \n\n* Okta Fastpass, which allows you to authenticate passwordless from any device or location to any Okta-managed application; \n* WebAuthn, a standard that simplifies authentication. \n\n<br/>\n\n#### 3. Manage user access by following the Least Privilege Principle \n\n### Scenario \n\nAlthough they do not require such privileges, an employee was assigned administrative rights. \n\nThe employee accidentally deletes an asset—this action results in permanent data loss. \n\n### Best practice \n\nThe Least Privilege Principle states that users should not have more permissions than they require to perform their tasks. \n\nUser access control management is a security best practice recommended by [Okta](https://www.okta.com/) that helps minimize the risk of data breaches or accidental misconfigurations. \n\nFor example, a regular user should not have administrator rights unless they need them for daily tasks. \n\nMake sure to restrict users as much as possible in accordance with their jobs. \n\n<br/>\n\n#### 4. Ensure the Separation of Duties \n\n### Scenario \n\nThe administrator goes on vacation. They are the only ones with administrator privileges.  \n\nA critical vulnerability appears in the cloud infrastructure, but nobody has the necessary rights to patch it. The administrator cannot be contacted and is out of the office for a few weeks. \n\n### Best practice \n\nThe Separation of Duties Principle helps eliminate a single point of failure by assuring no entity has the rights to execute a critical task by themselves. \n\nConfiguring at least two administrators eliminates the single point of failure. It ensures that if one of them is missing, the other can still perform tasks requiring administrative privileges. \n\n<br/>\n\n#### 5. Monitor activity \n\n### Scenario \n\nAn attacker manages to gain control of an employee's account and authenticates from a different device or an unusual location. \n\nThis authentication is logged, but the logs are not carefully monitored, so the breach goes undetected. \n\nThe hacker can now move laterally and compromise workstations, databases, and other accounts without raising any alarms in the company. \n\n### Best practice \n\nLogging and monitoring are two features that should be implemented in your cloud environment. \n\nThese technologies can help you identify suspicious behavior, such as: \n\n* **an impossible log-in**, for example when a user authenticates from two different parts of the world in a few minutes, \n* **a user connecting to an application from a different device than expected**, and others. \n\nOkta recommends that you constantly look for odd activity in your cloud infrastructure and make sure you take actions when you identify them, such as verifying a user's identity through MFA. \n\n<br/>\n\n#### 6. Automate onboarding and offboarding \n\n### Scenario \n\nA software developer leaves the company, but their account is not correctly deprovisioned.  \n\nThey can still contribute to GitHub repositories and modify production code. \n\n### Best practice \n\nThe process of onboarding or offboarding an employee can be tedious. \n\nThere should be a well-defined set of steps when an employee leaves the company. Automate as many of them as possible, to make sure that: \n\n* You correctly deprovision their account, and \n* They cannot access and make changes to your systems anymore. \n\nAlong with these Okta-centric recommendations, it's essential to ensure that your organization adheres to broader **[cloud security best practices](https://cyscale.com/blog/cloud-data-security-guide/)**. Diversifying your security strategies and keeping abreast of best practices in the wider cloud ecosystem provides a layered defense against potential threats.\n\n<br/>\n\nAre you following these best practices in your company? \n\nWith [Cyscale - Cloud Security Platform](https://cyscale.com/), you can detect drifts from some of these best practices recommended by Okta. \n\nCyscale checks if access to your cloud environment is correctly configured and is implementing the following: \n\n* Multi-Factor Authentication (MFA), \n* Logging and monitoring, \n* Access control, \n* Strong credential policies and many more. \n\nFurthermore, you can [onboard your Okta account into Cyscale](https://cyscale.com/use-cases/okta-cyscale-integration/) and get full visibility over identities in your organization and cloud permissions, along with a contextual analysis of access, cloud assets and sensitive data to reveal toxic combinations that put your organization at risk. \n\n<!--EndFragment-->"}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["IAM"],"title":"IAM Best Practices for AWS, Google Cloud and Azure","seoTitle":"IAM Best Practices for AWS, Google Cloud and Azure","description":"We look at best practices recommended by AWS, Azure and Google Cloud regarding securing IAM, like enabling MFA, rotating credentials and keys regularly, complying to the least privilege principle, implementing logging and monitoring, assigning permissions at group level. Examples of controls from the Cyscale application are shown.","seoDescription":"We look at best practices recommended by AWS, Azure and Google Cloud regarding securing IAM, like enabling MFA, rotating credentials and keys regularly, complying to the least privilege principle, implementing logging and monitoring, assigning permissions at group level. Examples of controls from the Cyscale application are shown.","date":"2022-05-11T06:39:36.105Z","featuredpost":true,"permalink":"iam-best-practices-from-aws-azure-gcp","featuredimage":{"publicURL":"/static/2ac40e1f538ac411f31af89f7bb00616/securing-iam.webp","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/2ac40e1f538ac411f31af89f7bb00616/888e2/securing-iam.webp","srcSet":"/static/2ac40e1f538ac411f31af89f7bb00616/913d0/securing-iam.webp 205w,\n/static/2ac40e1f538ac411f31af89f7bb00616/91660/securing-iam.webp 410w,\n/static/2ac40e1f538ac411f31af89f7bb00616/888e2/securing-iam.webp 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[]},"width":820,"height":460}}}},"rawMarkdownBody":"<!--StartFragment-->\n\nAfter we've described the [IAM implementations for AWS, Google Cloud, and Azure](https://cyscale.com/blog/iam-services-in-aws-azure-gcp/), let's look at some of the security best practices they recommend and how to check if your cloud environment is implementing them. \n\nWith Cyscale, you can efficiently scan your cloud infrastructure and verify whether it follows the [IAM best practices](https://cyscale.com/blog/iam-best-practices-identity/) that we're going to describe in this article. \n\n<div id=\"MFA\">\n\n### Enable Multi-Factor Authentication (MFA) \n\nMulti-Factor Authentication is a form of authenticating where the user needs to provide at least two different credentials of different types.  \n\nThey should be of the following: \n\n* What you know (example: a password) \n* What you have (example: a smart card) \n* What you are (example: a fingerprint) \n\nA prevalent scenario of MFA is using a password and a code received on your phone to log in. This example combines \"What you know\" with \"What you have\".  \n\nHere are some of the controls implemented in Cyscale that check if MFA is configured for your cloud environment: \n\n* *Ensure multi-factor authentication (MFA) is enabled for all IAM users that have a console password* for AWS \n* *Ensure that multi-factor authentication is enabled for all privileged users* for Microsoft Azure \n* *Ensure that multi-factor authentication is enabled for all non-privileged users* for Microsoft Azure \n\nSSO (Single Sign-On) should also be integrated in the authentication scheme to grant access to individual users across multiple environments using just one set of credentials. \n\n</div>\n\n### Rotate credentials and keys regularly \n\nThis best practice is recommended across all vendors and should be implemented in your cloud infrastructure.  \n\nThis method helps minimize the impact if a key or a set of credentials is breached. \n\nIn the case of user credentials, passwords should be changed with new, different ones. \n\nWhen rotating keys, the old ones should be retired, and new keys should be generated. \n\nWe suggest that you rotate your keys and credentials at least every 90 days. \n\nSome examples of validation controls offered by Cyscale that check if credentials or keys are rotated regularly are: \n\n* *Ensure access keys are rotated every 90 days or less* for AWS (Amazon Web Services) \n* *Ensure API keys are rotated every 90 days* for Google Cloud\n* *Ensure IAM password policy expires passwords within 90 days or less* for AWS \n\nMoreover, a strong password policy should be implemented to prevent individuals from using weak passwords. \n\n### Comply with The Principle of Least Privilege \n\nConforming to The Principle of Lease Privilege is another essential best practice instilled in cloud security and recommended by the vendors we've discussed.  \n\nIn order to comply with this concept, you need to restrict user access to the least privileged access and eliminate all administrator and root user accounts that are not strictly necessary.  \n\nAWS recommends that you start setting up your policies with a minimum of possible permissions and add more on the go, if necessary, to correctly manage access control.  \n\nMake sure you're not missing anything when implementing the concept of least privilege by using controls offered by Cyscale that detect misconfigurations, like the ones below: \n\n* *Ensure that ServiceAccount has no Admin privileges* for Google Cloud\n* *Eliminate use of the \"root\" user for administrative and daily tasks* for AWS \n\n### Assign permissions at group level  \n\nAnother best practice we recommend to ensure IAM Cloud Security is managing specific permissions at group level and not at the user level. \n\nWhenever you're adding a new user or trying to manage multiple users, assign them to a group with very well-defined rules and privileges. \n\nHere are some controls from Cyscale that check if you're implementing this IAM security best practice: \n\n* *Ensure IAM Users receive permissions only through Groups* for AWS Cloud \n* *Ensure IAM Policies are attached only to groups or roles* for AWS Cloud \n\n### Implement logging and monitoring \n\nAWS, Google Cloud, and Azure recommend that you implement logging and monitoring for your cloud environment. All three vendors provide these features.  \n\nFor AWS IAM, you can use one of the following IAM services: \n\n* AWS CloudTrail \n* Amazon CloudFront \n* Amazon CloudWatch \n* AWS Config \n* Amazon S3 \n\nGoogle Cloud supplies Cloud Audit Logs, a service that audits your IAM policy, access to cloud service account keys, and other components of Google Cloud. \n\nFor Azure, you can use Azure AD activity logs which can be supplemented by Azure Monitor logs to alert you on significant events. \n\nExamples of controls across all three cloud providers can be seen below: \n\n* *Ensure CloudTrail trails are integrated with CloudWatch Logs* for AWS \n* *Ensure that Diagnostic Logs are enabled for all services which support it* for Microsoft Azure \n* *Ensure that Cloud Audit Logging is configured properly across all services and all users from a project* for Google Cloud\n\nIdentity and Access Management is a crucial component of the cloud and should be adequately secured to prevent data breaches and other cybersecurity incidents. Reduce the attack surface by eliminating any vulnerabilities in the authentication process and keeping hackers away.\n\nUse Cyscale to identify any [misconfigurations](https://cyscale.com/blog/common-cloud-misconfigurations-how-to-avoid-them/) or gaps in your cloud infrastructure and secure it with our over 400 controls. \n\nIn the following article, we will look at [IAM best practices](https://cyscale.com/blog/iam-best-practices-identity/) described by these vendors and how to check if your cloud infrastructure is implementing them correctly.\n\n<!--EndFragment-->"}},{"node":{"frontmatter":{"authors":"Sabrina Lupșan","categories":["IAM"],"title":"IAM Services in AWS, Azure, and Google Cloud - A Cloud Industry Overview","seoTitle":"IAM Services in AWS, Azure, and Google Cloud - a Cloud Industry Overview","description":"An industry overview of the IAM Services. We look at AWS, Azure and Google Cloud and understand what identity and management is. The components of IAM are described for all three vendors.","seoDescription":"An industry overview of the IAM Services. We look at AWS, Azure and Google Cloud and understand what identity and management is. The components of IAM are described for all three vendors. Authentication methods are described, such as Single Sign-On (SSO) and Multi-Factor Authentication (MFA).","date":"2022-05-06T05:44:34.049Z","featuredpost":true,"permalink":"iam-services-in-aws-azure-gcp","featuredimage":{"publicURL":"/static/efb95d84a5f1a4760ffb7bb47eeaadba/iam-services-in-aws-azure-and-gcp-a-cloud-industry-overview.webp","childImageSharp":{"gatsbyImageData":{"layout":"constrained","images":{"fallback":{"src":"/static/efb95d84a5f1a4760ffb7bb47eeaadba/888e2/iam-services-in-aws-azure-and-gcp-a-cloud-industry-overview.webp","srcSet":"/static/efb95d84a5f1a4760ffb7bb47eeaadba/913d0/iam-services-in-aws-azure-and-gcp-a-cloud-industry-overview.webp 205w,\n/static/efb95d84a5f1a4760ffb7bb47eeaadba/91660/iam-services-in-aws-azure-and-gcp-a-cloud-industry-overview.webp 410w,\n/static/efb95d84a5f1a4760ffb7bb47eeaadba/888e2/iam-services-in-aws-azure-and-gcp-a-cloud-industry-overview.webp 820w","sizes":"(min-width: 820px) 820px, 100vw"},"sources":[]},"width":820,"height":460}}}},"rawMarkdownBody":"<!--StartFragment-->  \n\nIdentity and Access Management (IAM) refers to all the good practices and rules that must be followed when establishing authentication and authorization for a user to an organization’s systems and applications. \n\nIn the past, different measures were implemented to assure security in an organization by only allowing users to access company resources through company devices on premises. \n\nHowever, as companies adopt the remote working model, this is no longer an option. For the cloud, IAM is the solution to ensure security. \n\nUsers can nowadays [connect to the cloud from all around the world](https://cyscale.com/use-cases/remote-work-security/) with their personal devices. \n\nMoreover, access is not restricted to human users; applications and other types of identities also require access to different types of resources. \n\nTherefore, strong IAM policies need to be implemented. \n\nLet’s first clarify some important concepts. Then, we will look into IAM policies and what different cloud vendors offer for their IAM infrastructure.\n\n### Identity \n\nIdentity refers to who can authenticate (sign in) into a cloud account.  \n\nIn order to allow someone to access cloud resources, you need to ensure that the user trying to authenticate is who they claim to be. \n\nAuthentication should be implemented using technologies like Single Sign-On (SSO) and Multi-Factor Authentication (MFA) to increase security.  \n\nAfter a user authenticates, access management is needed.  \n\nJust because a user successfully authenticated doesn’t mean that they should have full access to all the available resources. \n\n### Access management \n\nTo regulate access inside the cloud environment, strong access control policies need to be implemented. \n\nHaving groups with well-defined rules and privileges at different granularity levels is an excellent solution to manage access to cloud resources. \n\nIn this way, you do not have to assign permissions to each new user but rather add them to the appropriate group that already has the correct permissions. \n\nAccess management also refers to keeping track of users’ actions. Therefore, logging and monitoring are essential parts of IAM and should be implemented. \n\nNow that we’ve understood the purpose of IAM, let’s look at three big vendors in the cloud industry and their approach to access management: AWS Cloud, Google Cloud Platform, and Microsoft Azure. \n\n### IAM implementations - An industry overview \n\n### Amazon Web Services (AWS) \n\nFor access management, the IAM service provided by AWS has three types of assets: user, role and policy.  \n\nAlong with the creation of an account, an AWS account root user is created. \n\nWhen looking at [AWS Cloud](https://cyscale.com/use-cases/aws-cloud-security/), we can identify 6 concepts in IAM: \n\n1. **Principal**, which represents the entity (user or application) that is trying to authenticate using an AWS account root user, an IAM user, or an IAM role. \n2. **Request**, which is made by a principal to AWS and holds information about the operation they want to perform. \n3. **Authentication**, which refers to the credentials you need, such as an access key or a username and password. \n4. **Authorization**, which refers to the permissions and policies that define what a principal can do in an account. \n5. **Actions and operations**, which must be included in policies in order to allow a principal to execute them. \n6. **Resources**, which define the objects that exist within a service and to which the principal requires access; they can be, for example, Amazon S3 buckets, IAM users, and Amazon EC2 instances. \n\n Policies define permissions and can be attached to: \n\n* users.\n* groups of users, \n* roles,\n* resources. \n\nThere are multiple types of policies that can be applied in AWS. A user can create their own custom policies or can use the ones offered by AWS.  \n\nYou can see below the different types of AWS policies, ordered from the most frequently used to the least: \n\n1. Identity-based (attached to IAM identities) \n2. Resource-based (attached to resources) \n3. Permissions boundaries (they define the highest level of permissions an identity-based policy can apply) \n4. Organization Service Control Policies (used to define the highest level of permissions an identity-based or resource-based policy can apply for account members of an organization) \n5. Access Control Lists or ACLs (are similar to resource-based policies and define which principals can access a resource) \n6. Session policies (they limit the permissions granted by identity-based policies in an AWS CLI or API session)\n\n### Google Cloud Platform\n\nIn Google Cloud, permissions to access resources are organized into roles. To understand how IAM works in Google, we must look at the 3 IAM asset types: \n\n* **Roles**, which represent a collection of permissions \n* **Principals**, who are assigned to roles and can be: \n\n  * a Google Account, \n  * a Service Account, \n  * a Google group, \n  * a Google Workspace account, \n  * a Cloud Identity domain, \n  * all authenticated users, \n  * all users.\n* **Policies**, which define associations of principals and roles  \n* **Resources**, which are physical assets, such as computers and hard disk drives, and virtual assets, for example virtual machines. \n\nIn Google Cloud, permissions cannot be applied to principals directly. Instead, principals must be assigned to roles and thus receive all the permissions allowed for that role. \n\nBelow, you can see a diagram of the IAM components found in Google Cloud. \n\n![Google Cloud IAM Components](/img/gcp-iam.webp#shadow \"Google Cloud IAM Components\")\n\nImage source – [Google Cloud Platform](https://cloud.google.com/iam/docs/overview) \n\n### Microsoft Azure \n\n[Azure Active Directory](https://cyscale.com/use-cases/azure-cloud-security/) (Azure AD) is an IAM service provided by Microsoft for the cloud. Azure AD is the identity system used to connect to Microsoft 365, the Azure portal, and other SaaS applications. \n\nLet’s look at components of Azure AD: \n\n**1. Identity** \n\nAn identity is an entity that can be authenticated.  \n\nIdentities can be of the following types: \n\n* Users,\n* Groups,  \n* Applications. \n\n**2. Role** \n\nA role is a collection of permissions. \n\nAccess to Azure resources is managed by **RBAC (Role-based Access Control)**. \n\nAzure RBAC provides high granularity with four built-in roles: \n\n1. Owner (can perform all actions on all resource types) \n2. Contributor (can perform any action an owner can except managing RBAC) \n3. Reader (can perform all read actions on all resource types) \n4. User Access Administrator (can manage user access to Azure resources) \n\nOther roles are also provided for granular management of access. Moreover, custom roles can be created to cater to every organization’s needs. \n\n**3. Scope** \n\nScopes are sets of resources that define what an identity can access.  \n\nThey are important because, when you assign a role, it is crucial to only grant a principal the access they need. \n\nScopes can be: \n\n* subscriptions, \n* resource groups, \n* resources. \n\n**4. Resource** \n\nResources are manageable items available through Azure, such as virtual machines, databases, web applications and others. \n\nAccess to resources is granted by assigning: \n\n* a user, \n* a group, or \n* a Service Principal (process or application) \n\nto a specific role and a specific scope. \n\nCyscale integrates with AWS, Azure, Google Cloud and other vendors to check for vulnerabilities and [improve its customers‘ cloud security posture](https://cyscale.com/blog/improve-cloud-security-posture/). \n\nIn the following article, we will look at [IAM best practices](https://cyscale.com/blog/iam-best-practices-identity/) described by these vendors and how to check if your cloud infrastructure is implementing them correctly. \n\n<!--EndFragment-->"}}]}},"pageContext":{"limit":9,"skip":0,"numPages":1,"currentPage":1,"category":"IAM","seoTitle":"IAM Expert Insights, Best Practices & Tips | Cyscale Blog","seoDescription":"Unlock the potential of IAM. Explore the latest in identity and access management, including trends, best practices, and expert insights for secure cloud access.","heading":"IAM Expert Insights, Best Practices & Tips","categoriesList":["Compliance","Engineering","Cloud Native Security","News","Cloud Security","IAM","CNAPP","Product","CSPM","Misconfigurations","Encryption"],"categorySlug":"iam"}},"staticQueryHashes":["1117504136","2024892666","220583031","273821743","3722074465","4068795820","4109069157","81406208","981947644"],"slicesMap":{}}