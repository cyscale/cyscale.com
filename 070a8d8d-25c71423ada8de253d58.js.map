{"version":3,"file":"070a8d8d-25c71423ada8de253d58.js","mappings":"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","sources":["webpack://cyscale-gatsby/./src/components/layout/NewNavigation.js"],"sourcesContent":["import React, { useState } from 'react';\nimport tw, { css } from 'twin.macro';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport logo from '../../assets/images/logo.svg';\nimport loginIcon from '../../assets/images/login.svg';\nimport searchIcon from '../../assets/images/search-icon.svg';\n\nimport styled from '@emotion/styled';\nimport Platform from './components/Platform/Platform';\nimport Solutions from './components/Solutions/Solutions';\nimport Resources from './components/Resources/Resources';\nimport Company from './components/Company/Company';\nimport { logoStyle } from './style';\nimport useScrollTrigger from '../scrollTrigger';\nimport { isAnimatedNavbarPage, isPlaygroundBlogPage } from '../../common/utils';\n\nconst MegaMenu = styled.div`\n    left: ${({ animatedNavbarPages, left }) => (animatedNavbarPages ? left : '')};\n    right: 0;\n    position: absolute;\n    text-align: left;\n    z-index: -99;\n    -ms-transform: translateY(-1.25rem);\n    transform: translateY(-1.25rem);\n    opacity: 0;\n    visibility: hidden;\n`;\n\nconst NavItem = styled.li`\n    position: static;\n    pointer-events: ${({ disabled }) => (disabled ? 'none' : 'all')};\n    &:hover ${MegaMenu} {\n        z-index: ${({ searchBar }) => (searchBar ? 0 : 99)};\n        visibility: ${({ searchBar }) => (searchBar ? 'hidden' : 'visible')};\n        opacity: ${({ searchBar }) => (searchBar ? 0 : 1)};\n        transform: ${({ searchBar }) => (searchBar ? 'translateY(-1.25rem)' : 'translateY(0)')};\n        -ms-transform: ${({ searchBar }) => (searchBar ? 'translateY(-1.25rem)' : 'translateY(0)')};\n        -ms-transition: all 0.5s;\n        transition: all 0.5s;\n    }\n`;\n\nconst hiddenMegaMenuOnScroll = css`\n    display: none;\n`;\n\nconst NavItemButton = styled.button`\n    ${tw`relative block m-8 text-base hover:no-underline leading-normal`}\n    font-weight: 500;\n    box-sizing: border-box;\n    outline: none;\n\n    &:before {\n        content: attr(data-text);\n        font-weight: 600;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: -1;\n        color: transparent;\n        visibility: hidden;\n    }\n\n    &:hover,\n    &.active {\n        color: transparent;\n        background: none;\n\n        &:before {\n            color: #0f26aa;\n            visibility: visible;\n        }\n    }\n\n    & > span {\n        position: relative;\n        padding-bottom: 0.25rem;\n    }\n\n    & > span::before {\n        content: '';\n        position: absolute;\n        width: 0;\n        height: 0.125rem;\n        bottom: 0;\n        left: 0;\n        background-color: #0f26aa;\n        visibility: hidden;\n        -ms-transition: all 0.25s ease-in-out 0s;\n        transition: all 0.25s ease-in-out 0s;\n    }\n\n    &:hover span::before,\n    &.active span::before {\n        visibility: visible;\n        width: 100%;\n    }\n`;\n\nconst HeaderLogo = styled.img`\n    ${logoStyle}\n    ${tw`block`};\n`;\n\nconst NewNavigation = ({\n    pageName,\n    showLogo,\n    appLink,\n    location,\n    isAnimation,\n    searchBar,\n    setSearchBar,\n    kModal,\n    setKModal,\n    platformModal,\n    setPlatformModal\n}) => {\n    const { pathname } = location;\n    const [activeLinks, setActiveLinks] = useState({\n        platform: false,\n        solutions: false,\n        resources: false,\n        company: false\n    });\n    const hideMegaMenu = useScrollTrigger();\n    const [hoveredNavItem, setHoveredNavItem] = useState(null);\n\n    const data = useStaticQuery(graphql`\n        query NewNavigationQuery {\n            markdownRemark(frontmatter: { slug: { eq: \"top-bar\" } }) {\n                frontmatter {\n                    enabled\n                }\n            }\n        }\n    `);\n\n    const { enabled } = data.markdownRemark.frontmatter;\n\n    const isNavItemHovered = (navItemName) => hoveredNavItem === navItemName;\n\n    return (\n        <nav\n            css={[\n                tw`relative block`,\n                (pageName === 'IAMCampaign' ||\n                    pageName === 'AWSCloudSecurityCampaign' ||\n                    pageName === 'CSPMSolutionCampaign') &&\n                    tw`container`,\n                isAnimatedNavbarPage(pathname) &&\n                    css`\n                        @media (min-width: 1024px) {\n                            margin-top: ${enabled ? '2.5rem' : '0rem'};\n                        }\n                        padding-left: 4.5rem;\n                    `\n            ]}\n        >\n            <div tw='mx-auto flex flex-row justify-between'>\n                <div tw='relative flex block py-6 justify-start'>\n                    {showLogo && (\n                        <Link to='/' className='inline-flex'>\n                            <HeaderLogo src={logo} alt='Cyscale' />\n                        </Link>\n                    )}\n                </div>\n                <ul className='flex flex-row'>\n                    <NavItem\n                        disabled={isAnimation}\n                        searchBar={searchBar}\n                        onMouseEnter={() => setHoveredNavItem('platform')}\n                        onMouseLeave={() => setHoveredNavItem(null)}\n                    >\n                        <NavItemButton\n                            data-text='Platform'\n                            type='button'\n                            className={`${\n                                ['SKGPage', 'CSPMPage', 'ComplianceAuditing', 'CNAPP'].includes(pageName) ||\n                                activeLinks.platform\n                                    ? 'active'\n                                    : ''\n                            }`}\n                        >\n                            <span>Platform</span>\n                        </NavItemButton>\n                        <MegaMenu css={[hideMegaMenu ? hiddenMegaMenuOnScroll : null]}>\n                            {isNavItemHovered('platform') && (\n                                <Platform\n                                    pathname={pathname}\n                                    activeLinks={activeLinks}\n                                    setActiveLinks={setActiveLinks}\n                                />\n                            )}\n                        </MegaMenu>\n                    </NavItem>\n                    <NavItem\n                        disabled={isAnimation}\n                        searchBar={searchBar}\n                        onMouseEnter={() => setHoveredNavItem('solutions')}\n                        onMouseLeave={() => setHoveredNavItem(null)}\n                    >\n                        <NavItemButton\n                            data-text='Solutions'\n                            type='button'\n                            className={`${\n                                [\n                                    'MisconfigurationsPage',\n                                    'IAMSecurity',\n                                    'Data_Security',\n                                    'RemoteWork',\n                                    'ISO27001Compliance',\n                                    'PCIDSS',\n                                    'SOC2',\n                                    'NIST',\n                                    'AWSCloudSecurity',\n                                    'AzureCloudSecurity',\n                                    'GCPCloudSecurity',\n                                    'OktaIntegration',\n                                    'FintechUseCase',\n                                    'MSSPPage',\n                                    'KSPMPage'\n                                ].includes(pageName) || activeLinks.solutions\n                                    ? 'active'\n                                    : ''\n                            }`}\n                        >\n                            <span>Solutions</span>\n                        </NavItemButton>\n                        <MegaMenu\n                            css={[hideMegaMenu ? hiddenMegaMenuOnScroll : null]}\n                            animatedNavbarPages={isAnimatedNavbarPage(pathname) && !isPlaygroundBlogPage(pathname)}\n                            left='-17rem'\n                        >\n                            {isNavItemHovered('solutions') && (\n                                <Solutions\n                                    pathname={pathname}\n                                    activeLinks={activeLinks}\n                                    setActiveLinks={setActiveLinks}\n                                    kModal={kModal}\n                                    setKModal={setKModal}\n                                    platformModal={platformModal}\n                                    setPlatformModal={setPlatformModal}\n                                />\n                            )}\n                        </MegaMenu>\n                    </NavItem>\n                    <NavItem>\n                        <NavItemButton data-text='Pricing' className={`${pageName === 'Pricing' ? 'active' : ''}`}>\n                            <span>\n                                <Link to='/pricing/' activeClassName='active' className='font-medium'>\n                                    Pricing\n                                </Link>\n                            </span>\n                        </NavItemButton>\n                    </NavItem>\n                    <NavItem\n                        disabled={isAnimation}\n                        searchBar={searchBar}\n                        onMouseEnter={() => setHoveredNavItem('resources')}\n                        onMouseLeave={() => setHoveredNavItem(null)}\n                    >\n                        <NavItemButton\n                            data-text='Resources'\n                            type='button'\n                            className={`${\n                                pageName === 'blog' ||\n                                pageName === 'blog-detail' ||\n                                [\n                                    'CloudComplianceWhitepaper',\n                                    'CloudStorageMisconfigurations',\n                                    'SmartFintech',\n                                    'BaysConsulting',\n                                    'Resources'\n                                ].includes(pageName) ||\n                                activeLinks.resources\n                                    ? 'active'\n                                    : ''\n                            }`}\n                        >\n                            <span>Resources</span>\n                        </NavItemButton>\n                        <MegaMenu\n                            css={[hideMegaMenu ? hiddenMegaMenuOnScroll : null]}\n                            animatedNavbarPages={isAnimatedNavbarPage(pathname) && !isPlaygroundBlogPage(pathname)}\n                            left='-4rem'\n                        >\n                            {isNavItemHovered('resources') && (\n                                <Resources\n                                    pathname={pathname}\n                                    activeLinks={activeLinks}\n                                    setActiveLinks={setActiveLinks}\n                                />\n                            )}\n                        </MegaMenu>\n                    </NavItem>\n                    <NavItem\n                        disabled={isAnimation}\n                        searchBar={searchBar}\n                        onMouseEnter={() => setHoveredNavItem('company')}\n                        onMouseLeave={() => setHoveredNavItem(null)}\n                    >\n                        <NavItemButton\n                            data-text='Company'\n                            type='button'\n                            className={`${\n                                ['aboutUs', 'careers', 'jobDetails', 'ContactUs'].includes(pageName) ||\n                                activeLinks.company\n                                    ? 'active'\n                                    : ''\n                            }`}\n                        >\n                            <span>Company</span>\n                        </NavItemButton>\n                        <MegaMenu css={[hideMegaMenu ? hiddenMegaMenuOnScroll : null]}>\n                            {isNavItemHovered('company') && (\n                                <Company\n                                    pathname={pathname}\n                                    activeLinks={activeLinks}\n                                    setActiveLinks={setActiveLinks}\n                                />\n                            )}\n                        </MegaMenu>\n                    </NavItem>\n                    <li className='py-6 pl-4'>\n                        <span\n                            tabIndex='0'\n                            onClick={() => setSearchBar(!searchBar)}\n                            role='button'\n                            aria-label='Search'\n                            onKeyDown={() => {}}\n                        >\n                            <img src={searchIcon} className='py-2 cursor-pointer' alt='' width={22} />\n                        </span>\n                    </li>\n                    <li className='py-6 pl-4'>\n                        <a href='https://app.cyscale.com' target='_blank' rel='noopener noreferrer'>\n                            <img src={loginIcon} className='py-2' alt='' />\n                        </a>\n                    </li>\n                    <li className='ml-auto py-6 pr-0 pl-7'>\n                        <Link\n                            className='bg-gradient-to-r from-[#0F26AA] to-[#FF4A56] hover:from-[#FF4A56] hover:to-[#0F26AA] w-auto text-sm px-4 border-transparent box-border rounded-md h-10 hidden xl:flex justify-center items-center uppercase leading-none text-white transition duration-500 hover:no-underline font-medium'\n                            to='/request-demo/'\n                        >\n                            Book a demo\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n};\n\nexport default NewNavigation;\n"],"names":["MegaMenu","_styled","target","_ref","animatedNavbarPages","left","NavItem","_ref2","disabled","_ref3","searchBar","_ref4","_ref5","_ref6","_ref7","hiddenMegaMenuOnScroll","name","styles","NavItemButton","HeaderLogo","logoStyle","_ref9","_ref10","_ref8","pageName","showLogo","appLink","location","isAnimation","setSearchBar","kModal","setKModal","platformModal","setPlatformModal","pathname","activeLinks","setActiveLinks","useState","platform","solutions","resources","company","hideMegaMenu","useScrollTrigger","hoveredNavItem","setHoveredNavItem","data","useStaticQuery","enabled","markdownRemark","frontmatter","isNavItemHovered","navItemName","___EmotionJSX","css","isAnimatedNavbarPage","Link","to","className","src","logo","alt","onMouseEnter","onMouseLeave","type","includes","Platform","isPlaygroundBlogPage","Solutions","activeClassName","Resources","Company","tabIndex","onClick","role","onKeyDown","searchIcon","width","href","rel","loginIcon"],"sourceRoot":""}